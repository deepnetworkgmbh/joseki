FROM mcr.microsoft.com/dotnet/core/sdk:3.1.301-alpine3.12 AS build
WORKDIR /app/src
COPY /src .
RUN dotnet build joseki.azsk-scanner.sln -c Release


FROM build AS testrunner
WORKDIR /app/src/tests
ENTRYPOINT ["dotnet","test","--logger:trx;LogFileName=test_results.xml","--no-build","-c","Release","-r","/app/testresults"]


FROM build AS publish-cli
WORKDIR /app/src
RUN dotnet publish cli/cli.csproj -c Release -o /app/publish --no-restore --no-build


FROM mcr.microsoft.com/dotnet/core/runtime:3.1.5-alpine3.12 AS cliapp

# install the requirements for powershell
RUN apk add --no-cache \
    ca-certificates=~20191127-r1 \
    less=~551-r0 \
    ncurses-terminfo-base=~6.1 \
    krb5-libs=~1.17.1-r0 \
    libgcc=~9.2.0-r4 \
    libintl=~0.20.1-r2 \
    libssl1.1=~1.1.1d-r3 \
    libstdc++=~9.2.0-r4 \
    lttng-ust=~2.10.4-r0 \
    tzdata=2019c-r0 \
    userspace-rcu=~0.11.1-r0 \
    zlib=~1.2.11-r3 \
    icu-libs=~64.2-r1 \
    curl=~7.67.0-r0

# Download the powershell '.tar.gz' archive
RUN curl -L https://github.com/PowerShell/PowerShell/releases/download/v7.0.2/powershell-7.0.2-linux-alpine-x64.tar.gz -o /tmp/powershell.tar.gz

# Create the target folder where powershell will be placed
RUN mkdir -p /opt/microsoft/powershell/7

# Expand powershell to the target folder
RUN tar zxf /tmp/powershell.tar.gz -C /opt/microsoft/powershell/7

# Set execute permissions
RUN chmod +x /opt/microsoft/powershell/7/pwsh

# Create the symbolic link that points to pwsh
RUN ln -s /opt/microsoft/powershell/7/pwsh /usr/bin/powershell

# Install az-sk module
ENV AZSK_VERSION=4.9.0
RUN powershell -Command Install-Module AzSK -RequiredVersion "$AZSK_VERSION" -Force

WORKDIR /app
COPY --from=publish-cli /app/publish .

COPY ps/azsk.ps1 /app/azsk.ps1

ENTRYPOINT ["dotnet","cli.dll"]
