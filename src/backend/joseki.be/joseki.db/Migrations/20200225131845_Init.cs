// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore.Migrations;

namespace joseki.db.Migrations
{
#pragma warning disable 1591
    public partial class Init : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "Audit",
                columns: table => new
                {
                    Id = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    DateUpdated = table.Column<DateTime>(nullable: false),
                    DateCreated = table.Column<DateTime>(nullable: false),
                    ChangedBy = table.Column<string>(nullable: true),
                    AuditId = table.Column<string>(nullable: false),
                    Date = table.Column<DateTime>(nullable: false),
                    ScannerId = table.Column<string>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Audit", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "Check",
                columns: table => new
                {
                    Id = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    DateUpdated = table.Column<DateTime>(nullable: false),
                    DateCreated = table.Column<DateTime>(nullable: false),
                    ChangedBy = table.Column<string>(nullable: true),
                    CheckId = table.Column<string>(nullable: false),
                    Category = table.Column<string>(nullable: true),
                    Severity = table.Column<string>(nullable: false),
                    Description = table.Column<string>(nullable: true),
                    Remediation = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Check", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "Cve",
                columns: table => new
                {
                    Id = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    DateUpdated = table.Column<DateTime>(nullable: false),
                    DateCreated = table.Column<DateTime>(nullable: false),
                    ChangedBy = table.Column<string>(nullable: true),
                    CveId = table.Column<string>(nullable: false),
                    Title = table.Column<string>(nullable: true),
                    PackageName = table.Column<string>(nullable: false),
                    Description = table.Column<string>(nullable: true),
                    Severity = table.Column<string>(nullable: false),
                    Remediation = table.Column<string>(nullable: true),
                    References = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Cve", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "ImageScanResult",
                columns: table => new
                {
                    Id = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    DateUpdated = table.Column<DateTime>(nullable: false),
                    DateCreated = table.Column<DateTime>(nullable: false),
                    ChangedBy = table.Column<string>(nullable: true),
                    ExternalId = table.Column<string>(nullable: false),
                    ImageTag = table.Column<string>(nullable: false),
                    Date = table.Column<DateTime>(nullable: false),
                    Status = table.Column<string>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ImageScanResult", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "CheckResult",
                columns: table => new
                {
                    Id = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    DateUpdated = table.Column<DateTime>(nullable: false),
                    DateCreated = table.Column<DateTime>(nullable: false),
                    ChangedBy = table.Column<string>(nullable: true),
                    CheckId = table.Column<int>(nullable: false),
                    ComponentId = table.Column<string>(nullable: false),
                    AuditId = table.Column<int>(nullable: false),
                    Value = table.Column<string>(nullable: false),
                    Message = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_CheckResult", x => x.Id);
                    table.ForeignKey(
                        name: "FK_CheckResult_Audit_AuditId",
                        column: x => x.AuditId,
                        principalTable: "Audit",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "MetadataAzure",
                columns: table => new
                {
                    Id = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    DateUpdated = table.Column<DateTime>(nullable: false),
                    DateCreated = table.Column<DateTime>(nullable: false),
                    ChangedBy = table.Column<string>(nullable: true),
                    AuditId = table.Column<int>(nullable: false),
                    Date = table.Column<DateTime>(nullable: false),
                    JSON = table.Column<string>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MetadataAzure", x => x.Id);
                    table.ForeignKey(
                        name: "FK_MetadataAzure_Audit_AuditId",
                        column: x => x.AuditId,
                        principalTable: "Audit",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "MetadataKube",
                columns: table => new
                {
                    Id = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    DateUpdated = table.Column<DateTime>(nullable: false),
                    DateCreated = table.Column<DateTime>(nullable: false),
                    ChangedBy = table.Column<string>(nullable: true),
                    AuditId = table.Column<int>(nullable: false),
                    Date = table.Column<DateTime>(nullable: false),
                    JSON = table.Column<string>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MetadataKube", x => x.Id);
                    table.ForeignKey(
                        name: "FK_MetadataKube_Audit_AuditId",
                        column: x => x.AuditId,
                        principalTable: "Audit",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "ImageScanResultToCve",
                columns: table => new
                {
                    Id = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    DateUpdated = table.Column<DateTime>(nullable: false),
                    DateCreated = table.Column<DateTime>(nullable: false),
                    ChangedBy = table.Column<string>(nullable: true),
                    ScanId = table.Column<int>(nullable: false),
                    CveId = table.Column<int>(nullable: false),
                    Target = table.Column<string>(nullable: false),
                    UsedPackageVersion = table.Column<string>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ImageScanResultToCve", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ImageScanResultToCve_Cve_CveId",
                        column: x => x.CveId,
                        principalTable: "Cve",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_ImageScanResultToCve_ImageScanResult_ScanId",
                        column: x => x.ScanId,
                        principalTable: "ImageScanResult",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateIndex(
                name: "IX_Audit_Date_ScannerId",
                table: "Audit",
                columns: new[] { "Date", "ScannerId" },
                unique: true)
                .Annotation("SqlServer:Include", new[] { "AuditId" });

            migrationBuilder.CreateIndex(
                name: "IX_Check_CheckId",
                table: "Check",
                column: "CheckId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_CheckResult_AuditId",
                table: "CheckResult",
                column: "AuditId");

            migrationBuilder.CreateIndex(
                name: "IX_CheckResult_ComponentId_Value",
                table: "CheckResult",
                columns: new[] { "ComponentId", "Value" },
                filter: "[VALUE] = 'InProgress'");

            migrationBuilder.CreateIndex(
                name: "IX_Cve_CveId",
                table: "Cve",
                column: "CveId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_ImageScanResult_ImageTag_Date",
                table: "ImageScanResult",
                columns: new[] { "ImageTag", "Date" },
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_ImageScanResultToCve_CveId",
                table: "ImageScanResultToCve",
                column: "CveId");

            migrationBuilder.CreateIndex(
                name: "IX_ImageScanResultToCve_ScanId",
                table: "ImageScanResultToCve",
                column: "ScanId");

            migrationBuilder.CreateIndex(
                name: "IX_MetadataAzure_AuditId",
                table: "MetadataAzure",
                column: "AuditId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_MetadataKube_AuditId",
                table: "MetadataKube",
                column: "AuditId",
                unique: true);
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "Check");

            migrationBuilder.DropTable(
                name: "CheckResult");

            migrationBuilder.DropTable(
                name: "ImageScanResultToCve");

            migrationBuilder.DropTable(
                name: "MetadataAzure");

            migrationBuilder.DropTable(
                name: "MetadataKube");

            migrationBuilder.DropTable(
                name: "Cve");

            migrationBuilder.DropTable(
                name: "ImageScanResult");

            migrationBuilder.DropTable(
                name: "Audit");
        }
    }
#pragma warning restore 1591
}
