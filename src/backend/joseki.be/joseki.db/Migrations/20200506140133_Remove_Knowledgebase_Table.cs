using System;
using Microsoft.EntityFrameworkCore.Migrations;

namespace joseki.db.Migrations
{
#pragma warning disable 1591, SA1601, SA1118
    public partial class Remove_Knowledgebase_Table : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "Knowledgebase");
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "Knowledgebase",
                columns: table => new
                {
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ChangedBy = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Content = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DateCreated = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DateUpdated = table.Column<DateTime>(type: "datetime2", nullable: false),
                    ItemId = table.Column<string>(type: "nvarchar(450)", nullable: true),
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Knowledgebase", x => x.Id);
                });

            migrationBuilder.InsertData(
                table: "Knowledgebase",
                columns: new[] { "Id", "ChangedBy", "Content", "DateCreated", "DateUpdated", "ItemId" },
                values: new object[,]
                {
                    { 1, null, "Kubernetes provides a great deal of configurability when it comes to the security of your workloads. A key principle here involves limiting the level of access any individual workload has. Polaris has validations for a number of best practices, mostly focused on ensuring that unnecessary access has not been granted to an application workload.", new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), "polaris.security" },
                    { 28, null, "Azure AKS configuration: RBAC amd AAD integration, k8s version, public access, etc. The entire list is at https://aka.ms/azsktcp/KubernetesService", new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), "azsk.kubernetesservice" },
                    { 29, null, "Azure Load Balancer config: RBAC, logs, public-ips. the entire list is at https://aka.ms/azsktcp/loadbalancer", new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), "azsk.loadbalancer" },
                    { 30, null, "Azure Log Analytics config", new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), "azsk.loganalytics" },
                    { 31, null, "Verifies if Logic App connectors use AAD-based authentication and data transit across connectors use encrypted channel. The entire list is at https://aka.ms/azsktcp/logicapps", new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), "azsk.logicapps" },
                    { 32, null, "Azure Notification Hub configuration: access-policies and RBAC, logging and recovery policies. The entire list is at https://aka.ms/azsktcp/notificationhub", new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), "azsk.notificationhub" },
                    { 33, null, "Azure on-premise data-gateway configuration: user permissions, logging, OS hardening. The entire list is at https://aka.ms/azsktcp/odg", new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), "azsk.odg" },
                    { 34, null, "Azure managed Redis cache configuration: firewall and user-access, keys rotation, vnet. The entire list is at https://aka.ms/azsktcp/rediscache", new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), "azsk.rediscache" },
                    { 35, null, "Azure Search service configuration: access-control, data encryption, replication. The entire list is at https://aka.ms/azsktcp/search", new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), "azsk.search" },
                    { 36, null, "Azure Service Bus service configuration: access-policies and tokens, data-encryption, recovery, etc. The entire list is at https://aka.ms/azsktcp/servicebus", new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), "azsk.servicebus" },
                    { 37, null, "Azure Service Fabric config: data replication and encryption, secrets management, size of replicas sets, AAD, and others. The entire list is at https://aka.ms/azsktcp/servicefabric", new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), "azsk.servicefabric" },
                    { 38, null, "Azure Storage service configuration: public access (HTTPS, CORS, disabled anonymous access), access-management and secrets rotation, AAD. The entire list is at https://aka.ms/azsktcp/storage", new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), "azsk.storage" },
                    { 39, null, "Azure Stream Analytics config: RBAC, logs, backup. The entire list is at https://aka.ms/azsktcp/streamanalytics", new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), "azsk.streamanalytics" },
                    { 40, null, "Azure subscription related checks: amount of admin accounts, permissions and users, certificates, MFA, and others. The entire list is at https://aka.ms/azsktcp/sshealth", new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), "azsk.subscriptioncore" },
                    { 41, null, "Azure managed MS SQL Server configuration: user access, encryption, firewall. The entire list is at https://aka.ms/azsktcp/sqldatabase", new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), "azsk.sqldatabase" },
                    { 42, null, "Azure Traffic Manager HTTPS and RBAC configuration. The entire list is at https://aka.ms/azsktcp/trafficmanager", new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), "azsk.trafficmanager" },
                    { 43, null, "Azure VM config: OS, network, disk, policies. The entire list is at https://aka.ms/azsktcp/virtualmachine", new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), "azsk.virtualmachine" },
                    { 44, null, "Azure VM Scale Sets config: version, enabled antimalware, VNet and RBAC, etc. The entire list is at https://aka.ms/azsktcp/virtualmachinescaleset", new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), "azsk.virtualmachinescaleset" },
                    { 45, null, "Azure Network configuration: IPs, RBAC, security-groups. The entire list is at https://aka.ms/azsktcp/virtualnetwork", new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), "azsk.virtualnetwork" },
                    { 46, null, "NoData means one of the following: 1. Joseki is not able to perform the Check due to not sufficient permissions; 2. Docker Image scanner was not able to complete a scan; 3. the Check requires a manual step to be performed", new DateTime(2020, 3, 12, 13, 33, 48, 595, DateTimeKind.Utc).AddTicks(7551), new DateTime(2020, 3, 12, 13, 33, 48, 595, DateTimeKind.Utc).AddTicks(7551), "metadata.checks_nodata_description" },
                    { 47, null, "Warning indicates when Joseki found, likely, a not critical issue with a particular infrastructure component", new DateTime(2020, 3, 12, 13, 33, 48, 595, DateTimeKind.Utc).AddTicks(7551), new DateTime(2020, 3, 12, 13, 33, 48, 595, DateTimeKind.Utc).AddTicks(7551), "metadata.checks_warning_description" },
                    { 48, null, "Failed check highlights the most critical issues that should be reviewed first", new DateTime(2020, 3, 12, 13, 33, 48, 595, DateTimeKind.Utc).AddTicks(7551), new DateTime(2020, 3, 12, 13, 33, 48, 595, DateTimeKind.Utc).AddTicks(7551), "metadata.checks_failed_description" },
                    { 27, null, "Azure Key Vault config: RBAC, secrets rotation, logging. the entire list is at https://azsk.azurewebsites.net/02-Secure-Development/ControlCoverage/Feature/KeyVault.html", new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), "azsk.keyvault" },
                    { 26, null, "Azure HDInsights config: data-encryption, proper networking configuration, HDI version, and others. The entire list is at https://azsk.azurewebsites.net/02-Secure-Development/ControlCoverage/Feature/HDInsight.html", new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), "azsk.hdinsight" },
                    { 25, null, "Azure ERvNet configuration. The entire list is at https://aka.ms/azsktcp/ervnet", new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), "azsk.ervnet" },
                    { 24, null, "Groups Azure Event Hub verifications: access-control, data-encryption, logs. The entire list is at https://aka.ms/azsktcp/eventhub", new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), "azsk.eventhub" },
                    { 2, null, "Networking configuration in Kubernetes can be quite powerful. Polaris validates that pods are not configured to have access to sensitive host networking configuration. There are certain use cases such as a container overlay network like Calico, where this level of access is required, but the majority of workloads running on Kubernetes should not need this.", new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), "polaris.networking" },
                    { 3, null, "Configuring resource requests and limits for workloads running in Kubernetes helps ensure that every container will have access to all the resources it needs. These are also a crucial part of cluster autoscaling logic, as new nodes are only spun up when there is insufficient capacity on existing infrastructure for new pod(s). By default, Polaris validates that resource requests and limits are set, it also includes optional functionality to ensure these requests and limits fall within specified ranges.", new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), "polaris.resources" },
                    { 4, null, "Properly configured health checks can ensure the long term availability and reliability of your application running in Kubernetes. Polaris validates that health checks are configured for each pod running in your cluster.", new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), "polaris.healthchecks" },
                    { 5, null, "Images are the backbone of any Kubernetes cluster, containing the applications that run in each container. Polaris validates that images are configured with specific tags instead of just pulling the latest image on each run. This is important for the stability and security of your workloads.", new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), "polaris.images" },
                    { 6, null, "A set of verifications related to Azure Analysis services. It enforces: sensitive data encryption, proper RBAC and AAD configuration, backup setup. the entire list is at https://aka.ms/azsktcp/analysisservices", new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), "azsk.analysisservices" },
                    { 7, null, "Verifies if Logic App connectors use AAD-based authentication and data transit across connectors use encrypted channel. The entire list is at https://aka.ms/azsktcp/logicapps", new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), "azsk.apiconnection" },
                    { 8, null, "Group of checks for Azure API Management service: RBAC, alerts, enabled diagnostic-logs, TLS configuration, secrets management and others. The entire list is at https://aka.ms/azsktcp/apim", new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), "azsk.apimanagement" },
                    { 9, null, "Verifies if Azure App Service is properly configured: SSL, Active directory configuration, secrets management, webhooks, alerts, etc. The entire list is at https://aka.ms/azsktcp/appservice", new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), "azsk.appservice" },
                    { 10, null, "Azure ApplicationProxy related checks: AAD, personal-data management, gateway-machine configuration. The entire list is at https://github.com/azsk/DevOpsKit-docs/blob/master/02-Secure-Development/ControlCoverage/Feature/ApplicationProxy.md", new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), "azsk.applicationproxy" },
                    { 11, null, "Verifies that Azure Automation is properly setup: variables are encrypted, webhooks are safe, log-analytics integration. The entire list is at https://aka.ms/azsktcp/automation", new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), "azsk.automation" },
                    { 49, null, "You're good ;) A component satisfies verified rule", new DateTime(2020, 3, 12, 13, 33, 48, 595, DateTimeKind.Utc).AddTicks(7551), new DateTime(2020, 3, 12, 13, 33, 48, 595, DateTimeKind.Utc).AddTicks(7551), "metadata.checks_passed_description" },
                    { 12, null, "Azure Batch service verifications: proper ADD permissions are set, data is encrypted, alerts are set. The entire list is at https://aka.ms/azsktcp/batch", new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), "azsk.batch" },
                    { 14, null, "Azure CDN checks: RBAC and HTTPS configuration. The entire list is at https://aka.ms/azsktcp/cdn", new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), "azsk.cdn" },
                    { 15, null, "Azure Cloud Service verification: HTTPS configuration, switched-off remote debugging, OS version, RDP, and others. The entire list is at https://aka.ms/azsktcp/cloudservice", new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), "azsk.cloudservice" },
                    { 16, null, "A group of checks related to Azure Container Instances. The entire list is at https://aka.ms/azsktcp/containerinstances", new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), "azsk.containerinstances" },
                    { 17, null, "Verifies Azure Container Registry: admin user is disabled, RBAC, image-vulnerabilities scans, logs, and others. The entire list is at https://aka.ms/azsktcp/containerregistry", new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), "azsk.containerregistry" },
                    { 18, null, "Azure CosmosDB should: use firewall, use only trusted network, has failover and backups setuped. The entire list is at https://aka.ms/azsktcp/cosmosdb", new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), "azsk.cosmosdb" },
                    { 19, null, "A set of checks for Azure Databricks: secrets management, RBAC and users management. The entire list is at https://github.com/azsk/DevOpsKit-docs/blob/master/02-Secure-Development/ControlCoverage/Feature/Databricks.md", new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), "azsk.databricks" },
                    { 20, null, "Azure Data Factory is properly configured: data is encrypted, keys are rotated, monitoring is enabled. The entire list is at https://aka.ms/azsktcp/datafactory", new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), "azsk.datafactory" },
                    { 21, null, "Azure Data Factory V2 configration. The entire list is at https://https://github.com/azsk/DevOpsKit-docs/blob/master/02-Secure-Development/ControlCoverage/Feature/DataFactoryV2.md", new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), "azsk.datafactoryv2" },
                    { 22, null, "Azure Data Lake configuration: proper AAD usage, data is encrypted and backup-ed, monitoring is enabled. The entire list is at https://aka.ms/azsktcp/datalakeanalytics", new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), "azsk.datalakeanalytics" },
                    { 23, null, "Azure Data Lake Store configuration: AAD, access-control list, firewall, and others. The entire list is at https://aka.ms/azsktcp/datalakestore", new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), "azsk.datalakestore" },
                    { 13, null, "Group of checks for Azure Bot service: traffic management, enabled logging. The entire list is at https://github.com/azsk/DevOpsKit-docs/blob/master/02-Secure-Development/ControlCoverage/Feature/BotService.md", new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), new DateTime(2020, 3, 9, 12, 56, 38, 559, DateTimeKind.Utc).AddTicks(793), "azsk.botservice" },
                    { 50, null, "The audit score indicates how close the infrastructure is to known best-practices configuration. The formula excludes NoData checks, gives doubled weight to Passed and Failed results: (Passed*2)/(Failed*2 + Passed*2 + Warning)", new DateTime(2020, 3, 12, 13, 33, 48, 595, DateTimeKind.Utc).AddTicks(7551), new DateTime(2020, 3, 12, 13, 33, 48, 595, DateTimeKind.Utc).AddTicks(7551), "metadata.checks_score_description" },
                });

            migrationBuilder.CreateIndex(
                name: "IX_Knowledgebase_ItemId",
                table: "Knowledgebase",
                column: "ItemId",
                unique: true,
                filter: "[ItemId] IS NOT NULL");
        }
    }
#pragma warning restore 1591, SA1601, SA1118
}
