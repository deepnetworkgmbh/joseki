{
  "scanner": {
    "type": 1,
    "id": "8fc1b601-d5a2-466d-8236-c747c1dc02a2",
    "periodicity": "0 2 * * *",
    "heartbeat-periodicity": 86400,
    "heartbeat": 1587088853
  },
  "audit": {
    "audit-id": "4ae9c0a2-458b-4b7d-aa76-42e3d6a5cb35",
    "cluster-id": "8fc1b601-d5a2-466d-8236-c747c1dc02a2",
    "scanner-version": "0.3.0-sha-37904e3c",
    "timestamp": 1588730414,
    "result": "succeeded",
    "failure-description": null,
    "polaris-version": "0.6.0",
    "polaris-audit-path": "20200506-020014-dbd7a3/audit.json",
    "k8s-meta-path": "20200506-020014-dbd7a3/k8s-meta.json"
  },
  "cluster": {
    "ServerVersion": "1.16",
    "CreationTime": "2020-05-06T02:00:14.288846434Z",
    "SourceName": "https://10.0.0.1:443",
    "SourceType": "Cluster",
    "Deployments": [
      {
        "metadata": {
          "name": "cert-manager",
          "namespace": "cert-manager",
          "selfLink": "/apis/apps/v1/namespaces/cert-manager/deployments/cert-manager",
          "uid": "a4afdabf-3590-4b68-8475-9b80eff3f2eb",
          "resourceVersion": "8880262",
          "generation": 1,
          "creationTimestamp": "2020-03-26T14:12:15Z",
          "labels": {
            "app": "cert-manager",
            "app.kubernetes.io/component": "controller",
            "app.kubernetes.io/instance": "cert-manager",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "cert-manager",
            "helm.sh/chart": "cert-manager-v0.14.0",
            "owner": "dummy1@dummy.com"
          },
          "annotations": {
            "deployment.kubernetes.io/revision": "1",
            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"cert-manager\",\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"cert-manager\",\"app.kubernetes.io/managed-by\":\"Helm\",\"app.kubernetes.io/name\":\"cert-manager\",\"helm.sh/chart\":\"cert-manager-v0.14.0\"},\"name\":\"cert-manager\",\"namespace\":\"cert-manager\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"cert-manager\",\"app.kubernetes.io/name\":\"cert-manager\"}},\"template\":{\"metadata\":{\"annotations\":{\"prometheus.io/path\":\"/metrics\",\"prometheus.io/port\":\"9402\",\"prometheus.io/scrape\":\"true\"},\"labels\":{\"app\":\"cert-manager\",\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"cert-manager\",\"app.kubernetes.io/managed-by\":\"Helm\",\"app.kubernetes.io/name\":\"cert-manager\",\"helm.sh/chart\":\"cert-manager-v0.14.0\"}},\"spec\":{\"containers\":[{\"args\":[\"--v=2\",\"--cluster-resource-namespace=$(POD_NAMESPACE)\",\"--leader-election-namespace=kube-system\",\"--webhook-namespace=$(POD_NAMESPACE)\",\"--webhook-ca-secret=cert-manager-webhook-ca\",\"--webhook-serving-secret=cert-manager-webhook-tls\",\"--webhook-dns-names=cert-manager-webhook,cert-manager-webhook.cert-manager,cert-manager-webhook.cert-manager.svc\"],\"env\":[{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}}],\"image\":\"quay.io/jetstack/cert-manager-controller:v0.14.0\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"cert-manager\",\"ports\":[{\"containerPort\":9402,\"protocol\":\"TCP\"}],\"resources\":{}}],\"serviceAccountName\":\"cert-manager\"}}}}\n"
          }
        },
        "spec": {
          "replicas": 1,
          "selector": {
            "matchLabels": {
              "app.kubernetes.io/component": "controller",
              "app.kubernetes.io/instance": "cert-manager",
              "app.kubernetes.io/name": "cert-manager"
            }
          },
          "template": {
            "metadata": {
              "creationTimestamp": null,
              "labels": {
                "app": "cert-manager",
                "app.kubernetes.io/component": "controller",
                "app.kubernetes.io/instance": "cert-manager",
                "app.kubernetes.io/managed-by": "Helm",
                "app.kubernetes.io/name": "cert-manager",
                "helm.sh/chart": "cert-manager-v0.14.0"
              },
              "annotations": {
                "prometheus.io/path": "/metrics",
                "prometheus.io/port": "9402",
                "prometheus.io/scrape": "true"
              }
            },
            "spec": {
              "containers": [
                {
                  "name": "cert-manager",
                  "image": "quay.io/jetstack/cert-manager-controller:v0.14.0",
                  "args": [ "--v=2", "--cluster-resource-namespace=$(POD_NAMESPACE)", "--leader-election-namespace=kube-system", "--webhook-namespace=$(POD_NAMESPACE)", "--webhook-ca-secret=cert-manager-webhook-ca", "--webhook-serving-secret=cert-manager-webhook-tls", "--webhook-dns-names=cert-manager-webhook,cert-manager-webhook.cert-manager,cert-manager-webhook.cert-manager.svc" ],
                  "ports": [
                    {
                      "containerPort": 9402,
                      "protocol": "TCP"
                    }
                  ],
                  "env": [
                    {
                      "name": "POD_NAMESPACE",
                      "valueFrom": {
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        }
                      }
                    }
                  ],
                  "resources": {},
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "imagePullPolicy": "IfNotPresent"
                }
              ],
              "restartPolicy": "Always",
              "terminationGracePeriodSeconds": 30,
              "dnsPolicy": "ClusterFirst",
              "serviceAccountName": "cert-manager",
              "serviceAccount": "cert-manager",
              "securityContext": {},
              "schedulerName": "default-scheduler"
            }
          },
          "strategy": {
            "type": "RollingUpdate",
            "rollingUpdate": {
              "maxUnavailable": "25%",
              "maxSurge": "25%"
            }
          },
          "revisionHistoryLimit": 10,
          "progressDeadlineSeconds": 600
        },
        "status": {
          "observedGeneration": 1,
          "replicas": 1,
          "updatedReplicas": 1,
          "readyReplicas": 1,
          "availableReplicas": 1,
          "conditions": [
            {
              "type": "Available",
              "status": "True",
              "lastUpdateTime": "2020-03-26T14:12:23Z",
              "lastTransitionTime": "2020-03-26T14:12:23Z",
              "reason": "MinimumReplicasAvailable",
              "message": "Deployment has minimum availability."
            },
            {
              "type": "Progressing",
              "status": "True",
              "lastUpdateTime": "2020-03-26T14:12:23Z",
              "lastTransitionTime": "2020-03-26T14:12:15Z",
              "reason": "NewReplicaSetAvailable",
              "message": "ReplicaSet \"cert-manager-57cdd66b\" has successfully progressed."
            }
          ]
        }
      },
      {
        "metadata": {
          "name": "cert-manager-cainjector",
          "namespace": "cert-manager",
          "selfLink": "/apis/apps/v1/namespaces/cert-manager/deployments/cert-manager-cainjector",
          "uid": "26ea2f79-6cfb-422a-a7ab-7ad6efe4c989",
          "resourceVersion": "16408098",
          "generation": 1,
          "creationTimestamp": "2020-03-26T14:12:15Z",
          "labels": {
            "app": "cainjector",
            "app.kubernetes.io/component": "cainjector",
            "app.kubernetes.io/instance": "cert-manager",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "cainjector",
            "helm.sh/chart": "cert-manager-v0.14.0",
            "owner": "dummy2@dummy.com"
          },
          "annotations": {
            "deployment.kubernetes.io/revision": "1",
            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"cainjector\",\"app.kubernetes.io/component\":\"cainjector\",\"app.kubernetes.io/instance\":\"cert-manager\",\"app.kubernetes.io/managed-by\":\"Helm\",\"app.kubernetes.io/name\":\"cainjector\",\"helm.sh/chart\":\"cert-manager-v0.14.0\"},\"name\":\"cert-manager-cainjector\",\"namespace\":\"cert-manager\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app.kubernetes.io/component\":\"cainjector\",\"app.kubernetes.io/instance\":\"cert-manager\",\"app.kubernetes.io/name\":\"cainjector\"}},\"template\":{\"metadata\":{\"annotations\":null,\"labels\":{\"app\":\"cainjector\",\"app.kubernetes.io/component\":\"cainjector\",\"app.kubernetes.io/instance\":\"cert-manager\",\"app.kubernetes.io/managed-by\":\"Helm\",\"app.kubernetes.io/name\":\"cainjector\",\"helm.sh/chart\":\"cert-manager-v0.14.0\"}},\"spec\":{\"containers\":[{\"args\":[\"--v=2\",\"--leader-election-namespace=kube-system\"],\"env\":[{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}}],\"image\":\"quay.io/jetstack/cert-manager-cainjector:v0.14.0\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"cert-manager\",\"resources\":{}}],\"serviceAccountName\":\"cert-manager-cainjector\"}}}}\n"
          }
        },
        "spec": {
          "replicas": 1,
          "selector": {
            "matchLabels": {
              "app.kubernetes.io/component": "cainjector",
              "app.kubernetes.io/instance": "cert-manager",
              "app.kubernetes.io/name": "cainjector"
            }
          },
          "template": {
            "metadata": {
              "creationTimestamp": null,
              "labels": {
                "app": "cainjector",
                "app.kubernetes.io/component": "cainjector",
                "app.kubernetes.io/instance": "cert-manager",
                "app.kubernetes.io/managed-by": "Helm",
                "app.kubernetes.io/name": "cainjector",
                "helm.sh/chart": "cert-manager-v0.14.0"
              }
            },
            "spec": {
              "containers": [
                {
                  "name": "cert-manager",
                  "image": "quay.io/jetstack/cert-manager-cainjector:v0.14.0",
                  "args": [ "--v=2", "--leader-election-namespace=kube-system" ],
                  "env": [
                    {
                      "name": "POD_NAMESPACE",
                      "valueFrom": {
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        }
                      }
                    }
                  ],
                  "resources": {},
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "imagePullPolicy": "IfNotPresent"
                }
              ],
              "restartPolicy": "Always",
              "terminationGracePeriodSeconds": 30,
              "dnsPolicy": "ClusterFirst",
              "serviceAccountName": "cert-manager-cainjector",
              "serviceAccount": "cert-manager-cainjector",
              "securityContext": {},
              "schedulerName": "default-scheduler"
            }
          },
          "strategy": {
            "type": "RollingUpdate",
            "rollingUpdate": {
              "maxUnavailable": "25%",
              "maxSurge": "25%"
            }
          },
          "revisionHistoryLimit": 10,
          "progressDeadlineSeconds": 600
        },
        "status": {
          "observedGeneration": 1,
          "replicas": 1,
          "updatedReplicas": 1,
          "readyReplicas": 1,
          "availableReplicas": 1,
          "conditions": [
            {
              "type": "Progressing",
              "status": "True",
              "lastUpdateTime": "2020-03-26T14:12:21Z",
              "lastTransitionTime": "2020-03-26T14:12:15Z",
              "reason": "NewReplicaSetAvailable",
              "message": "ReplicaSet \"cert-manager-cainjector-79f4496665\" has successfully progressed."
            },
            {
              "type": "Available",
              "status": "True",
              "lastUpdateTime": "2020-04-28T16:08:56Z",
              "lastTransitionTime": "2020-04-28T16:08:56Z",
              "reason": "MinimumReplicasAvailable",
              "message": "Deployment has minimum availability."
            }
          ]
        }
      },
      {
        "metadata": {
          "name": "cert-manager-webhook",
          "namespace": "cert-manager",
          "selfLink": "/apis/apps/v1/namespaces/cert-manager/deployments/cert-manager-webhook",
          "uid": "44c47383-57ba-4cc7-a9cb-869c085de67e",
          "resourceVersion": "8880341",
          "generation": 1,
          "creationTimestamp": "2020-03-26T14:12:15Z",
          "labels": {
            "app": "webhook",
            "app.kubernetes.io/component": "webhook",
            "app.kubernetes.io/instance": "cert-manager",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "webhook",
            "helm.sh/chart": "cert-manager-v0.14.0",
            "owner": "dummy3@dummy.com"
          },
          "annotations": {
            "deployment.kubernetes.io/revision": "1",
            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"webhook\",\"app.kubernetes.io/component\":\"webhook\",\"app.kubernetes.io/instance\":\"cert-manager\",\"app.kubernetes.io/managed-by\":\"Helm\",\"app.kubernetes.io/name\":\"webhook\",\"helm.sh/chart\":\"cert-manager-v0.14.0\"},\"name\":\"cert-manager-webhook\",\"namespace\":\"cert-manager\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app.kubernetes.io/component\":\"webhook\",\"app.kubernetes.io/instance\":\"cert-manager\",\"app.kubernetes.io/name\":\"webhook\"}},\"template\":{\"metadata\":{\"annotations\":null,\"labels\":{\"app\":\"webhook\",\"app.kubernetes.io/component\":\"webhook\",\"app.kubernetes.io/instance\":\"cert-manager\",\"app.kubernetes.io/managed-by\":\"Helm\",\"app.kubernetes.io/name\":\"webhook\",\"helm.sh/chart\":\"cert-manager-v0.14.0\"}},\"spec\":{\"containers\":[{\"args\":[\"--v=2\",\"--secure-port=10250\",\"--tls-cert-file=/certs/tls.crt\",\"--tls-private-key-file=/certs/tls.key\"],\"env\":[{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}}],\"image\":\"quay.io/jetstack/cert-manager-webhook:v0.14.0\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/livez\",\"port\":6080,\"scheme\":\"HTTP\"}},\"name\":\"cert-manager\",\"readinessProbe\":{\"httpGet\":{\"path\":\"/healthz\",\"port\":6080,\"scheme\":\"HTTP\"}},\"resources\":{},\"volumeMounts\":[{\"mountPath\":\"/certs\",\"name\":\"certs\"}]}],\"serviceAccountName\":\"cert-manager-webhook\",\"volumes\":[{\"name\":\"certs\",\"secret\":{\"secretName\":\"cert-manager-webhook-tls\"}}]}}}}\n"
          }
        },
        "spec": {
          "replicas": 1,
          "selector": {
            "matchLabels": {
              "app.kubernetes.io/component": "webhook",
              "app.kubernetes.io/instance": "cert-manager",
              "app.kubernetes.io/name": "webhook"
            }
          },
          "template": {
            "metadata": {
              "creationTimestamp": null,
              "labels": {
                "app": "webhook",
                "app.kubernetes.io/component": "webhook",
                "app.kubernetes.io/instance": "cert-manager",
                "app.kubernetes.io/managed-by": "Helm",
                "app.kubernetes.io/name": "webhook",
                "helm.sh/chart": "cert-manager-v0.14.0"
              }
            },
            "spec": {
              "volumes": [
                {
                  "name": "certs",
                  "secret": {
                    "secretName": "cert-manager-webhook-tls",
                    "defaultMode": 420
                  }
                }
              ],
              "containers": [
                {
                  "name": "cert-manager",
                  "image": "quay.io/jetstack/cert-manager-webhook:v0.14.0",
                  "args": [ "--v=2", "--secure-port=10250", "--tls-cert-file=/certs/tls.crt", "--tls-private-key-file=/certs/tls.key" ],
                  "env": [
                    {
                      "name": "POD_NAMESPACE",
                      "valueFrom": {
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        }
                      }
                    }
                  ],
                  "resources": {},
                  "volumeMounts": [
                    {
                      "name": "certs",
                      "mountPath": "/certs"
                    }
                  ],
                  "livenessProbe": {
                    "httpGet": {
                      "path": "/livez",
                      "port": 6080,
                      "scheme": "HTTP"
                    },
                    "timeoutSeconds": 1,
                    "periodSeconds": 10,
                    "successThreshold": 1,
                    "failureThreshold": 3
                  },
                  "readinessProbe": {
                    "httpGet": {
                      "path": "/healthz",
                      "port": 6080,
                      "scheme": "HTTP"
                    },
                    "timeoutSeconds": 1,
                    "periodSeconds": 10,
                    "successThreshold": 1,
                    "failureThreshold": 3
                  },
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "imagePullPolicy": "IfNotPresent"
                }
              ],
              "restartPolicy": "Always",
              "terminationGracePeriodSeconds": 30,
              "dnsPolicy": "ClusterFirst",
              "serviceAccountName": "cert-manager-webhook",
              "serviceAccount": "cert-manager-webhook",
              "securityContext": {},
              "schedulerName": "default-scheduler"
            }
          },
          "strategy": {
            "type": "RollingUpdate",
            "rollingUpdate": {
              "maxUnavailable": "25%",
              "maxSurge": "25%"
            }
          },
          "revisionHistoryLimit": 10,
          "progressDeadlineSeconds": 600
        },
        "status": {
          "observedGeneration": 1,
          "replicas": 1,
          "updatedReplicas": 1,
          "readyReplicas": 1,
          "availableReplicas": 1,
          "conditions": [
            {
              "type": "Available",
              "status": "True",
              "lastUpdateTime": "2020-03-26T14:12:44Z",
              "lastTransitionTime": "2020-03-26T14:12:44Z",
              "reason": "MinimumReplicasAvailable",
              "message": "Deployment has minimum availability."
            },
            {
              "type": "Progressing",
              "status": "True",
              "lastUpdateTime": "2020-03-26T14:12:44Z",
              "lastTransitionTime": "2020-03-26T14:12:15Z",
              "reason": "NewReplicaSetAvailable",
              "message": "ReplicaSet \"cert-manager-webhook-6d57dbf4f\" has successfully progressed."
            }
          ]
        }
      },
      {
        "metadata": {
          "name": "joseki-be",
          "namespace": "joseki",
          "selfLink": "/apis/apps/v1/namespaces/joseki/deployments/joseki-be",
          "uid": "64909d61-6960-44b2-a97d-0e771ac80d4b",
          "resourceVersion": "13887100",
          "generation": 56,
          "creationTimestamp": "2020-02-04T13:06:04Z",
          "labels": {
            "app": "joseki-backend",
            "version": "0.3.0-sha-aa4a62cb",
            "owner": "dummy4@dummy.com"
          },
          "annotations": {
            "deployment.kubernetes.io/revision": "44",
            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"joseki-backend\",\"version\":\"0.3.0-sha-aa4a62cb\"},\"name\":\"joseki-be\",\"namespace\":\"joseki\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"joseki-backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"joseki-backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"JOSEKI_CONFIG_FILE_PATH\",\"value\":\"/app/config.yaml\"},{\"name\":\"SCANNER_VERSION\",\"value\":\"0.3.0-sha-aa4a62cb\"}],\"image\":\"deepnetwork/joseki-backend:0.3.0-sha-aa4a62cb\",\"imagePullPolicy\":\"Always\",\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/health/liveness\",\"port\":8080},\"initialDelaySeconds\":60,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"name\":\"joseki-be\",\"ports\":[{\"containerPort\":8080,\"name\":\"main-http\"}],\"readinessProbe\":{\"failureThreshold\":5,\"httpGet\":{\"path\":\"/health/readiness\",\"port\":8080},\"initialDelaySeconds\":20,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"resources\":{\"limits\":{\"cpu\":\"1000m\",\"memory\":\"500M\"},\"requests\":{\"cpu\":\"500m\",\"memory\":\"200M\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"readOnlyRootFilesystem\":false,\"runAsGroup\":10001,\"runAsNonRoot\":true,\"runAsUser\":10001},\"volumeMounts\":[{\"mountPath\":\"/app/config.yaml\",\"name\":\"backend-config-volume\",\"subPath\":\"config.yaml\"}]}],\"securityContext\":{\"fsGroup\":10001},\"serviceAccountName\":\"joseki-be\",\"volumes\":[{\"configMap\":{\"defaultMode\":511,\"items\":[{\"key\":\"config.yaml\",\"path\":\"config.yaml\"}],\"name\":\"backend-config\"},\"name\":\"backend-config-volume\"}]}}}}\n"
          }
        },
        "spec": {
          "replicas": 1,
          "selector": { "matchLabels": { "app": "joseki-backend" } },
          "template": {
            "metadata": {
              "creationTimestamp": null,
              "labels": { "app": "joseki-backend" }
            },
            "spec": {
              "volumes": [
                {
                  "name": "backend-config-volume",
                  "configMap": {
                    "name": "backend-config",
                    "items": [
                      {
                        "key": "config.yaml",
                        "path": "config.yaml"
                      }
                    ],
                    "defaultMode": 511
                  }
                }
              ],
              "containers": [
                {
                  "name": "joseki-be",
                  "image": "deepnetwork/joseki-backend:0.3.0-sha-aa4a62cb",
                  "ports": [
                    {
                      "name": "main-http",
                      "containerPort": 8080,
                      "protocol": "TCP"
                    }
                  ],
                  "env": [
                    {
                      "name": "JOSEKI_CONFIG_FILE_PATH",
                      "value": "/app/config.yaml"
                    },
                    {
                      "name": "SCANNER_VERSION",
                      "value": "0.3.0-sha-aa4a62cb"
                    }
                  ],
                  "resources": {
                    "limits": {
                      "cpu": "1",
                      "memory": "500M"
                    },
                    "requests": {
                      "cpu": "500m",
                      "memory": "200M"
                    }
                  },
                  "volumeMounts": [
                    {
                      "name": "backend-config-volume",
                      "mountPath": "/app/config.yaml",
                      "subPath": "config.yaml"
                    }
                  ],
                  "livenessProbe": {
                    "httpGet": {
                      "path": "/health/liveness",
                      "port": 8080,
                      "scheme": "HTTP"
                    },
                    "initialDelaySeconds": 60,
                    "timeoutSeconds": 1,
                    "periodSeconds": 10,
                    "successThreshold": 1,
                    "failureThreshold": 3
                  },
                  "readinessProbe": {
                    "httpGet": {
                      "path": "/health/readiness",
                      "port": 8080,
                      "scheme": "HTTP"
                    },
                    "initialDelaySeconds": 20,
                    "timeoutSeconds": 1,
                    "periodSeconds": 10,
                    "successThreshold": 1,
                    "failureThreshold": 5
                  },
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "imagePullPolicy": "Always",
                  "securityContext": {
                    "runAsUser": 10001,
                    "runAsGroup": 10001,
                    "runAsNonRoot": true,
                    "readOnlyRootFilesystem": false,
                    "allowPrivilegeEscalation": false
                  }
                }
              ],
              "restartPolicy": "Always",
              "terminationGracePeriodSeconds": 30,
              "dnsPolicy": "ClusterFirst",
              "serviceAccountName": "joseki-be",
              "serviceAccount": "joseki-be",
              "securityContext": { "fsGroup": 10001 },
              "schedulerName": "default-scheduler"
            }
          },
          "strategy": {
            "type": "RollingUpdate",
            "rollingUpdate": {
              "maxUnavailable": "25%",
              "maxSurge": "25%"
            }
          },
          "revisionHistoryLimit": 10,
          "progressDeadlineSeconds": 600
        },
        "status": {
          "observedGeneration": 56,
          "replicas": 1,
          "updatedReplicas": 1,
          "readyReplicas": 1,
          "availableReplicas": 1,
          "conditions": [
            {
              "type": "Available",
              "status": "True",
              "lastUpdateTime": "2020-04-07T06:48:02Z",
              "lastTransitionTime": "2020-04-07T06:48:02Z",
              "reason": "MinimumReplicasAvailable",
              "message": "Deployment has minimum availability."
            },
            {
              "type": "Progressing",
              "status": "True",
              "lastUpdateTime": "2020-04-17T13:39:53Z",
              "lastTransitionTime": "2020-02-21T07:01:57Z",
              "reason": "NewReplicaSetAvailable",
              "message": "ReplicaSet \"joseki-be-674f49f5ff\" has successfully progressed."
            }
          ]
        }
      },
      {
        "metadata": {
          "name": "joseki-fe",
          "namespace": "joseki",
          "selfLink": "/apis/apps/v1/namespaces/joseki/deployments/joseki-fe",
          "uid": "55c861a2-bb6f-44fe-b1c5-5b16016ebaff",
          "resourceVersion": "14804066",
          "generation": 52,
          "creationTimestamp": "2020-02-04T13:06:04Z",
          "labels": {
            "app": "joseki-frontend",
            "version": "0.3.5-sha-276dcdf7",
            "owner": "dummy5@dummy.com"
          },
          "annotations": {
            "deployment.kubernetes.io/revision": "52",
            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"joseki-frontend\",\"version\":\"0.3.5-sha-276dcdf7\"},\"name\":\"joseki-fe\",\"namespace\":\"joseki\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"joseki-frontend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"joseki-frontend\"}},\"spec\":{\"containers\":[{\"image\":\"deepnetwork/joseki-frontend:0.3.5-sha-276dcdf7\",\"imagePullPolicy\":\"Always\",\"name\":\"joseki-fe\",\"ports\":[{\"containerPort\":8080,\"name\":\"main-http\"}],\"resources\":{\"limits\":{\"cpu\":\"100m\",\"memory\":\"128Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"128Mi\"}},\"volumeMounts\":[{\"mountPath\":\"/usr/share/nginx/html/config.json\",\"name\":\"frontend-config-volume\",\"subPath\":\"config.json\"}]}],\"serviceAccountName\":\"joseki-fe\",\"volumes\":[{\"configMap\":{\"defaultMode\":511,\"items\":[{\"key\":\"config.json\",\"path\":\"config.json\"}],\"name\":\"frontend-config\"},\"name\":\"frontend-config-volume\"}]}}}}\n"
          }
        },
        "spec": {
          "replicas": 1,
          "selector": { "matchLabels": { "app": "joseki-frontend" } },
          "template": {
            "metadata": {
              "creationTimestamp": null,
              "labels": { "app": "joseki-frontend" }
            },
            "spec": {
              "volumes": [
                {
                  "name": "frontend-config-volume",
                  "configMap": {
                    "name": "frontend-config",
                    "items": [
                      {
                        "key": "config.json",
                        "path": "config.json"
                      }
                    ],
                    "defaultMode": 511
                  }
                }
              ],
              "containers": [
                {
                  "name": "joseki-fe",
                  "image": "deepnetwork/joseki-frontend:0.3.5-sha-276dcdf7",
                  "ports": [
                    {
                      "name": "main-http",
                      "containerPort": 8080,
                      "protocol": "TCP"
                    }
                  ],
                  "resources": {
                    "limits": {
                      "cpu": "100m",
                      "memory": "128Mi"
                    },
                    "requests": {
                      "cpu": "100m",
                      "memory": "128Mi"
                    }
                  },
                  "volumeMounts": [
                    {
                      "name": "frontend-config-volume",
                      "mountPath": "/usr/share/nginx/html/config.json",
                      "subPath": "config.json"
                    }
                  ],
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "imagePullPolicy": "Always"
                }
              ],
              "restartPolicy": "Always",
              "terminationGracePeriodSeconds": 30,
              "dnsPolicy": "ClusterFirst",
              "serviceAccountName": "joseki-fe",
              "serviceAccount": "joseki-fe",
              "securityContext": {},
              "schedulerName": "default-scheduler"
            }
          },
          "strategy": {
            "type": "RollingUpdate",
            "rollingUpdate": {
              "maxUnavailable": "25%",
              "maxSurge": "25%"
            }
          },
          "revisionHistoryLimit": 10,
          "progressDeadlineSeconds": 600
        },
        "status": {
          "observedGeneration": 52,
          "replicas": 1,
          "updatedReplicas": 1,
          "readyReplicas": 1,
          "availableReplicas": 1,
          "conditions": [
            {
              "type": "Available",
              "status": "True",
              "lastUpdateTime": "2020-03-26T15:47:25Z",
              "lastTransitionTime": "2020-03-26T15:47:25Z",
              "reason": "MinimumReplicasAvailable",
              "message": "Deployment has minimum availability."
            },
            {
              "type": "Progressing",
              "status": "True",
              "lastUpdateTime": "2020-04-21T14:34:36Z",
              "lastTransitionTime": "2020-02-04T13:06:04Z",
              "reason": "NewReplicaSetAvailable",
              "message": "ReplicaSet \"joseki-fe-798945f64d\" has successfully progressed."
            }
          ]
        }
      },
      {
        "metadata": {
          "name": "nginx-ingress-controller",
          "namespace": "joseki",
          "selfLink": "/apis/apps/v1/namespaces/joseki/deployments/nginx-ingress-controller",
          "uid": "0d7c5733-a804-4d3b-8220-8dfed9b9a3e0",
          "resourceVersion": "8881277",
          "generation": 4,
          "creationTimestamp": "2020-03-26T12:08:38Z",
          "labels": {
            "app.kubernetes.io/name": "ingress-nginx",
            "app.kubernetes.io/part-of": "ingress-nginx",
            "owner": "dummy6@dummy.com"
          },
          "annotations": {
            "deployment.kubernetes.io/revision": "4",
            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/name\":\"ingress-nginx\",\"app.kubernetes.io/part-of\":\"ingress-nginx\"},\"name\":\"nginx-ingress-controller\",\"namespace\":\"joseki\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"ingress-nginx\",\"app.kubernetes.io/part-of\":\"ingress-nginx\"}},\"template\":{\"metadata\":{\"annotations\":{\"prometheus.io/port\":\"10254\",\"prometheus.io/scrape\":\"true\"},\"labels\":{\"app.kubernetes.io/name\":\"ingress-nginx\",\"app.kubernetes.io/part-of\":\"ingress-nginx\"}},\"spec\":{\"containers\":[{\"args\":[\"/nginx-ingress-controller\",\"--configmap=$(POD_NAMESPACE)/nginx-configuration\",\"--tcp-services-configmap=$(POD_NAMESPACE)/tcp-services\",\"--udp-services-configmap=$(POD_NAMESPACE)/udp-services\",\"--publish-service=$(POD_NAMESPACE)/ingress-nginx\",\"--annotations-prefix=nginx.ingress.kubernetes.io\",\"--watch-namespace=joseki\"],\"env\":[{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}}],\"image\":\"quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.30.0\",\"lifecycle\":{\"preStop\":{\"exec\":{\"command\":[\"/wait-shutdown\"]}}},\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/healthz\",\"port\":10254,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":10,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":10},\"name\":\"nginx-ingress-controller\",\"ports\":[{\"containerPort\":80,\"name\":\"http\",\"protocol\":\"TCP\"},{\"containerPort\":443,\"name\":\"https\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/healthz\",\"port\":10254,\"scheme\":\"HTTP\"},\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":10},\"securityContext\":{\"allowPrivilegeEscalation\":true,\"capabilities\":{\"add\":[\"NET_BIND_SERVICE\"],\"drop\":[\"ALL\"]},\"runAsUser\":101}}],\"nodeSelector\":{\"kubernetes.io/os\":\"linux\"},\"serviceAccountName\":\"nginx-ingress-serviceaccount\",\"terminationGracePeriodSeconds\":300}}}}\n"
          }
        },
        "spec": {
          "replicas": 1,
          "selector": {
            "matchLabels": {
              "app.kubernetes.io/name": "ingress-nginx",
              "app.kubernetes.io/part-of": "ingress-nginx"
            }
          },
          "template": {
            "metadata": {
              "creationTimestamp": null,
              "labels": {
                "app.kubernetes.io/name": "ingress-nginx",
                "app.kubernetes.io/part-of": "ingress-nginx"
              },
              "annotations": {
                "prometheus.io/port": "10254",
                "prometheus.io/scrape": "true"
              }
            },
            "spec": {
              "containers": [
                {
                  "name": "nginx-ingress-controller",
                  "image": "quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.30.0",
                  "args": [ "/nginx-ingress-controller", "--configmap=$(POD_NAMESPACE)/nginx-configuration", "--tcp-services-configmap=$(POD_NAMESPACE)/tcp-services", "--udp-services-configmap=$(POD_NAMESPACE)/udp-services", "--publish-service=$(POD_NAMESPACE)/ingress-nginx", "--annotations-prefix=nginx.ingress.kubernetes.io", "--watch-namespace=joseki" ],
                  "ports": [
                    {
                      "name": "http",
                      "containerPort": 80,
                      "protocol": "TCP"
                    },
                    {
                      "name": "https",
                      "containerPort": 443,
                      "protocol": "TCP"
                    }
                  ],
                  "env": [
                    {
                      "name": "POD_NAME",
                      "valueFrom": {
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.name"
                        }
                      }
                    },
                    {
                      "name": "POD_NAMESPACE",
                      "valueFrom": {
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        }
                      }
                    }
                  ],
                  "resources": {},
                  "livenessProbe": {
                    "httpGet": {
                      "path": "/healthz",
                      "port": 10254,
                      "scheme": "HTTP"
                    },
                    "initialDelaySeconds": 10,
                    "timeoutSeconds": 10,
                    "periodSeconds": 10,
                    "successThreshold": 1,
                    "failureThreshold": 3
                  },
                  "readinessProbe": {
                    "httpGet": {
                      "path": "/healthz",
                      "port": 10254,
                      "scheme": "HTTP"
                    },
                    "timeoutSeconds": 10,
                    "periodSeconds": 10,
                    "successThreshold": 1,
                    "failureThreshold": 3
                  },
                  "lifecycle": { "preStop": { "exec": { "command": [ "/wait-shutdown" ] } } },
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "imagePullPolicy": "IfNotPresent",
                  "securityContext": {
                    "capabilities": {
                      "add": [ "NET_BIND_SERVICE" ],
                      "drop": [ "ALL" ]
                    },
                    "runAsUser": 101,
                    "allowPrivilegeEscalation": true
                  }
                }
              ],
              "restartPolicy": "Always",
              "terminationGracePeriodSeconds": 300,
              "dnsPolicy": "ClusterFirst",
              "nodeSelector": { "kubernetes.io/os": "linux" },
              "serviceAccountName": "nginx-ingress-serviceaccount",
              "serviceAccount": "nginx-ingress-serviceaccount",
              "securityContext": {},
              "schedulerName": "default-scheduler"
            }
          },
          "strategy": {
            "type": "RollingUpdate",
            "rollingUpdate": {
              "maxUnavailable": "25%",
              "maxSurge": "25%"
            }
          },
          "revisionHistoryLimit": 10,
          "progressDeadlineSeconds": 600
        },
        "status": {
          "observedGeneration": 4,
          "replicas": 1,
          "updatedReplicas": 1,
          "readyReplicas": 1,
          "availableReplicas": 1,
          "conditions": [
            {
              "type": "Available",
              "status": "True",
              "lastUpdateTime": "2020-03-26T12:16:46Z",
              "lastTransitionTime": "2020-03-26T12:16:46Z",
              "reason": "MinimumReplicasAvailable",
              "message": "Deployment has minimum availability."
            },
            {
              "type": "Progressing",
              "status": "True",
              "lastUpdateTime": "2020-03-26T14:18:23Z",
              "lastTransitionTime": "2020-03-26T12:08:38Z",
              "reason": "NewReplicaSetAvailable",
              "message": "ReplicaSet \"nginx-ingress-controller-5fbbfdc897\" has successfully progressed."
            }
          ]
        }
      },
      {
        "metadata": {
          "name": "scanner-trivy",
          "namespace": "joseki",
          "selfLink": "/apis/apps/v1/namespaces/joseki/deployments/scanner-trivy",
          "uid": "eab8df2f-9823-4e19-bf1c-88771ecf64fc",
          "resourceVersion": "13600256",
          "generation": 18,
          "creationTimestamp": "2020-02-07T15:12:29Z",
          "annotations": {
            "deployment.kubernetes.io/revision": "14",
            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"name\":\"scanner-trivy\",\"namespace\":\"joseki\"},\"spec\":{\"minReadySeconds\":5,\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"scanner-trivy\",\"module\":\"scanners\"}},\"strategy\":{\"rollingUpdate\":{\"maxSurge\":1,\"maxUnavailable\":1},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"labels\":{\"app\":\"scanner-trivy\",\"module\":\"scanners\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"IMAGE_SCANNER_CONFIG_FILE_PATH\",\"value\":\"/app/scanner-trivy-config.yaml\"},{\"name\":\"SCANNER_VERSION\",\"value\":\"0.3.0-sha-37904e3c\"}],\"image\":\"deepnetwork/joseki-scanner-trivy:0.3.0-sha-37904e3c\",\"imagePullPolicy\":\"Always\",\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/health/liveness\",\"port\":8080},\"initialDelaySeconds\":60,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"name\":\"scanner-trivy\",\"ports\":[{\"containerPort\":8080,\"name\":\"main-http\"}],\"readinessProbe\":{\"failureThreshold\":5,\"httpGet\":{\"path\":\"/health/readiness\",\"port\":8080},\"initialDelaySeconds\":20,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"resources\":{\"limits\":{\"cpu\":\"1000m\",\"memory\":\"500M\"},\"requests\":{\"cpu\":\"500m\",\"memory\":\"200M\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"readOnlyRootFilesystem\":false,\"runAsGroup\":10001,\"runAsNonRoot\":true,\"runAsUser\":10001},\"volumeMounts\":[{\"mountPath\":\"/app/scanner-trivy-config.yaml\",\"name\":\"scanner-cfg-volume\",\"subPath\":\"scanner-trivy-config.yaml\"},{\"mountPath\":\"/app/.cache\",\"name\":\"storage-volume\"}]}],\"securityContext\":{\"fsGroup\":10001},\"volumes\":[{\"configMap\":{\"defaultMode\":511,\"items\":[{\"key\":\"scanner-trivy-config.yaml\",\"path\":\"scanner-trivy-config.yaml\"}],\"name\":\"scanner-trivy-cfg\"},\"name\":\"scanner-cfg-volume\"},{\"name\":\"storage-volume\",\"persistentVolumeClaim\":{\"claimName\":\"scanner-trivy-storage\"}}]}}}}\n"
          }
        },
        "spec": {
          "replicas": 1,
          "selector": {
            "matchLabels": {
              "app": "scanner-trivy",
              "module": "scanners"
            }
          },
          "template": {
            "metadata": {
              "creationTimestamp": null,
              "labels": {
                "app": "scanner-trivy",
                "module": "scanners"
              }
            },
            "spec": {
              "volumes": [
                {
                  "name": "scanner-cfg-volume",
                  "configMap": {
                    "name": "scanner-trivy-cfg",
                    "items": [
                      {
                        "key": "scanner-trivy-config.yaml",
                        "path": "scanner-trivy-config.yaml"
                      }
                    ],
                    "defaultMode": 511
                  }
                },
                {
                  "name": "storage-volume",
                  "persistentVolumeClaim": { "claimName": "scanner-trivy-storage" }
                }
              ],
              "containers": [
                {
                  "name": "scanner-trivy",
                  "image": "deepnetwork/joseki-scanner-trivy:0.3.0-sha-37904e3c",
                  "ports": [
                    {
                      "name": "main-http",
                      "containerPort": 8080,
                      "protocol": "TCP"
                    }
                  ],
                  "env": [
                    {
                      "name": "IMAGE_SCANNER_CONFIG_FILE_PATH",
                      "value": "/app/scanner-trivy-config.yaml"
                    },
                    {
                      "name": "SCANNER_VERSION",
                      "value": "0.3.0-sha-37904e3c"
                    }
                  ],
                  "resources": {
                    "limits": {
                      "cpu": "1",
                      "memory": "500M"
                    },
                    "requests": {
                      "cpu": "500m",
                      "memory": "200M"
                    }
                  },
                  "volumeMounts": [
                    {
                      "name": "scanner-cfg-volume",
                      "mountPath": "/app/scanner-trivy-config.yaml",
                      "subPath": "scanner-trivy-config.yaml"
                    },
                    {
                      "name": "storage-volume",
                      "mountPath": "/app/.cache"
                    }
                  ],
                  "livenessProbe": {
                    "httpGet": {
                      "path": "/health/liveness",
                      "port": 8080,
                      "scheme": "HTTP"
                    },
                    "initialDelaySeconds": 60,
                    "timeoutSeconds": 1,
                    "periodSeconds": 10,
                    "successThreshold": 1,
                    "failureThreshold": 3
                  },
                  "readinessProbe": {
                    "httpGet": {
                      "path": "/health/readiness",
                      "port": 8080,
                      "scheme": "HTTP"
                    },
                    "initialDelaySeconds": 20,
                    "timeoutSeconds": 1,
                    "periodSeconds": 10,
                    "successThreshold": 1,
                    "failureThreshold": 5
                  },
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "imagePullPolicy": "Always",
                  "securityContext": {
                    "runAsUser": 10001,
                    "runAsGroup": 10001,
                    "runAsNonRoot": true,
                    "readOnlyRootFilesystem": false,
                    "allowPrivilegeEscalation": false
                  }
                }
              ],
              "restartPolicy": "Always",
              "terminationGracePeriodSeconds": 30,
              "dnsPolicy": "ClusterFirst",
              "securityContext": { "fsGroup": 10001 },
              "schedulerName": "default-scheduler"
            }
          },
          "strategy": {
            "type": "RollingUpdate",
            "rollingUpdate": {
              "maxUnavailable": 1,
              "maxSurge": 1
            }
          },
          "minReadySeconds": 5,
          "revisionHistoryLimit": 10,
          "progressDeadlineSeconds": 600
        },
        "status": {
          "observedGeneration": 18,
          "replicas": 1,
          "updatedReplicas": 1,
          "readyReplicas": 1,
          "availableReplicas": 1,
          "conditions": [
            {
              "type": "Available",
              "status": "True",
              "lastUpdateTime": "2020-02-07T15:12:29Z",
              "lastTransitionTime": "2020-02-07T15:12:29Z",
              "reason": "MinimumReplicasAvailable",
              "message": "Deployment has minimum availability."
            },
            {
              "type": "Progressing",
              "status": "True",
              "lastUpdateTime": "2020-04-16T07:18:07Z",
              "lastTransitionTime": "2020-02-07T15:12:29Z",
              "reason": "NewReplicaSetAvailable",
              "message": "ReplicaSet \"scanner-trivy-d979667cc\" has successfully progressed."
            }
          ]
        }
      },
      {
        "metadata": {
          "name": "coredns",
          "namespace": "kube-system",
          "selfLink": "/apis/apps/v1/namespaces/kube-system/deployments/coredns",
          "uid": "5b203dbd-20aa-4332-8cd1-4bb93fbae38c",
          "resourceVersion": "13500028",
          "generation": 19,
          "creationTimestamp": "2020-01-13T14:39:14Z",
          "labels": {
            "addonmanager.kubernetes.io/mode": "Reconcile",
            "k8s-app": "kube-dns",
            "kubernetes.io/cluster-service": "true",
            "kubernetes.io/name": "CoreDNS",
            "version": "v20",
            "owner": "dummy6@dummy.com"
          },
          "annotations": {
            "deployment.kubernetes.io/revision": "15",
            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"kube-dns\",\"kubernetes.io/cluster-service\":\"true\",\"kubernetes.io/name\":\"CoreDNS\",\"version\":\"v20\"},\"name\":\"coredns\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"k8s-app\":\"kube-dns\",\"version\":\"v20\"}},\"strategy\":{\"rollingUpdate\":{\"maxUnavailable\":1},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"annotations\":{\"prometheus.io/port\":\"9153\"},\"labels\":{\"k8s-app\":\"kube-dns\",\"kubernetes.io/cluster-service\":\"true\",\"version\":\"v20\"}},\"spec\":{\"affinity\":{\"podAntiAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"k8s-app\",\"operator\":\"In\",\"values\":[\"kube-dns\"]}]},\"topologyKey\":\"failure-domain.beta.kubernetes.io/zone\"},\"weight\":10},{\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"k8s-app\",\"operator\":\"In\",\"values\":[\"kube-dns\"]}]},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":5}]}},\"containers\":[{\"args\":[\"-conf\",\"/etc/coredns/Corefile\"],\"image\":\"mcr.microsoft.com/oss/kubernetes/coredns:1.6.6\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"failureThreshold\":5,\"httpGet\":{\"path\":\"/health\",\"port\":8080,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":60,\"successThreshold\":1,\"timeoutSeconds\":5},\"name\":\"coredns\",\"ports\":[{\"containerPort\":53,\"name\":\"dns\",\"protocol\":\"UDP\"},{\"containerPort\":53,\"name\":\"dns-tcp\",\"protocol\":\"TCP\"},{\"containerPort\":9153,\"name\":\"metrics\",\"protocol\":\"TCP\"}],\"resources\":{\"limits\":{\"memory\":\"170Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"70Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"add\":[\"NET_BIND_SERVICE\"],\"drop\":[\"all\"]},\"procMount\":\"Default\",\"readOnlyRootFilesystem\":true},\"volumeMounts\":[{\"mountPath\":\"/etc/coredns\",\"name\":\"config-volume\",\"readOnly\":true},{\"mountPath\":\"/etc/coredns/custom\",\"name\":\"custom-config-volume\",\"readOnly\":true},{\"mountPath\":\"/tmp\",\"name\":\"tmp\"}]}],\"dnsPolicy\":\"Default\",\"nodeSelector\":{\"beta.kubernetes.io/os\":\"linux\"},\"priorityClassName\":\"system-node-critical\",\"serviceAccountName\":\"coredns\",\"tolerations\":[{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/master\"},{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"}],\"volumes\":[{\"configMap\":{\"items\":[{\"key\":\"Corefile\",\"path\":\"Corefile\"}],\"name\":\"coredns\"},\"name\":\"config-volume\"},{\"configMap\":{\"name\":\"coredns-custom\",\"optional\":true},\"name\":\"custom-config-volume\"},{\"emptyDir\":{},\"name\":\"tmp\"}]}}}}\n"
          }
        },
        "spec": {
          "replicas": 2,
          "selector": {
            "matchLabels": {
              "k8s-app": "kube-dns",
              "version": "v20"
            }
          },
          "template": {
            "metadata": {
              "creationTimestamp": null,
              "labels": {
                "k8s-app": "kube-dns",
                "kubernetes.io/cluster-service": "true",
                "version": "v20"
              },
              "annotations": { "prometheus.io/port": "9153" }
            },
            "spec": {
              "volumes": [
                {
                  "name": "config-volume",
                  "configMap": {
                    "name": "coredns",
                    "items": [
                      {
                        "key": "Corefile",
                        "path": "Corefile"
                      }
                    ],
                    "defaultMode": 420
                  }
                },
                {
                  "name": "custom-config-volume",
                  "configMap": {
                    "name": "coredns-custom",
                    "defaultMode": 420,
                    "optional": true
                  }
                },
                {
                  "name": "tmp",
                  "emptyDir": {}
                }
              ],
              "containers": [
                {
                  "name": "coredns",
                  "image": "mcr.microsoft.com/oss/kubernetes/coredns:1.6.6",
                  "args": [ "-conf", "/etc/coredns/Corefile" ],
                  "ports": [
                    {
                      "name": "dns",
                      "containerPort": 53,
                      "protocol": "UDP"
                    },
                    {
                      "name": "dns-tcp",
                      "containerPort": 53,
                      "protocol": "TCP"
                    },
                    {
                      "name": "metrics",
                      "containerPort": 9153,
                      "protocol": "TCP"
                    }
                  ],
                  "resources": {
                    "limits": { "memory": "170Mi" },
                    "requests": {
                      "cpu": "100m",
                      "memory": "70Mi"
                    }
                  },
                  "volumeMounts": [
                    {
                      "name": "config-volume",
                      "readOnly": true,
                      "mountPath": "/etc/coredns"
                    },
                    {
                      "name": "custom-config-volume",
                      "readOnly": true,
                      "mountPath": "/etc/coredns/custom"
                    },
                    {
                      "name": "tmp",
                      "mountPath": "/tmp"
                    }
                  ],
                  "livenessProbe": {
                    "httpGet": {
                      "path": "/health",
                      "port": 8080,
                      "scheme": "HTTP"
                    },
                    "initialDelaySeconds": 60,
                    "timeoutSeconds": 5,
                    "periodSeconds": 10,
                    "successThreshold": 1,
                    "failureThreshold": 5
                  },
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "imagePullPolicy": "IfNotPresent",
                  "securityContext": {
                    "capabilities": {
                      "add": [ "NET_BIND_SERVICE" ],
                      "drop": [ "all" ]
                    },
                    "readOnlyRootFilesystem": true,
                    "allowPrivilegeEscalation": false,
                    "procMount": "Default"
                  }
                }
              ],
              "restartPolicy": "Always",
              "terminationGracePeriodSeconds": 30,
              "dnsPolicy": "Default",
              "nodeSelector": { "beta.kubernetes.io/os": "linux" },
              "serviceAccountName": "coredns",
              "serviceAccount": "coredns",
              "securityContext": {},
              "affinity": {
                "podAntiAffinity": {
                  "preferredDuringSchedulingIgnoredDuringExecution": [
                    {
                      "weight": 10,
                      "podAffinityTerm": {
                        "labelSelector": {
                          "matchExpressions": [
                            {
                              "key": "k8s-app",
                              "operator": "In",
                              "values": [ "kube-dns" ]
                            }
                          ]
                        },
                        "topologyKey": "failure-domain.beta.kubernetes.io/zone"
                      }
                    },
                    {
                      "weight": 5,
                      "podAffinityTerm": {
                        "labelSelector": {
                          "matchExpressions": [
                            {
                              "key": "k8s-app",
                              "operator": "In",
                              "values": [ "kube-dns" ]
                            }
                          ]
                        },
                        "topologyKey": "kubernetes.io/hostname"
                      }
                    }
                  ]
                }
              },
              "schedulerName": "default-scheduler",
              "tolerations": [
                {
                  "key": "node-role.kubernetes.io/master",
                  "effect": "NoSchedule"
                },
                {
                  "key": "CriticalAddonsOnly",
                  "operator": "Exists"
                }
              ],
              "priorityClassName": "system-node-critical"
            }
          },
          "strategy": {
            "type": "RollingUpdate",
            "rollingUpdate": {
              "maxUnavailable": 1,
              "maxSurge": 1
            }
          },
          "revisionHistoryLimit": 2147483647,
          "progressDeadlineSeconds": 2147483647
        },
        "status": {
          "observedGeneration": 19,
          "replicas": 2,
          "updatedReplicas": 2,
          "readyReplicas": 2,
          "availableReplicas": 2,
          "conditions": [
            {
              "type": "Available",
              "status": "True",
              "lastUpdateTime": "2020-01-13T14:39:14Z",
              "lastTransitionTime": "2020-01-13T14:39:14Z",
              "reason": "MinimumReplicasAvailable",
              "message": "Deployment has minimum availability."
            }
          ]
        }
      },
      {
        "metadata": {
          "name": "coredns-autoscaler",
          "namespace": "kube-system",
          "selfLink": "/apis/apps/v1/namespaces/kube-system/deployments/coredns-autoscaler",
          "uid": "acde7a65-7424-4a3b-8f0a-3e08ed36ca07",
          "resourceVersion": "8896022",
          "generation": 10,
          "creationTimestamp": "2020-01-13T14:39:14Z",
          "labels": {
            "addonmanager.kubernetes.io/mode": "Reconcile",
            "k8s-app": "coredns-autoscaler",
            "kubernetes.io/cluster-service": "true",
            "owner": "dummy6@dummy.com"
          },
          "annotations": {
            "deployment.kubernetes.io/revision": "7",
            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"coredns-autoscaler\",\"kubernetes.io/cluster-service\":\"true\"},\"name\":\"coredns-autoscaler\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"k8s-app\":\"coredns-autoscaler\"}},\"template\":{\"metadata\":{\"annotations\":{\"cluster-autoscaler.kubernetes.io/safe-to-evict\":\"true\",\"scheduler.alpha.kubernetes.io/critical-pod\":\"\",\"seccomp.security.alpha.kubernetes.io/pod\":\"docker/default\"},\"labels\":{\"k8s-app\":\"coredns-autoscaler\"}},\"spec\":{\"containers\":[{\"command\":[\"/cluster-proportional-autoscaler\",\"--namespace=kube-system\",\"--configmap=coredns-autoscaler\",\"--target=deployment/coredns\",\"--default-params={\\\"ladder\\\":{\\\"coresToReplicas\\\":[[1,2],[512,3],[1024,4],[2048,5]],\\\"nodesToReplicas\\\":[[1,2],[8,3],[16,4],[32,5]]}}\",\"--logtostderr=true\",\"--v=2\"],\"image\":\"mcr.microsoft.com/oss/kubernetes/autoscaler/cluster-proportional-autoscaler:1.7.1\",\"name\":\"autoscaler\",\"resources\":{\"requests\":{\"cpu\":\"20m\",\"memory\":\"10Mi\"}}}],\"dnsPolicy\":\"Default\",\"nodeSelector\":{\"beta.kubernetes.io/os\":\"linux\"},\"priorityClassName\":\"system-node-critical\",\"serviceAccountName\":\"coredns-autoscaler\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"}]}}}}\n"
          }
        },
        "spec": {
          "replicas": 1,
          "selector": { "matchLabels": { "k8s-app": "coredns-autoscaler" } },
          "template": {
            "metadata": {
              "creationTimestamp": null,
              "labels": { "k8s-app": "coredns-autoscaler" },
              "annotations": {
                "cluster-autoscaler.kubernetes.io/safe-to-evict": "true",
                "scheduler.alpha.kubernetes.io/critical-pod": "",
                "seccomp.security.alpha.kubernetes.io/pod": "docker/default"
              }
            },
            "spec": {
              "containers": [
                {
                  "name": "autoscaler",
                  "image": "mcr.microsoft.com/oss/kubernetes/autoscaler/cluster-proportional-autoscaler:1.7.1",
                  "command": [ "/cluster-proportional-autoscaler", "--namespace=kube-system", "--configmap=coredns-autoscaler", "--target=deployment/coredns", "--default-params={\"ladder\":{\"coresToReplicas\":[[1,2],[512,3],[1024,4],[2048,5]],\"nodesToReplicas\":[[1,2],[8,3],[16,4],[32,5]]}}", "--logtostderr=true", "--v=2" ],
                  "resources": {
                    "requests": {
                      "cpu": "20m",
                      "memory": "10Mi"
                    }
                  },
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "imagePullPolicy": "IfNotPresent"
                }
              ],
              "restartPolicy": "Always",
              "terminationGracePeriodSeconds": 30,
              "dnsPolicy": "Default",
              "nodeSelector": { "beta.kubernetes.io/os": "linux" },
              "serviceAccountName": "coredns-autoscaler",
              "serviceAccount": "coredns-autoscaler",
              "securityContext": {},
              "schedulerName": "default-scheduler",
              "tolerations": [
                {
                  "key": "CriticalAddonsOnly",
                  "operator": "Exists"
                }
              ],
              "priorityClassName": "system-node-critical"
            }
          },
          "strategy": {
            "type": "RollingUpdate",
            "rollingUpdate": {
              "maxUnavailable": 1,
              "maxSurge": 1
            }
          },
          "revisionHistoryLimit": 2147483647,
          "progressDeadlineSeconds": 2147483647
        },
        "status": {
          "observedGeneration": 10,
          "replicas": 1,
          "updatedReplicas": 1,
          "readyReplicas": 1,
          "availableReplicas": 1,
          "conditions": [
            {
              "type": "Available",
              "status": "True",
              "lastUpdateTime": "2020-01-13T14:39:14Z",
              "lastTransitionTime": "2020-01-13T14:39:14Z",
              "reason": "MinimumReplicasAvailable",
              "message": "Deployment has minimum availability."
            }
          ]
        }
      },
      {
        "metadata": {
          "name": "dashboard-metrics-scraper",
          "namespace": "kube-system",
          "selfLink": "/apis/apps/v1/namespaces/kube-system/deployments/dashboard-metrics-scraper",
          "uid": "0025ea1a-3600-454a-b34b-910ed3b0278f",
          "resourceVersion": "8097348",
          "generation": 1,
          "creationTimestamp": "2020-03-19T15:36:03Z",
          "labels": {
            "addonmanager.kubernetes.io/mode": "Reconcile",
            "k8s-app": "dashboard-metrics-scraper",
            "owner": "dummy6@dummy.com"
          },
          "annotations": {
            "deployment.kubernetes.io/revision": "1",
            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"dashboard-metrics-scraper\"},\"name\":\"dashboard-metrics-scraper\",\"namespace\":\"kube-system\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"k8s-app\":\"dashboard-metrics-scraper\"}},\"template\":{\"metadata\":{\"annotations\":{\"seccomp.security.alpha.kubernetes.io/pod\":\"runtime/default\"},\"labels\":{\"k8s-app\":\"dashboard-metrics-scraper\"}},\"spec\":{\"containers\":[{\"image\":\"mcr.microsoft.com/oss/kubernetes/metrics-scraper:v1.0.2\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/\",\"port\":8000,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":30,\"timeoutSeconds\":30},\"name\":\"dashboard-metrics-scraper\",\"ports\":[{\"containerPort\":8000,\"protocol\":\"TCP\"}],\"resources\":{\"limits\":{\"cpu\":\"100m\",\"memory\":\"500Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"50Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"readOnlyRootFilesystem\":true,\"runAsGroup\":2001,\"runAsUser\":1001},\"volumeMounts\":[{\"mountPath\":\"/tmp\",\"name\":\"tmp-volume\"}]}],\"nodeSelector\":{\"beta.kubernetes.io/os\":\"linux\"},\"priorityClassName\":\"system-node-critical\",\"serviceAccountName\":\"kubernetes-dashboard\",\"volumes\":[{\"emptyDir\":{},\"name\":\"tmp-volume\"}]}}}}\n"
          }
        },
        "spec": {
          "replicas": 1,
          "selector": { "matchLabels": { "k8s-app": "dashboard-metrics-scraper" } },
          "template": {
            "metadata": {
              "creationTimestamp": null,
              "labels": { "k8s-app": "dashboard-metrics-scraper" },
              "annotations": { "seccomp.security.alpha.kubernetes.io/pod": "runtime/default" }
            },
            "spec": {
              "volumes": [
                {
                  "name": "tmp-volume",
                  "emptyDir": {}
                }
              ],
              "containers": [
                {
                  "name": "dashboard-metrics-scraper",
                  "image": "mcr.microsoft.com/oss/kubernetes/metrics-scraper:v1.0.2",
                  "ports": [
                    {
                      "containerPort": 8000,
                      "protocol": "TCP"
                    }
                  ],
                  "resources": {
                    "limits": {
                      "cpu": "100m",
                      "memory": "500Mi"
                    },
                    "requests": {
                      "cpu": "100m",
                      "memory": "50Mi"
                    }
                  },
                  "volumeMounts": [
                    {
                      "name": "tmp-volume",
                      "mountPath": "/tmp"
                    }
                  ],
                  "livenessProbe": {
                    "httpGet": {
                      "path": "/",
                      "port": 8000,
                      "scheme": "HTTP"
                    },
                    "initialDelaySeconds": 30,
                    "timeoutSeconds": 30,
                    "periodSeconds": 10,
                    "successThreshold": 1,
                    "failureThreshold": 3
                  },
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "imagePullPolicy": "IfNotPresent",
                  "securityContext": {
                    "runAsUser": 1001,
                    "runAsGroup": 2001,
                    "readOnlyRootFilesystem": true,
                    "allowPrivilegeEscalation": false
                  }
                }
              ],
              "restartPolicy": "Always",
              "terminationGracePeriodSeconds": 30,
              "dnsPolicy": "ClusterFirst",
              "nodeSelector": { "beta.kubernetes.io/os": "linux" },
              "serviceAccountName": "kubernetes-dashboard",
              "serviceAccount": "kubernetes-dashboard",
              "securityContext": {},
              "schedulerName": "default-scheduler",
              "priorityClassName": "system-node-critical"
            }
          },
          "strategy": {
            "type": "RollingUpdate",
            "rollingUpdate": {
              "maxUnavailable": "25%",
              "maxSurge": "25%"
            }
          },
          "revisionHistoryLimit": 10,
          "progressDeadlineSeconds": 600
        },
        "status": {
          "observedGeneration": 1,
          "replicas": 1,
          "updatedReplicas": 1,
          "readyReplicas": 1,
          "availableReplicas": 1,
          "conditions": [
            {
              "type": "Progressing",
              "status": "True",
              "lastUpdateTime": "2020-03-19T15:36:13Z",
              "lastTransitionTime": "2020-03-19T15:36:03Z",
              "reason": "NewReplicaSetAvailable",
              "message": "ReplicaSet \"dashboard-metrics-scraper-867cf6588\" has successfully progressed."
            },
            {
              "type": "Available",
              "status": "True",
              "lastUpdateTime": "2020-03-20T08:21:01Z",
              "lastTransitionTime": "2020-03-20T08:21:01Z",
              "reason": "MinimumReplicasAvailable",
              "message": "Deployment has minimum availability."
            }
          ]
        }
      },
      {
        "metadata": {
          "name": "kubernetes-dashboard",
          "namespace": "kube-system",
          "selfLink": "/apis/apps/v1/namespaces/kube-system/deployments/kubernetes-dashboard",
          "uid": "b052cbde-ef5a-478d-9875-f977b0213a2e",
          "resourceVersion": "8097330",
          "generation": 1,
          "creationTimestamp": "2020-03-19T15:36:03Z",
          "labels": {
            "addonmanager.kubernetes.io/mode": "Reconcile",
            "k8s-app": "kubernetes-dashboard",
            "owner": "dummy6@dummy.com"
          },
          "annotations": {
            "deployment.kubernetes.io/revision": "1",
            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"kubernetes-dashboard\"},\"name\":\"kubernetes-dashboard\",\"namespace\":\"kube-system\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"k8s-app\":\"kubernetes-dashboard\"}},\"strategy\":{\"rollingUpdate\":{\"maxSurge\":0,\"maxUnavailable\":1},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"labels\":{\"k8s-app\":\"kubernetes-dashboard\"}},\"spec\":{\"containers\":[{\"args\":[\"--auto-generate-certificates\",\"--namespace=kube-system\"],\"image\":\"mcr.microsoft.com/oss/kubernetes/dashboard:v2.0.0-beta8\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/\",\"port\":8443,\"scheme\":\"HTTPS\"},\"initialDelaySeconds\":30,\"timeoutSeconds\":30},\"name\":\"kubernetes-dashboard\",\"ports\":[{\"containerPort\":8443,\"protocol\":\"TCP\"}],\"resources\":{\"limits\":{\"cpu\":\"100m\",\"memory\":\"500Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"50Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"readOnlyRootFilesystem\":true,\"runAsGroup\":2001,\"runAsUser\":1001},\"volumeMounts\":[{\"mountPath\":\"/certs\",\"name\":\"kubernetes-dashboard-certs\"},{\"mountPath\":\"/tmp\",\"name\":\"tmp-volume\"}]}],\"nodeSelector\":{\"beta.kubernetes.io/os\":\"linux\"},\"serviceAccountName\":\"kubernetes-dashboard\",\"volumes\":[{\"name\":\"kubernetes-dashboard-certs\",\"secret\":{\"secretName\":\"kubernetes-dashboard-certs\"}},{\"emptyDir\":{},\"name\":\"tmp-volume\"}]}}}}\n"
          }
        },
        "spec": {
          "replicas": 1,
          "selector": { "matchLabels": { "k8s-app": "kubernetes-dashboard" } },
          "template": {
            "metadata": {
              "creationTimestamp": null,
              "labels": { "k8s-app": "kubernetes-dashboard" }
            },
            "spec": {
              "volumes": [
                {
                  "name": "kubernetes-dashboard-certs",
                  "secret": {
                    "secretName": "kubernetes-dashboard-certs",
                    "defaultMode": 420
                  }
                },
                {
                  "name": "tmp-volume",
                  "emptyDir": {}
                }
              ],
              "containers": [
                {
                  "name": "kubernetes-dashboard",
                  "image": "mcr.microsoft.com/oss/kubernetes/dashboard:v2.0.0-beta8",
                  "args": [ "--auto-generate-certificates", "--namespace=kube-system" ],
                  "ports": [
                    {
                      "containerPort": 8443,
                      "protocol": "TCP"
                    }
                  ],
                  "resources": {
                    "limits": {
                      "cpu": "100m",
                      "memory": "500Mi"
                    },
                    "requests": {
                      "cpu": "100m",
                      "memory": "50Mi"
                    }
                  },
                  "volumeMounts": [
                    {
                      "name": "kubernetes-dashboard-certs",
                      "mountPath": "/certs"
                    },
                    {
                      "name": "tmp-volume",
                      "mountPath": "/tmp"
                    }
                  ],
                  "livenessProbe": {
                    "httpGet": {
                      "path": "/",
                      "port": 8443,
                      "scheme": "HTTPS"
                    },
                    "initialDelaySeconds": 30,
                    "timeoutSeconds": 30,
                    "periodSeconds": 10,
                    "successThreshold": 1,
                    "failureThreshold": 3
                  },
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "imagePullPolicy": "IfNotPresent",
                  "securityContext": {
                    "runAsUser": 1001,
                    "runAsGroup": 2001,
                    "readOnlyRootFilesystem": true,
                    "allowPrivilegeEscalation": false
                  }
                }
              ],
              "restartPolicy": "Always",
              "terminationGracePeriodSeconds": 30,
              "dnsPolicy": "ClusterFirst",
              "nodeSelector": { "beta.kubernetes.io/os": "linux" },
              "serviceAccountName": "kubernetes-dashboard",
              "serviceAccount": "kubernetes-dashboard",
              "securityContext": {},
              "schedulerName": "default-scheduler"
            }
          },
          "strategy": {
            "type": "RollingUpdate",
            "rollingUpdate": {
              "maxUnavailable": 1,
              "maxSurge": 0
            }
          },
          "revisionHistoryLimit": 10,
          "progressDeadlineSeconds": 600
        },
        "status": {
          "observedGeneration": 1,
          "replicas": 1,
          "updatedReplicas": 1,
          "readyReplicas": 1,
          "availableReplicas": 1,
          "conditions": [
            {
              "type": "Available",
              "status": "True",
              "lastUpdateTime": "2020-03-19T15:36:03Z",
              "lastTransitionTime": "2020-03-19T15:36:03Z",
              "reason": "MinimumReplicasAvailable",
              "message": "Deployment has minimum availability."
            },
            {
              "type": "Progressing",
              "status": "True",
              "lastUpdateTime": "2020-03-19T15:36:11Z",
              "lastTransitionTime": "2020-03-19T15:36:03Z",
              "reason": "NewReplicaSetAvailable",
              "message": "ReplicaSet \"kubernetes-dashboard-7f7676f7b5\" has successfully progressed."
            }
          ]
        }
      },
      {
        "metadata": {
          "name": "metrics-server",
          "namespace": "kube-system",
          "selfLink": "/apis/apps/v1/namespaces/kube-system/deployments/metrics-server",
          "uid": "ebc20799-9f09-41ac-a798-76a594f7227a",
          "resourceVersion": "17160407",
          "generation": 8,
          "creationTimestamp": "2020-01-13T14:39:14Z",
          "labels": {
            "addonmanager.kubernetes.io/mode": "Reconcile",
            "k8s-app": "metrics-server",
            "kubernetes.io/cluster-service": "true",
            "owner": "dummy7@dummy.com"
          },
          "annotations": {
            "deployment.kubernetes.io/revision": "8",
            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"metrics-server\",\"kubernetes.io/cluster-service\":\"true\"},\"name\":\"metrics-server\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"k8s-app\":\"metrics-server\"}},\"template\":{\"metadata\":{\"labels\":{\"k8s-app\":\"metrics-server\"},\"name\":\"metrics-server\"},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"labelSelector\":null,\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"}]}]}}},\"containers\":[{\"command\":[\"/metrics-server\",\"--kubelet-insecure-tls\",\"--kubelet-preferred-address-types=InternalIP\"],\"image\":\"mcr.microsoft.com/oss/kubernetes/metrics-server:v0.3.5\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"metrics-server\",\"resources\":{\"requests\":{\"cpu\":\"44m\",\"memory\":\"55Mi\"}}}],\"nodeSelector\":{\"beta.kubernetes.io/os\":\"linux\"},\"priorityClassName\":\"system-node-critical\",\"serviceAccountName\":\"metrics-server\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"}]}}}}\n"
          }
        },
        "spec": {
          "replicas": 1,
          "selector": { "matchLabels": { "k8s-app": "metrics-server" } },
          "template": {
            "metadata": {
              "name": "metrics-server",
              "creationTimestamp": null,
              "labels": { "k8s-app": "metrics-server" }
            },
            "spec": {
              "containers": [
                {
                  "name": "metrics-server",
                  "image": "mcr.microsoft.com/oss/kubernetes/metrics-server:v0.3.5",
                  "command": [ "/metrics-server", "--kubelet-insecure-tls", "--kubelet-preferred-address-types=InternalIP" ],
                  "resources": {
                    "requests": {
                      "cpu": "44m",
                      "memory": "55Mi"
                    }
                  },
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "imagePullPolicy": "IfNotPresent"
                }
              ],
              "restartPolicy": "Always",
              "terminationGracePeriodSeconds": 30,
              "dnsPolicy": "ClusterFirst",
              "nodeSelector": { "beta.kubernetes.io/os": "linux" },
              "serviceAccountName": "metrics-server",
              "serviceAccount": "metrics-server",
              "securityContext": {},
              "affinity": {
                "nodeAffinity": {
                  "requiredDuringSchedulingIgnoredDuringExecution": {
                    "nodeSelectorTerms": [
                      {
                        "matchExpressions": [
                          {
                            "key": "kubernetes.azure.com/cluster",
                            "operator": "Exists"
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "schedulerName": "default-scheduler",
              "tolerations": [
                {
                  "key": "CriticalAddonsOnly",
                  "operator": "Exists"
                }
              ],
              "priorityClassName": "system-node-critical"
            }
          },
          "strategy": {
            "type": "RollingUpdate",
            "rollingUpdate": {
              "maxUnavailable": 1,
              "maxSurge": 1
            }
          },
          "revisionHistoryLimit": 2147483647,
          "progressDeadlineSeconds": 2147483647
        },
        "status": {
          "observedGeneration": 8,
          "replicas": 1,
          "updatedReplicas": 1,
          "readyReplicas": 1,
          "availableReplicas": 1,
          "conditions": [
            {
              "type": "Available",
              "status": "True",
              "lastUpdateTime": "2020-01-13T14:39:14Z",
              "lastTransitionTime": "2020-01-13T14:39:14Z",
              "reason": "MinimumReplicasAvailable",
              "message": "Deployment has minimum availability."
            }
          ]
        }
      },
      {
        "metadata": {
          "name": "tiller-deploy",
          "namespace": "kube-system",
          "selfLink": "/apis/apps/v1/namespaces/kube-system/deployments/tiller-deploy",
          "uid": "90da6c3c-0d00-4ea5-8b7a-371a465d22d6",
          "resourceVersion": "9051674",
          "generation": 1,
          "creationTimestamp": "2020-02-02T15:26:09Z",
          "labels": {
            "app": "helm",
            "name": "tiller",
            "owner": "dummy7@dummy.com"
          },
          "annotations": { "deployment.kubernetes.io/revision": "1" }
        },
        "spec": {
          "replicas": 1,
          "selector": {
            "matchLabels": {
              "app": "helm",
              "name": "tiller"
            }
          },
          "template": {
            "metadata": {
              "creationTimestamp": null,
              "labels": {
                "app": "helm",
                "name": "tiller"
              }
            },
            "spec": {
              "containers": [
                {
                  "name": "tiller",
                  "image": "gcr.io/kubernetes-helm/tiller:v2.16.1",
                  "ports": [
                    {
                      "name": "tiller",
                      "containerPort": 44134,
                      "protocol": "TCP"
                    },
                    {
                      "name": "http",
                      "containerPort": 44135,
                      "protocol": "TCP"
                    }
                  ],
                  "env": [
                    {
                      "name": "TILLER_NAMESPACE",
                      "value": "kube-system"
                    },
                    {
                      "name": "TILLER_HISTORY_MAX",
                      "value": "0"
                    }
                  ],
                  "resources": {},
                  "livenessProbe": {
                    "httpGet": {
                      "path": "/liveness",
                      "port": 44135,
                      "scheme": "HTTP"
                    },
                    "initialDelaySeconds": 1,
                    "timeoutSeconds": 1,
                    "periodSeconds": 10,
                    "successThreshold": 1,
                    "failureThreshold": 3
                  },
                  "readinessProbe": {
                    "httpGet": {
                      "path": "/readiness",
                      "port": 44135,
                      "scheme": "HTTP"
                    },
                    "initialDelaySeconds": 1,
                    "timeoutSeconds": 1,
                    "periodSeconds": 10,
                    "successThreshold": 1,
                    "failureThreshold": 3
                  },
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "imagePullPolicy": "IfNotPresent"
                }
              ],
              "restartPolicy": "Always",
              "terminationGracePeriodSeconds": 30,
              "dnsPolicy": "ClusterFirst",
              "serviceAccountName": "tiller",
              "serviceAccount": "tiller",
              "automountServiceAccountToken": true,
              "securityContext": {},
              "schedulerName": "default-scheduler"
            }
          },
          "strategy": {
            "type": "RollingUpdate",
            "rollingUpdate": {
              "maxUnavailable": "25%",
              "maxSurge": "25%"
            }
          },
          "revisionHistoryLimit": 10,
          "progressDeadlineSeconds": 600
        },
        "status": {
          "observedGeneration": 1,
          "replicas": 1,
          "updatedReplicas": 1,
          "readyReplicas": 1,
          "availableReplicas": 1,
          "conditions": [
            {
              "type": "Progressing",
              "status": "True",
              "lastUpdateTime": "2020-02-02T15:26:16Z",
              "lastTransitionTime": "2020-02-02T15:26:09Z",
              "reason": "NewReplicaSetAvailable",
              "message": "ReplicaSet \"tiller-deploy-54f7455d59\" has successfully progressed."
            },
            {
              "type": "Available",
              "status": "True",
              "lastUpdateTime": "2020-03-27T07:11:09Z",
              "lastTransitionTime": "2020-03-27T07:11:09Z",
              "reason": "MinimumReplicasAvailable",
              "message": "Deployment has minimum availability."
            }
          ]
        }
      },
      {
        "metadata": {
          "name": "tunnelfront",
          "namespace": "kube-system",
          "selfLink": "/apis/apps/v1/namespaces/kube-system/deployments/tunnelfront",
          "uid": "aff7969d-b876-4891-bc3b-8ea9f3630a14",
          "resourceVersion": "9051610",
          "generation": 7,
          "creationTimestamp": "2020-01-13T14:39:15Z",
          "labels": {
            "addonmanager.kubernetes.io/mode": "Reconcile",
            "component": "tunnel",
            "kubernetes.io/cluster-service": "true",
            "tier": "node",
            "owner": "dummy7@dummy.com"
          },
          "annotations": {
            "deployment.kubernetes.io/revision": "4",
            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"component\":\"tunnel\",\"kubernetes.io/cluster-service\":\"true\",\"tier\":\"node\"},\"name\":\"tunnelfront\",\"namespace\":\"kube-system\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"component\":\"tunnel\"}},\"template\":{\"metadata\":{\"labels\":{\"component\":\"tunnel\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"labelSelector\":null,\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"}]}]}}},\"containers\":[{\"env\":[{\"name\":\"OVERRIDE_TUNNEL_SERVER_NAME\",\"value\":\"dn-common-dns-f16141bc.hcp.westeurope.azmk8s.io\"},{\"name\":\"KUBE_CONFIG\",\"value\":\"/etc/kubernetes/kubeconfig/kubeconfig\"}],\"image\":\"mcr.microsoft.com/aks/hcp/hcp-tunnel-front:v1.9.2-v3.0.11\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"exec\":{\"command\":[\"/lib/tunnel-front/check-tunnel-connection.sh\"]},\"failureThreshold\":12,\"initialDelaySeconds\":10,\"periodSeconds\":60},\"name\":\"tunnel-front\",\"resources\":{\"requests\":{\"cpu\":\"10m\",\"memory\":\"64Mi\"}},\"securityContext\":{\"privileged\":true},\"volumeMounts\":[{\"mountPath\":\"/etc/kubernetes/kubeconfig\",\"name\":\"kubeconfig\",\"readOnly\":true},{\"mountPath\":\"/etc/kubernetes/certs\",\"name\":\"certificates\",\"readOnly\":true}]}],\"dnsPolicy\":\"Default\",\"nodeSelector\":{\"beta.kubernetes.io/os\":\"linux\"},\"priorityClassName\":\"system-node-critical\",\"serviceAccountName\":\"tunnelfront\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"}],\"volumes\":[{\"configMap\":{\"name\":\"tunnelfront-kubecfg\",\"optional\":true},\"name\":\"kubeconfig\"},{\"hostPath\":{\"path\":\"/etc/kubernetes/certs\"},\"name\":\"certificates\"}]}}}}\n"
          }
        },
        "spec": {
          "replicas": 1,
          "selector": { "matchLabels": { "component": "tunnel" } },
          "template": {
            "metadata": {
              "creationTimestamp": null,
              "labels": { "component": "tunnel" }
            },
            "spec": {
              "volumes": [
                {
                  "name": "kubeconfig",
                  "configMap": {
                    "name": "tunnelfront-kubecfg",
                    "defaultMode": 420,
                    "optional": true
                  }
                },
                {
                  "name": "certificates",
                  "hostPath": {
                    "path": "/etc/kubernetes/certs",
                    "type": ""
                  }
                }
              ],
              "containers": [
                {
                  "name": "tunnel-front",
                  "image": "mcr.microsoft.com/aks/hcp/hcp-tunnel-front:v1.9.2-v3.0.11",
                  "env": [
                    {
                      "name": "OVERRIDE_TUNNEL_SERVER_NAME",
                      "value": "dn-common-dns-f16141bc.hcp.westeurope.azmk8s.io"
                    },
                    {
                      "name": "KUBE_CONFIG",
                      "value": "/etc/kubernetes/kubeconfig/kubeconfig"
                    }
                  ],
                  "resources": {
                    "requests": {
                      "cpu": "10m",
                      "memory": "64Mi"
                    }
                  },
                  "volumeMounts": [
                    {
                      "name": "kubeconfig",
                      "readOnly": true,
                      "mountPath": "/etc/kubernetes/kubeconfig"
                    },
                    {
                      "name": "certificates",
                      "readOnly": true,
                      "mountPath": "/etc/kubernetes/certs"
                    }
                  ],
                  "livenessProbe": {
                    "exec": { "command": [ "/lib/tunnel-front/check-tunnel-connection.sh" ] },
                    "initialDelaySeconds": 10,
                    "timeoutSeconds": 1,
                    "periodSeconds": 60,
                    "successThreshold": 1,
                    "failureThreshold": 12
                  },
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "imagePullPolicy": "IfNotPresent",
                  "securityContext": { "privileged": true }
                }
              ],
              "restartPolicy": "Always",
              "terminationGracePeriodSeconds": 30,
              "dnsPolicy": "Default",
              "nodeSelector": { "beta.kubernetes.io/os": "linux" },
              "serviceAccountName": "tunnelfront",
              "serviceAccount": "tunnelfront",
              "securityContext": {},
              "affinity": {
                "nodeAffinity": {
                  "requiredDuringSchedulingIgnoredDuringExecution": {
                    "nodeSelectorTerms": [
                      {
                        "matchExpressions": [
                          {
                            "key": "kubernetes.azure.com/cluster",
                            "operator": "Exists"
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "schedulerName": "default-scheduler",
              "tolerations": [
                {
                  "key": "CriticalAddonsOnly",
                  "operator": "Exists"
                }
              ],
              "priorityClassName": "system-node-critical"
            }
          },
          "strategy": {
            "type": "RollingUpdate",
            "rollingUpdate": {
              "maxUnavailable": 1,
              "maxSurge": 1
            }
          },
          "revisionHistoryLimit": 2147483647,
          "progressDeadlineSeconds": 2147483647
        },
        "status": {
          "observedGeneration": 7,
          "replicas": 1,
          "updatedReplicas": 1,
          "readyReplicas": 1,
          "availableReplicas": 1,
          "conditions": [
            {
              "type": "Available",
              "status": "True",
              "lastUpdateTime": "2020-01-13T14:39:15Z",
              "lastTransitionTime": "2020-01-13T14:39:15Z",
              "reason": "MinimumReplicasAvailable",
              "message": "Deployment has minimum availability."
            }
          ]
        }
      },
      {
        "metadata": {
          "name": "kibana",
          "namespace": "operations",
          "selfLink": "/apis/apps/v1/namespaces/operations/deployments/kibana",
          "uid": "319a0d57-4829-4d3d-b211-9a23a0ce2d43",
          "resourceVersion": "8098464",
          "generation": 1,
          "creationTimestamp": "2020-02-03T12:33:08Z",
          "labels": { "k8s-app": "kibana" },
          "annotations": { "deployment.kubernetes.io/revision": "1" }
        },
        "spec": {
          "replicas": 1,
          "selector": { "matchLabels": { "k8s-app": "kibana" } },
          "template": {
            "metadata": {
              "creationTimestamp": null,
              "labels": { "k8s-app": "kibana" }
            },
            "spec": {
              "containers": [
                {
                  "name": "kibana",
                  "image": "dnacr.azurecr.io/operations/kibana:7.5.0",
                  "ports": [
                    {
                      "name": "ui",
                      "containerPort": 5601,
                      "protocol": "TCP"
                    }
                  ],
                  "env": [
                    {
                      "name": "ELASTICSEARCH_URL",
                      "value": "http://elasticsearch.operations:9200"
                    }
                  ],
                  "resources": {
                    "limits": { "cpu": "1" },
                    "requests": { "cpu": "100m" }
                  },
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "imagePullPolicy": "IfNotPresent"
                }
              ],
              "restartPolicy": "Always",
              "terminationGracePeriodSeconds": 30,
              "dnsPolicy": "ClusterFirst",
              "securityContext": {},
              "schedulerName": "default-scheduler"
            }
          },
          "strategy": {
            "type": "RollingUpdate",
            "rollingUpdate": {
              "maxUnavailable": 1,
              "maxSurge": 1
            }
          },
          "revisionHistoryLimit": 2147483647,
          "progressDeadlineSeconds": 2147483647
        },
        "status": {
          "observedGeneration": 1,
          "replicas": 1,
          "updatedReplicas": 1,
          "readyReplicas": 1,
          "availableReplicas": 1,
          "conditions": [
            {
              "type": "Available",
              "status": "True",
              "lastUpdateTime": "2020-02-03T12:33:08Z",
              "lastTransitionTime": "2020-02-03T12:33:08Z",
              "reason": "MinimumReplicasAvailable",
              "message": "Deployment has minimum availability."
            }
          ]
        }
      },
      {
        "metadata": {
          "name": "logstash",
          "namespace": "operations",
          "selfLink": "/apis/apps/v1/namespaces/operations/deployments/logstash",
          "uid": "221f16ad-7693-4ffa-b13f-6dff12f48df0",
          "resourceVersion": "8099356",
          "generation": 1,
          "creationTimestamp": "2020-02-06T14:24:10Z",
          "labels": { "app": "logstash" },
          "annotations": { "deployment.kubernetes.io/revision": "1" }
        },
        "spec": {
          "replicas": 1,
          "selector": { "matchLabels": { "app": "logstash" } },
          "template": {
            "metadata": {
              "creationTimestamp": null,
              "labels": { "app": "logstash" }
            },
            "spec": {
              "volumes": [
                {
                  "name": "logstash-config",
                  "configMap": {
                    "name": "logstash-config",
                    "items": [
                      {
                        "key": "logstash.conf",
                        "path": "logstash.conf"
                      }
                    ],
                    "defaultMode": 420
                  }
                }
              ],
              "containers": [
                {
                  "name": "logstash",
                  "image": "dnacr.azurecr.io/operations/logstash:7.5.0",
                  "command": [ "logstash" ],
                  "ports": [
                    {
                      "name": "logstash",
                      "containerPort": 9600,
                      "protocol": "TCP"
                    }
                  ],
                  "resources": {},
                  "volumeMounts": [
                    {
                      "name": "logstash-config",
                      "mountPath": "/usr/share/logstash/pipeline/"
                    }
                  ],
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "imagePullPolicy": "IfNotPresent"
                }
              ],
              "restartPolicy": "Always",
              "terminationGracePeriodSeconds": 30,
              "dnsPolicy": "ClusterFirst",
              "securityContext": {},
              "hostname": "logstash",
              "schedulerName": "default-scheduler"
            }
          },
          "strategy": {
            "type": "RollingUpdate",
            "rollingUpdate": {
              "maxUnavailable": 1,
              "maxSurge": 1
            }
          },
          "revisionHistoryLimit": 2147483647,
          "progressDeadlineSeconds": 2147483647
        },
        "status": {
          "observedGeneration": 1,
          "replicas": 1,
          "updatedReplicas": 1,
          "readyReplicas": 1,
          "availableReplicas": 1,
          "conditions": [
            {
              "type": "Available",
              "status": "True",
              "lastUpdateTime": "2020-02-06T14:24:10Z",
              "lastTransitionTime": "2020-02-06T14:24:10Z",
              "reason": "MinimumReplicasAvailable",
              "message": "Deployment has minimum availability."
            }
          ]
        }
      },
      {
        "metadata": {
          "name": "reyiz-proxy",
          "namespace": "reyiz-dev",
          "selfLink": "/apis/apps/v1/namespaces/reyiz-dev/deployments/reyiz-proxy",
          "uid": "aaa410bd-17d9-4a55-b436-4884c8ade5bb",
          "resourceVersion": "8099490",
          "generation": 38,
          "creationTimestamp": "2020-01-28T15:36:45Z",
          "labels": {
            "app": "reyiz-proxy",
            "owner": "dummy7@dummy.com"
          },
          "annotations": {
            "deployment.kubernetes.io/revision": "16",
            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"reyiz-proxy\"},\"name\":\"reyiz-proxy\",\"namespace\":\"reyiz-dev\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"reyiz-proxy\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"reyiz-proxy\"}},\"spec\":{\"containers\":[{\"image\":\"dnacr.azurecr.io/nginx-proxy:2587\",\"name\":\"reyiz-proxy\",\"ports\":[{\"containerPort\":80}]}],\"imagePullSecrets\":[{\"name\":\"acr-secret\"}]}}}}\n"
          }
        },
        "spec": {
          "replicas": 1,
          "selector": { "matchLabels": { "app": "reyiz-proxy" } },
          "template": {
            "metadata": {
              "creationTimestamp": null,
              "labels": { "app": "reyiz-proxy" }
            },
            "spec": {
              "containers": [
                {
                  "name": "reyiz-proxy",
                  "image": "dnacr.azurecr.io/nginx-proxy:2587",
                  "ports": [
                    {
                      "containerPort": 80,
                      "protocol": "TCP"
                    }
                  ],
                  "resources": {},
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "imagePullPolicy": "IfNotPresent"
                }
              ],
              "restartPolicy": "Always",
              "terminationGracePeriodSeconds": 30,
              "dnsPolicy": "ClusterFirst",
              "securityContext": {},
              "imagePullSecrets": [ { "name": "acr-secret" } ],
              "schedulerName": "default-scheduler"
            }
          },
          "strategy": {
            "type": "RollingUpdate",
            "rollingUpdate": {
              "maxUnavailable": "25%",
              "maxSurge": "25%"
            }
          },
          "revisionHistoryLimit": 10,
          "progressDeadlineSeconds": 600
        },
        "status": {
          "observedGeneration": 38,
          "replicas": 1,
          "updatedReplicas": 1,
          "readyReplicas": 1,
          "availableReplicas": 1,
          "conditions": [
            {
              "type": "Progressing",
              "status": "True",
              "lastUpdateTime": "2020-02-07T16:46:51Z",
              "lastTransitionTime": "2020-01-28T15:36:45Z",
              "reason": "NewReplicaSetAvailable",
              "message": "ReplicaSet \"reyiz-proxy-6c9b9575dc\" has successfully progressed."
            },
            {
              "type": "Available",
              "status": "True",
              "lastUpdateTime": "2020-03-20T08:39:50Z",
              "lastTransitionTime": "2020-03-20T08:39:50Z",
              "reason": "MinimumReplicasAvailable",
              "message": "Deployment has minimum availability."
            }
          ]
        }
      },
      {
        "metadata": {
          "name": "reyiz-web-api",
          "namespace": "reyiz-dev",
          "selfLink": "/apis/apps/v1/namespaces/reyiz-dev/deployments/reyiz-web-api",
          "uid": "19f4195f-0194-4550-aad0-0a47556d6805",
          "resourceVersion": "8099391",
          "generation": 57,
          "creationTimestamp": "2020-01-14T09:08:03Z",
          "labels": {
            "app": "reyiz-web-api",
            "owner": "dummy7@dummy.com"
          },
          "annotations": {
            "deployment.kubernetes.io/revision": "57",
            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"reyiz-web-api\"},\"name\":\"reyiz-web-api\",\"namespace\":\"reyiz-dev\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"reyiz-web-api\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"reyiz-web-api\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"SQL_SERVER_PASSWORD\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"password\",\"name\":\"sql-server\"}}},{\"name\":\"AUTHENTICATION_SECURITY_KEY\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"securityKey\",\"name\":\"authentication-vars\"}}}],\"image\":\"dnacr.azurecr.io/reyiz-web-api:2587\",\"name\":\"reyiz-web-api\",\"ports\":[{\"containerPort\":80}]}],\"imagePullSecrets\":[{\"name\":\"acr-secret\"}]}}}}\n"
          }
        },
        "spec": {
          "replicas": 1,
          "selector": { "matchLabels": { "app": "reyiz-web-api" } },
          "template": {
            "metadata": {
              "creationTimestamp": null,
              "labels": { "app": "reyiz-web-api" }
            },
            "spec": {
              "containers": [
                {
                  "name": "reyiz-web-api",
                  "image": "dnacr.azurecr.io/reyiz-web-api:2587",
                  "ports": [
                    {
                      "containerPort": 80,
                      "protocol": "TCP"
                    }
                  ],
                  "env": [
                    {
                      "name": "SQL_SERVER_PASSWORD",
                      "valueFrom": {
                        "secretKeyRef": {
                          "name": "sql-server",
                          "key": "password"
                        }
                      }
                    },
                    {
                      "name": "AUTHENTICATION_SECURITY_KEY",
                      "valueFrom": {
                        "secretKeyRef": {
                          "name": "authentication-vars",
                          "key": "securityKey"
                        }
                      }
                    }
                  ],
                  "resources": {},
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "imagePullPolicy": "IfNotPresent"
                }
              ],
              "restartPolicy": "Always",
              "terminationGracePeriodSeconds": 30,
              "dnsPolicy": "ClusterFirst",
              "securityContext": {},
              "imagePullSecrets": [ { "name": "acr-secret" } ],
              "schedulerName": "default-scheduler"
            }
          },
          "strategy": {
            "type": "RollingUpdate",
            "rollingUpdate": {
              "maxUnavailable": "25%",
              "maxSurge": "25%"
            }
          },
          "revisionHistoryLimit": 10,
          "progressDeadlineSeconds": 600
        },
        "status": {
          "observedGeneration": 57,
          "replicas": 1,
          "updatedReplicas": 1,
          "readyReplicas": 1,
          "availableReplicas": 1,
          "conditions": [
            {
              "type": "Progressing",
              "status": "True",
              "lastUpdateTime": "2020-02-07T16:47:00Z",
              "lastTransitionTime": "2020-01-24T10:04:41Z",
              "reason": "NewReplicaSetAvailable",
              "message": "ReplicaSet \"reyiz-web-api-65c8cf667d\" has successfully progressed."
            },
            {
              "type": "Available",
              "status": "True",
              "lastUpdateTime": "2020-03-20T08:39:14Z",
              "lastTransitionTime": "2020-03-20T08:39:14Z",
              "reason": "MinimumReplicasAvailable",
              "message": "Deployment has minimum availability."
            }
          ]
        }
      },
      {
        "metadata": {
          "name": "slackbot",
          "namespace": "reyiz-dev",
          "selfLink": "/apis/apps/v1/namespaces/reyiz-dev/deployments/slackbot",
          "uid": "bedb91cf-3782-4ba5-9da3-9c22a2946e1c",
          "resourceVersion": "8099588",
          "generation": 49,
          "creationTimestamp": "2020-01-15T10:28:48Z",
          "labels": {
            "app": "slackbot",
            "owner": "dummy7@dummy.com"
          },
          "annotations": {
            "deployment.kubernetes.io/revision": "49",
            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1beta1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"name\":\"slackbot\",\"namespace\":\"reyiz-dev\"},\"spec\":{\"replicas\":1,\"template\":{\"metadata\":{\"labels\":{\"app\":\"slackbot\"}},\"spec\":{\"containers\":[{\"image\":\"dnacr.azurecr.io/slackbot:2611\",\"name\":\"slackbot\",\"ports\":[{\"containerPort\":5000}]}],\"imagePullSecrets\":[{\"name\":\"acr-secret\"}]}}}}\n"
          }
        },
        "spec": {
          "replicas": 1,
          "selector": { "matchLabels": { "app": "slackbot" } },
          "template": {
            "metadata": {
              "creationTimestamp": null,
              "labels": { "app": "slackbot" }
            },
            "spec": {
              "containers": [
                {
                  "name": "slackbot",
                  "image": "dnacr.azurecr.io/slackbot:2611",
                  "ports": [
                    {
                      "containerPort": 5000,
                      "protocol": "TCP"
                    }
                  ],
                  "resources": {},
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "imagePullPolicy": "IfNotPresent"
                }
              ],
              "restartPolicy": "Always",
              "terminationGracePeriodSeconds": 30,
              "dnsPolicy": "ClusterFirst",
              "securityContext": {},
              "imagePullSecrets": [ { "name": "acr-secret" } ],
              "schedulerName": "default-scheduler"
            }
          },
          "strategy": {
            "type": "RollingUpdate",
            "rollingUpdate": {
              "maxUnavailable": "25%",
              "maxSurge": "25%"
            }
          },
          "revisionHistoryLimit": 2,
          "progressDeadlineSeconds": 600
        },
        "status": {
          "observedGeneration": 49,
          "replicas": 1,
          "updatedReplicas": 1,
          "readyReplicas": 1,
          "availableReplicas": 1,
          "conditions": [
            {
              "type": "Progressing",
              "status": "True",
              "lastUpdateTime": "2020-02-20T13:05:39Z",
              "lastTransitionTime": "2020-01-15T10:28:48Z",
              "reason": "NewReplicaSetAvailable",
              "message": "ReplicaSet \"slackbot-587f6b6f68\" has successfully progressed."
            },
            {
              "type": "Available",
              "status": "True",
              "lastUpdateTime": "2020-03-20T08:40:35Z",
              "lastTransitionTime": "2020-03-20T08:40:35Z",
              "reason": "MinimumReplicasAvailable",
              "message": "Deployment has minimum availability."
            }
          ]
        }
      }
    ],
    "StatefulSets": [
      {
        "metadata": {
          "name": "es-cluster",
          "namespace": "operations",
          "selfLink": "/apis/apps/v1/namespaces/operations/statefulsets/es-cluster",
          "uid": "af7676b8-44ef-4bb4-b28a-3c8fe5d86166",
          "resourceVersion": "8098632",
          "generation": 1,
          "creationTimestamp": "2020-02-03T12:10:33Z"
        },
        "spec": {
          "replicas": 1,
          "selector": { "matchLabels": { "app": "elasticsearch" } },
          "template": {
            "metadata": {
              "creationTimestamp": null,
              "labels": { "app": "elasticsearch" }
            },
            "spec": {
              "initContainers": [
                {
                  "name": "fix-permissions",
                  "image": "busybox",
                  "command": [ "sh", "-c", "chown -R 1000:1000 /usr/share/elasticsearch/data" ],
                  "resources": {},
                  "volumeMounts": [
                    {
                      "name": "data",
                      "mountPath": "/usr/share/elasticsearch/data"
                    }
                  ],
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "imagePullPolicy": "Always",
                  "securityContext": { "privileged": true }
                },
                {
                  "name": "increase-vm-max-map",
                  "image": "busybox",
                  "command": [ "sysctl", "-w", "vm.max_map_count=262144" ],
                  "resources": {},
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "imagePullPolicy": "Always",
                  "securityContext": { "privileged": true }
                },
                {
                  "name": "increase-fd-ulimit",
                  "image": "busybox",
                  "command": [ "sh", "-c", "ulimit -n 65536" ],
                  "resources": {},
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "imagePullPolicy": "Always",
                  "securityContext": { "privileged": true }
                }
              ],
              "containers": [
                {
                  "name": "elasticsearch",
                  "image": "dnacr.azurecr.io/operations/elasticsearch:7.5.0",
                  "ports": [
                    {
                      "name": "rest",
                      "containerPort": 9200,
                      "protocol": "TCP"
                    },
                    {
                      "name": "inter-node",
                      "containerPort": 9300,
                      "protocol": "TCP"
                    }
                  ],
                  "env": [
                    {
                      "name": "cluster.name",
                      "value": "k8s-logs"
                    },
                    {
                      "name": "node.name",
                      "valueFrom": {
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.name"
                        }
                      }
                    },
                    {
                      "name": "discovery.type",
                      "value": "single-node"
                    },
                    {
                      "name": "ES_JAVA_OPTS",
                      "value": "-Xms1g -Xmx1g"
                    }
                  ],
                  "resources": {
                    "limits": {
                      "cpu": "1",
                      "memory": "2Gi"
                    },
                    "requests": {
                      "cpu": "100m",
                      "memory": "2Gi"
                    }
                  },
                  "volumeMounts": [
                    {
                      "name": "data",
                      "mountPath": "/usr/share/elasticsearch/data"
                    }
                  ],
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "imagePullPolicy": "IfNotPresent"
                }
              ],
              "restartPolicy": "Always",
              "terminationGracePeriodSeconds": 30,
              "dnsPolicy": "ClusterFirst",
              "securityContext": {},
              "schedulerName": "default-scheduler"
            }
          },
          "volumeClaimTemplates": [
            {
              "metadata": {
                "name": "data",
                "creationTimestamp": null,
                "labels": { "app": "elasticsearch" }
              },
              "spec": {
                "accessModes": [ "ReadWriteOnce" ],
                "resources": { "requests": { "storage": "100Gi" } },
                "storageClassName": "default",
                "volumeMode": "Filesystem",
                "dataSource": null
              },
              "status": { "phase": "Pending" }
            }
          ],
          "serviceName": "elasticsearch",
          "podManagementPolicy": "OrderedReady",
          "updateStrategy": {
            "type": "RollingUpdate",
            "rollingUpdate": { "partition": 0 }
          },
          "revisionHistoryLimit": 10
        },
        "status": {
          "observedGeneration": 1,
          "replicas": 1,
          "readyReplicas": 1,
          "currentReplicas": 1,
          "updatedReplicas": 1,
          "currentRevision": "es-cluster-85d7b5b475",
          "updateRevision": "es-cluster-85d7b5b475",
          "collisionCount": 0
        }
      }
    ],
    "DaemonSets": [
      {
        "metadata": {
          "name": "kube-proxy",
          "namespace": "kube-system",
          "selfLink": "/apis/apps/v1/namespaces/kube-system/daemonsets/kube-proxy",
          "uid": "129d4ce0-b482-4b08-8bad-504469a39072",
          "resourceVersion": "17160492",
          "generation": 81,
          "creationTimestamp": "2020-01-13T14:39:14Z",
          "labels": {
            "component": "kube-proxy",
            "kubernetes.io/cluster-service": "true",
            "tier": "node",
            "owner": "dummy7@dummy.com"
          },
          "annotations": {
            "aks.microsoft.com/release-time": "seconds:1588375816 nanos:465202198 ",
            "deprecated.daemonset.template.generation": "81",
            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{\"aks.microsoft.com/release-time\":\"seconds:1588375816 nanos:465202198 \"},\"labels\":{\"component\":\"kube-proxy\",\"kubernetes.io/cluster-service\":\"true\",\"tier\":\"node\"},\"name\":\"kube-proxy\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"component\":\"kube-proxy\",\"tier\":\"node\"}},\"template\":{\"metadata\":{\"annotations\":{\"aks.microsoft.com/release-time\":\"seconds:1588375816 nanos:465202198 \"},\"labels\":{\"component\":\"kube-proxy\",\"tier\":\"node\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"labelSelector\":null,\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"}]}]}}},\"containers\":[{\"command\":[\"/hyperkube\",\"kube-proxy\",\"--kubeconfig=/var/lib/kubelet/kubeconfig\",\"--cluster-cidr=10.244.0.0/16\",\"--v=3\"],\"image\":\"mcr.microsoft.com/oss/kubernetes/hyperkube:v1.16.7-hotfix.20200326\",\"name\":\"kube-proxy\",\"resources\":{\"requests\":{\"cpu\":\"100m\"}},\"securityContext\":{\"privileged\":true},\"volumeMounts\":[{\"mountPath\":\"/var/lib/kubelet\",\"name\":\"kubeconfig\",\"readOnly\":true},{\"mountPath\":\"/etc/kubernetes/certs\",\"name\":\"certificates\",\"readOnly\":true},{\"mountPath\":\"/run/xtables.lock\",\"name\":\"iptableslock\"}]}],\"hostNetwork\":true,\"nodeSelector\":{\"beta.kubernetes.io/os\":\"linux\"},\"priorityClassName\":\"system-node-critical\",\"serviceAccountName\":\"kube-proxy\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoExecute\",\"operator\":\"Exists\"},{\"effect\":\"NoSchedule\",\"operator\":\"Exists\"}],\"volumes\":[{\"hostPath\":{\"path\":\"/var/lib/kubelet\"},\"name\":\"kubeconfig\"},{\"hostPath\":{\"path\":\"/etc/kubernetes/certs\"},\"name\":\"certificates\"},{\"hostPath\":{\"path\":\"/run/xtables.lock\",\"type\":\"FileOrCreate\"},\"name\":\"iptableslock\"}]}},\"updateStrategy\":{\"rollingUpdate\":{\"maxUnavailable\":1},\"type\":\"RollingUpdate\"}}}\n"
          }
        },
        "spec": {
          "selector": {
            "matchLabels": {
              "component": "kube-proxy",
              "tier": "node"
            }
          },
          "template": {
            "metadata": {
              "creationTimestamp": null,
              "labels": {
                "component": "kube-proxy",
                "tier": "node"
              },
              "annotations": { "aks.microsoft.com/release-time": "seconds:1588375816 nanos:465202198 " }
            },
            "spec": {
              "volumes": [
                {
                  "name": "kubeconfig",
                  "hostPath": {
                    "path": "/var/lib/kubelet",
                    "type": ""
                  }
                },
                {
                  "name": "certificates",
                  "hostPath": {
                    "path": "/etc/kubernetes/certs",
                    "type": ""
                  }
                },
                {
                  "name": "iptableslock",
                  "hostPath": {
                    "path": "/run/xtables.lock",
                    "type": "FileOrCreate"
                  }
                }
              ],
              "containers": [
                {
                  "name": "kube-proxy",
                  "image": "mcr.microsoft.com/oss/kubernetes/hyperkube:v1.16.7-hotfix.20200326",
                  "command": [ "/hyperkube", "kube-proxy", "--kubeconfig=/var/lib/kubelet/kubeconfig", "--cluster-cidr=10.244.0.0/16", "--v=3" ],
                  "resources": { "requests": { "cpu": "100m" } },
                  "volumeMounts": [
                    {
                      "name": "kubeconfig",
                      "readOnly": true,
                      "mountPath": "/var/lib/kubelet"
                    },
                    {
                      "name": "certificates",
                      "readOnly": true,
                      "mountPath": "/etc/kubernetes/certs"
                    },
                    {
                      "name": "iptableslock",
                      "mountPath": "/run/xtables.lock"
                    }
                  ],
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "imagePullPolicy": "IfNotPresent",
                  "securityContext": { "privileged": true }
                }
              ],
              "restartPolicy": "Always",
              "terminationGracePeriodSeconds": 30,
              "dnsPolicy": "ClusterFirst",
              "nodeSelector": { "beta.kubernetes.io/os": "linux" },
              "serviceAccountName": "kube-proxy",
              "serviceAccount": "kube-proxy",
              "hostNetwork": true,
              "securityContext": {},
              "affinity": {
                "nodeAffinity": {
                  "requiredDuringSchedulingIgnoredDuringExecution": {
                    "nodeSelectorTerms": [
                      {
                        "matchExpressions": [
                          {
                            "key": "kubernetes.azure.com/cluster",
                            "operator": "Exists"
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "schedulerName": "default-scheduler",
              "tolerations": [
                {
                  "key": "CriticalAddonsOnly",
                  "operator": "Exists"
                },
                {
                  "operator": "Exists",
                  "effect": "NoExecute"
                },
                {
                  "operator": "Exists",
                  "effect": "NoSchedule"
                }
              ],
              "priorityClassName": "system-node-critical"
            }
          },
          "updateStrategy": {
            "type": "RollingUpdate",
            "rollingUpdate": { "maxUnavailable": 1 }
          },
          "revisionHistoryLimit": 10
        },
        "status": {
          "currentNumberScheduled": 3,
          "numberMisscheduled": 0,
          "desiredNumberScheduled": 3,
          "numberReady": 3,
          "observedGeneration": 81,
          "updatedNumberScheduled": 3,
          "numberAvailable": 3
        }
      },
      {
        "metadata": {
          "name": "filebeat",
          "namespace": "operations",
          "selfLink": "/apis/apps/v1/namespaces/operations/daemonsets/filebeat",
          "uid": "b1b80616-3dd3-4829-9206-68a6ed6cea29",
          "resourceVersion": "8906738",
          "generation": 1,
          "creationTimestamp": "2020-02-06T13:57:59Z",
          "labels": { "k8s-app": "filebeat" },
          "annotations": { "deprecated.daemonset.template.generation": "1" }
        },
        "spec": {
          "selector": { "matchLabels": { "k8s-app": "filebeat" } },
          "template": {
            "metadata": {
              "creationTimestamp": null,
              "labels": { "k8s-app": "filebeat" }
            },
            "spec": {
              "volumes": [
                {
                  "name": "config",
                  "configMap": {
                    "name": "filebeat-config",
                    "defaultMode": 384
                  }
                },
                {
                  "name": "varlibdockercontainers",
                  "hostPath": {
                    "path": "/var/lib/docker/containers",
                    "type": ""
                  }
                },
                {
                  "name": "varlog",
                  "hostPath": {
                    "path": "/var/log",
                    "type": ""
                  }
                },
                {
                  "name": "data",
                  "hostPath": {
                    "path": "/var/lib/filebeat-data",
                    "type": "DirectoryOrCreate"
                  }
                }
              ],
              "containers": [
                {
                  "name": "filebeat",
                  "image": "dnacr.azurecr.io/operations/filebeat:7.5.0",
                  "args": [ "-c", "/etc/filebeat.yml", "-e" ],
                  "env": [
                    {
                      "name": "NODE_NAME",
                      "valueFrom": {
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "spec.nodeName"
                        }
                      }
                    }
                  ],
                  "resources": {
                    "limits": { "memory": "200Mi" },
                    "requests": {
                      "cpu": "500m",
                      "memory": "100Mi"
                    }
                  },
                  "volumeMounts": [
                    {
                      "name": "config",
                      "readOnly": true,
                      "mountPath": "/etc/filebeat.yml",
                      "subPath": "filebeat.yml"
                    },
                    {
                      "name": "data",
                      "mountPath": "/usr/share/filebeat/data"
                    },
                    {
                      "name": "varlibdockercontainers",
                      "readOnly": true,
                      "mountPath": "/var/lib/docker/containers"
                    },
                    {
                      "name": "varlog",
                      "readOnly": true,
                      "mountPath": "/var/log"
                    }
                  ],
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "imagePullPolicy": "IfNotPresent",
                  "securityContext": { "runAsUser": 0 }
                }
              ],
              "restartPolicy": "Always",
              "terminationGracePeriodSeconds": 30,
              "dnsPolicy": "ClusterFirstWithHostNet",
              "serviceAccountName": "filebeat",
              "serviceAccount": "filebeat",
              "hostNetwork": true,
              "securityContext": {},
              "schedulerName": "default-scheduler"
            }
          },
          "updateStrategy": {
            "type": "RollingUpdate",
            "rollingUpdate": { "maxUnavailable": 1 }
          },
          "revisionHistoryLimit": 10
        },
        "status": {
          "currentNumberScheduled": 3,
          "numberMisscheduled": 0,
          "desiredNumberScheduled": 3,
          "numberReady": 3,
          "observedGeneration": 1,
          "updatedNumberScheduled": 3,
          "numberAvailable": 3
        }
      }
    ],
    "Jobs": [
      {
        "metadata": {
          "name": "fake-scanner-azsk-1588471200",
          "namespace": "joseki",
          "selfLink": "/apis/batch/v1/namespaces/joseki/jobs/fake-scanner-azsk-1588471200",
          "uid": "da51a7a3-3f56-4c91-b4c0-85db57b2b1ed",
          "resourceVersion": "17411702",
          "creationTimestamp": "2020-05-03T02:00:03Z",
          "labels": {
            "controller-uid": "da51a7a3-3f56-4c91-b4c0-85db57b2b1ed",
            "job-name": "fake-scanner-azsk-1588471200",
            "owner": "dummy7@dummy.com"
          },
          "ownerReferences": [
            {
              "apiVersion": "batch/v1beta1",
              "kind": "CronJob",
              "name": "fake-scanner-azsk",
              "uid": "0cea1c25-2e4c-4028-8e44-d3d51046656b",
              "controller": true,
              "blockOwnerDeletion": true
            }
          ]
        },
        "spec": {
          "parallelism": 1,
          "completions": 1,
          "backoffLimit": 6,
          "selector": { "matchLabels": { "controller-uid": "da51a7a3-3f56-4c91-b4c0-85db57b2b1ed" } },
          "template": {
            "metadata": {
              "creationTimestamp": null,
              "labels": {
                "controller-uid": "da51a7a3-3f56-4c91-b4c0-85db57b2b1ed",
                "job-name": "fake-scanner-azsk-1588471200"
              }
            },
            "spec": {
              "volumes": [
                {
                  "name": "config",
                  "configMap": {
                    "name": "fake-scanner-azsk-cfg",
                    "defaultMode": 420
                  }
                },
                {
                  "name": "test-data",
                  "configMap": {
                    "name": "azsk-test-data",
                    "defaultMode": 420
                  }
                },
                {
                  "name": "shared-data",
                  "emptyDir": {}
                }
              ],
              "initContainers": [
                {
                  "name": "extract-test-data",
                  "image": "alpine:3.11.5",
                  "command": [ "/bin/sh", "-c", "tar -xf /tmp/azsk_test_data.tar.xz -C /usr/share" ],
                  "resources": {},
                  "volumeMounts": [
                    {
                      "name": "test-data",
                      "readOnly": true,
                      "mountPath": "/tmp/azsk_test_data.tar.xz",
                      "subPath": "azsk_test_data.tar.xz"
                    },
                    {
                      "name": "shared-data",
                      "mountPath": "/usr/share/azsk_test_data"
                    }
                  ],
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "imagePullPolicy": "IfNotPresent"
                }
              ],
              "containers": [
                {
                  "name": "fake-scanner-azsk",
                  "image": "deepnetwork/joseki-scanner-azsk:0.2.1-sha-8b9750f4",
                  "args": [ "--config", "/app/config.az.yaml", "--subscriptions", "5720db52-2fb2-4568-bb63-20c7c0dd0a3e" ],
                  "env": [
                    {
                      "name": "SCANNER_VERSION",
                      "value": "0.2.1-sha-8b9750f4"
                    }
                  ],
                  "resources": {},
                  "volumeMounts": [
                    {
                      "name": "config",
                      "readOnly": true,
                      "mountPath": "/app/config.az.yaml",
                      "subPath": "fake-scanner-azsk-config.yaml"
                    },
                    {
                      "name": "shared-data",
                      "mountPath": "/usr/share/azsk_test_data"
                    }
                  ],
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "imagePullPolicy": "Always"
                }
              ],
              "restartPolicy": "Never",
              "terminationGracePeriodSeconds": 30,
              "dnsPolicy": "ClusterFirst",
              "serviceAccountName": "scanner-azsk",
              "serviceAccount": "scanner-azsk",
              "securityContext": {},
              "schedulerName": "default-scheduler"
            }
          }
        },
        "status": {
          "conditions": [
            {
              "type": "Complete",
              "status": "True",
              "lastProbeTime": "2020-05-03T02:00:12Z",
              "lastTransitionTime": "2020-05-03T02:00:12Z"
            }
          ],
          "startTime": "2020-05-03T02:00:03Z",
          "completionTime": "2020-05-03T02:00:12Z",
          "succeeded": 1
        }
      },
      {
        "metadata": {
          "name": "fake-scanner-azsk-1588557600",
          "namespace": "joseki",
          "selfLink": "/apis/batch/v1/namespaces/joseki/jobs/fake-scanner-azsk-1588557600",
          "uid": "d0454470-fe79-435a-bdfd-34191a9d0d07",
          "resourceVersion": "17639175",
          "creationTimestamp": "2020-05-04T02:00:02Z",
          "labels": {
            "controller-uid": "d0454470-fe79-435a-bdfd-34191a9d0d07",
            "job-name": "fake-scanner-azsk-1588557600",
            "owner": "dummy7@dummy.com"
          },
          "ownerReferences": [
            {
              "apiVersion": "batch/v1beta1",
              "kind": "CronJob",
              "name": "fake-scanner-azsk",
              "uid": "0cea1c25-2e4c-4028-8e44-d3d51046656b",
              "controller": true,
              "blockOwnerDeletion": true
            }
          ]
        },
        "spec": {
          "parallelism": 1,
          "completions": 1,
          "backoffLimit": 6,
          "selector": { "matchLabels": { "controller-uid": "d0454470-fe79-435a-bdfd-34191a9d0d07" } },
          "template": {
            "metadata": {
              "creationTimestamp": null,
              "labels": {
                "controller-uid": "d0454470-fe79-435a-bdfd-34191a9d0d07",
                "job-name": "fake-scanner-azsk-1588557600"
              }
            },
            "spec": {
              "volumes": [
                {
                  "name": "config",
                  "configMap": {
                    "name": "fake-scanner-azsk-cfg",
                    "defaultMode": 420
                  }
                },
                {
                  "name": "test-data",
                  "configMap": {
                    "name": "azsk-test-data",
                    "defaultMode": 420
                  }
                },
                {
                  "name": "shared-data",
                  "emptyDir": {}
                }
              ],
              "initContainers": [
                {
                  "name": "extract-test-data",
                  "image": "alpine:3.11.5",
                  "command": [ "/bin/sh", "-c", "tar -xf /tmp/azsk_test_data.tar.xz -C /usr/share" ],
                  "resources": {},
                  "volumeMounts": [
                    {
                      "name": "test-data",
                      "readOnly": true,
                      "mountPath": "/tmp/azsk_test_data.tar.xz",
                      "subPath": "azsk_test_data.tar.xz"
                    },
                    {
                      "name": "shared-data",
                      "mountPath": "/usr/share/azsk_test_data"
                    }
                  ],
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "imagePullPolicy": "IfNotPresent"
                }
              ],
              "containers": [
                {
                  "name": "fake-scanner-azsk",
                  "image": "deepnetwork/joseki-scanner-azsk:0.2.1-sha-8b9750f4",
                  "args": [ "--config", "/app/config.az.yaml", "--subscriptions", "5720db52-2fb2-4568-bb63-20c7c0dd0a3e" ],
                  "env": [
                    {
                      "name": "SCANNER_VERSION",
                      "value": "0.2.1-sha-8b9750f4"
                    }
                  ],
                  "resources": {},
                  "volumeMounts": [
                    {
                      "name": "config",
                      "readOnly": true,
                      "mountPath": "/app/config.az.yaml",
                      "subPath": "fake-scanner-azsk-config.yaml"
                    },
                    {
                      "name": "shared-data",
                      "mountPath": "/usr/share/azsk_test_data"
                    }
                  ],
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "imagePullPolicy": "Always"
                }
              ],
              "restartPolicy": "Never",
              "terminationGracePeriodSeconds": 30,
              "dnsPolicy": "ClusterFirst",
              "serviceAccountName": "scanner-azsk",
              "serviceAccount": "scanner-azsk",
              "securityContext": {},
              "schedulerName": "default-scheduler"
            }
          }
        },
        "status": {
          "conditions": [
            {
              "type": "Complete",
              "status": "True",
              "lastProbeTime": "2020-05-04T02:00:11Z",
              "lastTransitionTime": "2020-05-04T02:00:11Z"
            }
          ],
          "startTime": "2020-05-04T02:00:02Z",
          "completionTime": "2020-05-04T02:00:11Z",
          "succeeded": 1
        }
      },
      {
        "metadata": {
          "name": "fake-scanner-azsk-1588644000",
          "namespace": "joseki",
          "selfLink": "/apis/batch/v1/namespaces/joseki/jobs/fake-scanner-azsk-1588644000",
          "uid": "d26f0a4a-b679-418d-8c7d-fa01d23af1fe",
          "resourceVersion": "17866697",
          "creationTimestamp": "2020-05-05T02:00:06Z",
          "labels": {
            "controller-uid": "d26f0a4a-b679-418d-8c7d-fa01d23af1fe",
            "job-name": "fake-scanner-azsk-1588644000",
            "owner": "dummy8@dummy.com"
          },
          "ownerReferences": [
            {
              "apiVersion": "batch/v1beta1",
              "kind": "CronJob",
              "name": "fake-scanner-azsk",
              "uid": "0cea1c25-2e4c-4028-8e44-d3d51046656b",
              "controller": true,
              "blockOwnerDeletion": true
            }
          ]
        },
        "spec": {
          "parallelism": 1,
          "completions": 1,
          "backoffLimit": 6,
          "selector": { "matchLabels": { "controller-uid": "d26f0a4a-b679-418d-8c7d-fa01d23af1fe" } },
          "template": {
            "metadata": {
              "creationTimestamp": null,
              "labels": {
                "controller-uid": "d26f0a4a-b679-418d-8c7d-fa01d23af1fe",
                "job-name": "fake-scanner-azsk-1588644000"
              }
            },
            "spec": {
              "volumes": [
                {
                  "name": "config",
                  "configMap": {
                    "name": "fake-scanner-azsk-cfg",
                    "defaultMode": 420
                  }
                },
                {
                  "name": "test-data",
                  "configMap": {
                    "name": "azsk-test-data",
                    "defaultMode": 420
                  }
                },
                {
                  "name": "shared-data",
                  "emptyDir": {}
                }
              ],
              "initContainers": [
                {
                  "name": "extract-test-data",
                  "image": "alpine:3.11.5",
                  "command": [ "/bin/sh", "-c", "tar -xf /tmp/azsk_test_data.tar.xz -C /usr/share" ],
                  "resources": {},
                  "volumeMounts": [
                    {
                      "name": "test-data",
                      "readOnly": true,
                      "mountPath": "/tmp/azsk_test_data.tar.xz",
                      "subPath": "azsk_test_data.tar.xz"
                    },
                    {
                      "name": "shared-data",
                      "mountPath": "/usr/share/azsk_test_data"
                    }
                  ],
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "imagePullPolicy": "IfNotPresent"
                }
              ],
              "containers": [
                {
                  "name": "fake-scanner-azsk",
                  "image": "deepnetwork/joseki-scanner-azsk:0.2.1-sha-8b9750f4",
                  "args": [ "--config", "/app/config.az.yaml", "--subscriptions", "5720db52-2fb2-4568-bb63-20c7c0dd0a3e" ],
                  "env": [
                    {
                      "name": "SCANNER_VERSION",
                      "value": "0.2.1-sha-8b9750f4"
                    }
                  ],
                  "resources": {},
                  "volumeMounts": [
                    {
                      "name": "config",
                      "readOnly": true,
                      "mountPath": "/app/config.az.yaml",
                      "subPath": "fake-scanner-azsk-config.yaml"
                    },
                    {
                      "name": "shared-data",
                      "mountPath": "/usr/share/azsk_test_data"
                    }
                  ],
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "imagePullPolicy": "Always"
                }
              ],
              "restartPolicy": "Never",
              "terminationGracePeriodSeconds": 30,
              "dnsPolicy": "ClusterFirst",
              "serviceAccountName": "scanner-azsk",
              "serviceAccount": "scanner-azsk",
              "securityContext": {},
              "schedulerName": "default-scheduler"
            }
          }
        },
        "status": {
          "conditions": [
            {
              "type": "Complete",
              "status": "True",
              "lastProbeTime": "2020-05-05T02:00:16Z",
              "lastTransitionTime": "2020-05-05T02:00:16Z"
            }
          ],
          "startTime": "2020-05-05T02:00:06Z",
          "completionTime": "2020-05-05T02:00:16Z",
          "succeeded": 1
        }
      },
      {
        "metadata": {
          "name": "fake-scanner-azsk-1588730400",
          "namespace": "joseki",
          "selfLink": "/apis/batch/v1/namespaces/joseki/jobs/fake-scanner-azsk-1588730400",
          "uid": "bd72649c-410e-4de2-baf9-62098f543743",
          "resourceVersion": "18094054",
          "creationTimestamp": "2020-05-06T02:00:06Z",
          "labels": {
            "controller-uid": "bd72649c-410e-4de2-baf9-62098f543743",
            "job-name": "fake-scanner-azsk-1588730400",
            "owner": "dummy8@dummy.com"
          },
          "ownerReferences": [
            {
              "apiVersion": "batch/v1beta1",
              "kind": "CronJob",
              "name": "fake-scanner-azsk",
              "uid": "0cea1c25-2e4c-4028-8e44-d3d51046656b",
              "controller": true,
              "blockOwnerDeletion": true
            }
          ]
        },
        "spec": {
          "parallelism": 1,
          "completions": 1,
          "backoffLimit": 6,
          "selector": { "matchLabels": { "controller-uid": "bd72649c-410e-4de2-baf9-62098f543743" } },
          "template": {
            "metadata": {
              "creationTimestamp": null,
              "labels": {
                "controller-uid": "bd72649c-410e-4de2-baf9-62098f543743",
                "job-name": "fake-scanner-azsk-1588730400"
              }
            },
            "spec": {
              "volumes": [
                {
                  "name": "config",
                  "configMap": {
                    "name": "fake-scanner-azsk-cfg",
                    "defaultMode": 420
                  }
                },
                {
                  "name": "test-data",
                  "configMap": {
                    "name": "azsk-test-data",
                    "defaultMode": 420
                  }
                },
                {
                  "name": "shared-data",
                  "emptyDir": {}
                }
              ],
              "initContainers": [
                {
                  "name": "extract-test-data",
                  "image": "alpine:3.11.5",
                  "command": [ "/bin/sh", "-c", "tar -xf /tmp/azsk_test_data.tar.xz -C /usr/share" ],
                  "resources": {},
                  "volumeMounts": [
                    {
                      "name": "test-data",
                      "readOnly": true,
                      "mountPath": "/tmp/azsk_test_data.tar.xz",
                      "subPath": "azsk_test_data.tar.xz"
                    },
                    {
                      "name": "shared-data",
                      "mountPath": "/usr/share/azsk_test_data"
                    }
                  ],
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "imagePullPolicy": "IfNotPresent"
                }
              ],
              "containers": [
                {
                  "name": "fake-scanner-azsk",
                  "image": "deepnetwork/joseki-scanner-azsk:0.2.1-sha-8b9750f4",
                  "args": [ "--config", "/app/config.az.yaml", "--subscriptions", "5720db52-2fb2-4568-bb63-20c7c0dd0a3e" ],
                  "env": [
                    {
                      "name": "SCANNER_VERSION",
                      "value": "0.2.1-sha-8b9750f4"
                    }
                  ],
                  "resources": {},
                  "volumeMounts": [
                    {
                      "name": "config",
                      "readOnly": true,
                      "mountPath": "/app/config.az.yaml",
                      "subPath": "fake-scanner-azsk-config.yaml"
                    },
                    {
                      "name": "shared-data",
                      "mountPath": "/usr/share/azsk_test_data"
                    }
                  ],
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "imagePullPolicy": "Always"
                }
              ],
              "restartPolicy": "Never",
              "terminationGracePeriodSeconds": 30,
              "dnsPolicy": "ClusterFirst",
              "serviceAccountName": "scanner-azsk",
              "serviceAccount": "scanner-azsk",
              "securityContext": {},
              "schedulerName": "default-scheduler"
            }
          }
        },
        "status": {
          "startTime": "2020-05-06T02:00:06Z",
          "active": 1
        }
      },
      {
        "metadata": {
          "name": "fake-scanner-polaris-1588471200",
          "namespace": "joseki",
          "selfLink": "/apis/batch/v1/namespaces/joseki/jobs/fake-scanner-polaris-1588471200",
          "uid": "cf27b28e-dcc5-47b4-a3b2-98711706062d",
          "resourceVersion": "17411704",
          "creationTimestamp": "2020-05-03T02:00:03Z",
          "labels": {
            "controller-uid": "cf27b28e-dcc5-47b4-a3b2-98711706062d",
            "job-name": "fake-scanner-polaris-1588471200",
            "owner": "dummy8@dummy.com"
          },
          "ownerReferences": [
            {
              "apiVersion": "batch/v1beta1",
              "kind": "CronJob",
              "name": "fake-scanner-polaris",
              "uid": "37f2b0e9-aebc-4720-9a4b-92e92ebafc7a",
              "controller": true,
              "blockOwnerDeletion": true
            }
          ]
        },
        "spec": {
          "parallelism": 1,
          "completions": 1,
          "backoffLimit": 6,
          "selector": { "matchLabels": { "controller-uid": "cf27b28e-dcc5-47b4-a3b2-98711706062d" } },
          "template": {
            "metadata": {
              "creationTimestamp": null,
              "labels": {
                "controller-uid": "cf27b28e-dcc5-47b4-a3b2-98711706062d",
                "job-name": "fake-scanner-polaris-1588471200"
              }
            },
            "spec": {
              "volumes": [
                {
                  "name": "config",
                  "configMap": {
                    "name": "fake-scanner-polaris-cfg",
                    "defaultMode": 420
                  }
                },
                {
                  "name": "test-data",
                  "configMap": {
                    "name": "polaris-test-data",
                    "defaultMode": 420
                  }
                },
                {
                  "name": "shared-data",
                  "emptyDir": {}
                }
              ],
              "initContainers": [
                {
                  "name": "extract-test-data",
                  "image": "alpine:3.11.5",
                  "command": [ "/bin/sh", "-c", "tar -xf /tmp/polaris_test_data.tar.xz -C /usr/share" ],
                  "resources": {},
                  "volumeMounts": [
                    {
                      "name": "test-data",
                      "readOnly": true,
                      "mountPath": "/tmp/polaris_test_data.tar.xz",
                      "subPath": "polaris_test_data.tar.xz"
                    },
                    {
                      "name": "shared-data",
                      "mountPath": "/usr/share/polaris_test_data"
                    }
                  ],
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "imagePullPolicy": "IfNotPresent"
                }
              ],
              "containers": [
                {
                  "name": "fake-scanner-polaris",
                  "image": "deepnetwork/joseki-scanner-polaris:0.2.2-sha-d9d3d2b7",
                  "args": [ "--config", "/app/scanner-polaris-config.yaml" ],
                  "env": [
                    {
                      "name": "SCANNER_VERSION",
                      "value": "0.2.2-sha-d9d3d2b7"
                    }
                  ],
                  "resources": {},
                  "volumeMounts": [
                    {
                      "name": "config",
                      "readOnly": true,
                      "mountPath": "/app/scanner-polaris-config.yaml",
                      "subPath": "fake-scanner-polaris-config.yaml"
                    },
                    {
                      "name": "config",
                      "readOnly": true,
                      "mountPath": "/app/polaris-config.yaml",
                      "subPath": "polaris-config.yaml"
                    },
                    {
                      "name": "shared-data",
                      "mountPath": "/usr/share/polaris_test_data"
                    }
                  ],
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "imagePullPolicy": "Always"
                }
              ],
              "restartPolicy": "Never",
              "terminationGracePeriodSeconds": 30,
              "dnsPolicy": "ClusterFirst",
              "serviceAccountName": "scanner-polaris",
              "serviceAccount": "scanner-polaris",
              "securityContext": {},
              "schedulerName": "default-scheduler"
            }
          }
        },
        "status": {
          "conditions": [
            {
              "type": "Complete",
              "status": "True",
              "lastProbeTime": "2020-05-03T02:00:12Z",
              "lastTransitionTime": "2020-05-03T02:00:12Z"
            }
          ],
          "startTime": "2020-05-03T02:00:03Z",
          "completionTime": "2020-05-03T02:00:12Z",
          "succeeded": 1
        }
      },
      {
        "metadata": {
          "name": "fake-scanner-polaris-1588557600",
          "namespace": "joseki",
          "selfLink": "/apis/batch/v1/namespaces/joseki/jobs/fake-scanner-polaris-1588557600",
          "uid": "2e412a49-ce73-43a0-86a8-80e436d4c7d7",
          "resourceVersion": "17639177",
          "creationTimestamp": "2020-05-04T02:00:02Z",
          "labels": {
            "controller-uid": "2e412a49-ce73-43a0-86a8-80e436d4c7d7",
            "job-name": "fake-scanner-polaris-1588557600",
            "owner": "dummy8@dummy.com"
          },
          "ownerReferences": [
            {
              "apiVersion": "batch/v1beta1",
              "kind": "CronJob",
              "name": "fake-scanner-polaris",
              "uid": "37f2b0e9-aebc-4720-9a4b-92e92ebafc7a",
              "controller": true,
              "blockOwnerDeletion": true
            }
          ]
        },
        "spec": {
          "parallelism": 1,
          "completions": 1,
          "backoffLimit": 6,
          "selector": { "matchLabels": { "controller-uid": "2e412a49-ce73-43a0-86a8-80e436d4c7d7" } },
          "template": {
            "metadata": {
              "creationTimestamp": null,
              "labels": {
                "controller-uid": "2e412a49-ce73-43a0-86a8-80e436d4c7d7",
                "job-name": "fake-scanner-polaris-1588557600"
              }
            },
            "spec": {
              "volumes": [
                {
                  "name": "config",
                  "configMap": {
                    "name": "fake-scanner-polaris-cfg",
                    "defaultMode": 420
                  }
                },
                {
                  "name": "test-data",
                  "configMap": {
                    "name": "polaris-test-data",
                    "defaultMode": 420
                  }
                },
                {
                  "name": "shared-data",
                  "emptyDir": {}
                }
              ],
              "initContainers": [
                {
                  "name": "extract-test-data",
                  "image": "alpine:3.11.5",
                  "command": [ "/bin/sh", "-c", "tar -xf /tmp/polaris_test_data.tar.xz -C /usr/share" ],
                  "resources": {},
                  "volumeMounts": [
                    {
                      "name": "test-data",
                      "readOnly": true,
                      "mountPath": "/tmp/polaris_test_data.tar.xz",
                      "subPath": "polaris_test_data.tar.xz"
                    },
                    {
                      "name": "shared-data",
                      "mountPath": "/usr/share/polaris_test_data"
                    }
                  ],
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "imagePullPolicy": "IfNotPresent"
                }
              ],
              "containers": [
                {
                  "name": "fake-scanner-polaris",
                  "image": "deepnetwork/joseki-scanner-polaris:0.2.2-sha-d9d3d2b7",
                  "args": [ "--config", "/app/scanner-polaris-config.yaml" ],
                  "env": [
                    {
                      "name": "SCANNER_VERSION",
                      "value": "0.2.2-sha-d9d3d2b7"
                    }
                  ],
                  "resources": {},
                  "volumeMounts": [
                    {
                      "name": "config",
                      "readOnly": true,
                      "mountPath": "/app/scanner-polaris-config.yaml",
                      "subPath": "fake-scanner-polaris-config.yaml"
                    },
                    {
                      "name": "config",
                      "readOnly": true,
                      "mountPath": "/app/polaris-config.yaml",
                      "subPath": "polaris-config.yaml"
                    },
                    {
                      "name": "shared-data",
                      "mountPath": "/usr/share/polaris_test_data"
                    }
                  ],
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "imagePullPolicy": "Always"
                }
              ],
              "restartPolicy": "Never",
              "terminationGracePeriodSeconds": 30,
              "dnsPolicy": "ClusterFirst",
              "serviceAccountName": "scanner-polaris",
              "serviceAccount": "scanner-polaris",
              "securityContext": {},
              "schedulerName": "default-scheduler"
            }
          }
        },
        "status": {
          "conditions": [
            {
              "type": "Complete",
              "status": "True",
              "lastProbeTime": "2020-05-04T02:00:11Z",
              "lastTransitionTime": "2020-05-04T02:00:11Z"
            }
          ],
          "startTime": "2020-05-04T02:00:02Z",
          "completionTime": "2020-05-04T02:00:11Z",
          "succeeded": 1
        }
      },
      {
        "metadata": {
          "name": "fake-scanner-polaris-1588644000",
          "namespace": "joseki",
          "selfLink": "/apis/batch/v1/namespaces/joseki/jobs/fake-scanner-polaris-1588644000",
          "uid": "a6345995-61e2-4ac7-9832-12fd01a6f2b0",
          "resourceVersion": "17866695",
          "creationTimestamp": "2020-05-05T02:00:06Z",
          "labels": {
            "controller-uid": "a6345995-61e2-4ac7-9832-12fd01a6f2b0",
            "job-name": "fake-scanner-polaris-1588644000",
            "owner": "dummy8@dummy.com"
          },
          "ownerReferences": [
            {
              "apiVersion": "batch/v1beta1",
              "kind": "CronJob",
              "name": "fake-scanner-polaris",
              "uid": "37f2b0e9-aebc-4720-9a4b-92e92ebafc7a",
              "controller": true,
              "blockOwnerDeletion": true
            }
          ]
        },
        "spec": {
          "parallelism": 1,
          "completions": 1,
          "backoffLimit": 6,
          "selector": { "matchLabels": { "controller-uid": "a6345995-61e2-4ac7-9832-12fd01a6f2b0" } },
          "template": {
            "metadata": {
              "creationTimestamp": null,
              "labels": {
                "controller-uid": "a6345995-61e2-4ac7-9832-12fd01a6f2b0",
                "job-name": "fake-scanner-polaris-1588644000"
              }
            },
            "spec": {
              "volumes": [
                {
                  "name": "config",
                  "configMap": {
                    "name": "fake-scanner-polaris-cfg",
                    "defaultMode": 420
                  }
                },
                {
                  "name": "test-data",
                  "configMap": {
                    "name": "polaris-test-data",
                    "defaultMode": 420
                  }
                },
                {
                  "name": "shared-data",
                  "emptyDir": {}
                }
              ],
              "initContainers": [
                {
                  "name": "extract-test-data",
                  "image": "alpine:3.11.5",
                  "command": [ "/bin/sh", "-c", "tar -xf /tmp/polaris_test_data.tar.xz -C /usr/share" ],
                  "resources": {},
                  "volumeMounts": [
                    {
                      "name": "test-data",
                      "readOnly": true,
                      "mountPath": "/tmp/polaris_test_data.tar.xz",
                      "subPath": "polaris_test_data.tar.xz"
                    },
                    {
                      "name": "shared-data",
                      "mountPath": "/usr/share/polaris_test_data"
                    }
                  ],
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "imagePullPolicy": "IfNotPresent"
                }
              ],
              "containers": [
                {
                  "name": "fake-scanner-polaris",
                  "image": "deepnetwork/joseki-scanner-polaris:0.2.2-sha-d9d3d2b7",
                  "args": [ "--config", "/app/scanner-polaris-config.yaml" ],
                  "env": [
                    {
                      "name": "SCANNER_VERSION",
                      "value": "0.2.2-sha-d9d3d2b7"
                    }
                  ],
                  "resources": {},
                  "volumeMounts": [
                    {
                      "name": "config",
                      "readOnly": true,
                      "mountPath": "/app/scanner-polaris-config.yaml",
                      "subPath": "fake-scanner-polaris-config.yaml"
                    },
                    {
                      "name": "config",
                      "readOnly": true,
                      "mountPath": "/app/polaris-config.yaml",
                      "subPath": "polaris-config.yaml"
                    },
                    {
                      "name": "shared-data",
                      "mountPath": "/usr/share/polaris_test_data"
                    }
                  ],
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "imagePullPolicy": "Always"
                }
              ],
              "restartPolicy": "Never",
              "terminationGracePeriodSeconds": 30,
              "dnsPolicy": "ClusterFirst",
              "serviceAccountName": "scanner-polaris",
              "serviceAccount": "scanner-polaris",
              "securityContext": {},
              "schedulerName": "default-scheduler"
            }
          }
        },
        "status": {
          "conditions": [
            {
              "type": "Complete",
              "status": "True",
              "lastProbeTime": "2020-05-05T02:00:16Z",
              "lastTransitionTime": "2020-05-05T02:00:16Z"
            }
          ],
          "startTime": "2020-05-05T02:00:06Z",
          "completionTime": "2020-05-05T02:00:16Z",
          "succeeded": 1
        }
      },
      {
        "metadata": {
          "name": "fake-scanner-polaris-1588730400",
          "namespace": "joseki",
          "selfLink": "/apis/batch/v1/namespaces/joseki/jobs/fake-scanner-polaris-1588730400",
          "uid": "c9cf30c3-2280-4eea-a4ab-5897eda4287e",
          "resourceVersion": "18094122",
          "creationTimestamp": "2020-05-06T02:00:06Z",
          "labels": {
            "controller-uid": "c9cf30c3-2280-4eea-a4ab-5897eda4287e",
            "job-name": "fake-scanner-polaris-1588730400",
            "owner": "dummy8@dummy.com"
          },
          "ownerReferences": [
            {
              "apiVersion": "batch/v1beta1",
              "kind": "CronJob",
              "name": "fake-scanner-polaris",
              "uid": "37f2b0e9-aebc-4720-9a4b-92e92ebafc7a",
              "controller": true,
              "blockOwnerDeletion": true
            }
          ]
        },
        "spec": {
          "parallelism": 1,
          "completions": 1,
          "backoffLimit": 6,
          "selector": { "matchLabels": { "controller-uid": "c9cf30c3-2280-4eea-a4ab-5897eda4287e" } },
          "template": {
            "metadata": {
              "creationTimestamp": null,
              "labels": {
                "controller-uid": "c9cf30c3-2280-4eea-a4ab-5897eda4287e",
                "job-name": "fake-scanner-polaris-1588730400"
              }
            },
            "spec": {
              "volumes": [
                {
                  "name": "config",
                  "configMap": {
                    "name": "fake-scanner-polaris-cfg",
                    "defaultMode": 420
                  }
                },
                {
                  "name": "test-data",
                  "configMap": {
                    "name": "polaris-test-data",
                    "defaultMode": 420
                  }
                },
                {
                  "name": "shared-data",
                  "emptyDir": {}
                }
              ],
              "initContainers": [
                {
                  "name": "extract-test-data",
                  "image": "alpine:3.11.5",
                  "command": [ "/bin/sh", "-c", "tar -xf /tmp/polaris_test_data.tar.xz -C /usr/share" ],
                  "resources": {},
                  "volumeMounts": [
                    {
                      "name": "test-data",
                      "readOnly": true,
                      "mountPath": "/tmp/polaris_test_data.tar.xz",
                      "subPath": "polaris_test_data.tar.xz"
                    },
                    {
                      "name": "shared-data",
                      "mountPath": "/usr/share/polaris_test_data"
                    }
                  ],
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "imagePullPolicy": "IfNotPresent"
                }
              ],
              "containers": [
                {
                  "name": "fake-scanner-polaris",
                  "image": "deepnetwork/joseki-scanner-polaris:0.2.2-sha-d9d3d2b7",
                  "args": [ "--config", "/app/scanner-polaris-config.yaml" ],
                  "env": [
                    {
                      "name": "SCANNER_VERSION",
                      "value": "0.2.2-sha-d9d3d2b7"
                    }
                  ],
                  "resources": {},
                  "volumeMounts": [
                    {
                      "name": "config",
                      "readOnly": true,
                      "mountPath": "/app/scanner-polaris-config.yaml",
                      "subPath": "fake-scanner-polaris-config.yaml"
                    },
                    {
                      "name": "config",
                      "readOnly": true,
                      "mountPath": "/app/polaris-config.yaml",
                      "subPath": "polaris-config.yaml"
                    },
                    {
                      "name": "shared-data",
                      "mountPath": "/usr/share/polaris_test_data"
                    }
                  ],
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "imagePullPolicy": "Always"
                }
              ],
              "restartPolicy": "Never",
              "terminationGracePeriodSeconds": 30,
              "dnsPolicy": "ClusterFirst",
              "serviceAccountName": "scanner-polaris",
              "serviceAccount": "scanner-polaris",
              "securityContext": {},
              "schedulerName": "default-scheduler"
            }
          }
        },
        "status": {
          "conditions": [
            {
              "type": "Complete",
              "status": "True",
              "lastProbeTime": "2020-05-06T02:00:14Z",
              "lastTransitionTime": "2020-05-06T02:00:14Z"
            }
          ],
          "startTime": "2020-05-06T02:00:06Z",
          "completionTime": "2020-05-06T02:00:14Z",
          "succeeded": 1
        }
      },
      {
        "metadata": {
          "name": "scanner-azsk-0dfa8355",
          "namespace": "joseki",
          "selfLink": "/apis/batch/v1/namespaces/joseki/jobs/scanner-azsk-0dfa8355",
          "uid": "a605ccb8-2ccf-4625-88b7-6a4e21863788",
          "resourceVersion": "13603929",
          "creationTimestamp": "2020-04-16T07:33:21Z",
          "labels": {
            "app": "scanner-azsk-0dfa8355",
            "module": "scanners",
            "version": "0.3.0",
            "owner": "dummy8@dummy.com"
          },
          "annotations": { "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"batch/v1\",\"kind\":\"Job\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"scanner-azsk-0dfa8355\",\"module\":\"scanners\",\"version\":\"0.3.0\"},\"name\":\"scanner-azsk-0dfa8355\",\"namespace\":\"joseki\"},\"spec\":{\"template\":{\"spec\":{\"containers\":[{\"args\":[\"--config\",\"/app/config_scanner.yaml\",\"--subscriptions\",\"fd2c5679-1d12-4a1a-927d-7728fd6790bd\",\"cddd57db-cebc-4031-9e8b-af06407c8745\",\"77b3ee8a-c75c-4031-b507-9e92f70ec35f\"],\"env\":[{\"name\":\"SCANNER_VERSION\",\"value\":\"0.3.0\"}],\"image\":\"deepnetwork/joseki-scanner-azsk:0.3.0\",\"imagePullPolicy\":\"Always\",\"name\":\"scanner-azsk\",\"volumeMounts\":[{\"mountPath\":\"/app/config_scanner.yaml\",\"name\":\"config\",\"readOnly\":true,\"subPath\":\"config_scanner.yaml\"}]}],\"restartPolicy\":\"Never\",\"serviceAccountName\":\"scanner-azsk\",\"volumes\":[{\"configMap\":{\"name\":\"scanner-azsk-0dfa8355-cfg\"},\"name\":\"config\"}]}}}}\n" }
        },
        "spec": {
          "parallelism": 1,
          "completions": 1,
          "backoffLimit": 6,
          "selector": { "matchLabels": { "controller-uid": "a605ccb8-2ccf-4625-88b7-6a4e21863788" } },
          "template": {
            "metadata": {
              "creationTimestamp": null,
              "labels": {
                "controller-uid": "a605ccb8-2ccf-4625-88b7-6a4e21863788",
                "job-name": "scanner-azsk-0dfa8355"
              }
            },
            "spec": {
              "volumes": [
                {
                  "name": "config",
                  "configMap": {
                    "name": "scanner-azsk-0dfa8355-cfg",
                    "defaultMode": 420
                  }
                }
              ],
              "containers": [
                {
                  "name": "scanner-azsk",
                  "image": "deepnetwork/joseki-scanner-azsk:0.3.0",
                  "args": [ "--config", "/app/config_scanner.yaml", "--subscriptions", "fd2c5679-1d12-4a1a-927d-7728fd6790bd", "cddd57db-cebc-4031-9e8b-af06407c8745", "77b3ee8a-c75c-4031-b507-9e92f70ec35f" ],
                  "env": [
                    {
                      "name": "SCANNER_VERSION",
                      "value": "0.3.0"
                    }
                  ],
                  "resources": {},
                  "volumeMounts": [
                    {
                      "name": "config",
                      "readOnly": true,
                      "mountPath": "/app/config_scanner.yaml",
                      "subPath": "config_scanner.yaml"
                    }
                  ],
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "imagePullPolicy": "Always"
                }
              ],
              "restartPolicy": "Never",
              "terminationGracePeriodSeconds": 30,
              "dnsPolicy": "ClusterFirst",
              "serviceAccountName": "scanner-azsk",
              "serviceAccount": "scanner-azsk",
              "securityContext": {},
              "schedulerName": "default-scheduler"
            }
          }
        },
        "status": {
          "conditions": [
            {
              "type": "Complete",
              "status": "True",
              "lastProbeTime": "2020-04-16T07:40:54Z",
              "lastTransitionTime": "2020-04-16T07:40:54Z"
            }
          ],
          "startTime": "2020-04-16T07:33:21Z",
          "completionTime": "2020-04-16T07:40:54Z",
          "succeeded": 1
        }
      },
      {
        "metadata": {
          "name": "scanner-azsk-1588471200",
          "namespace": "joseki",
          "selfLink": "/apis/batch/v1/namespaces/joseki/jobs/scanner-azsk-1588471200",
          "uid": "2fc5d48d-fb61-467d-896f-2daa7cc1831e",
          "resourceVersion": "17413336",
          "creationTimestamp": "2020-05-03T02:00:03Z",
          "labels": {
            "controller-uid": "2fc5d48d-fb61-467d-896f-2daa7cc1831e",
            "job-name": "scanner-azsk-1588471200",
            "owner": "dummy8@dummy.com"
          },
          "ownerReferences": [
            {
              "apiVersion": "batch/v1beta1",
              "kind": "CronJob",
              "name": "scanner-azsk",
              "uid": "75a818c2-2db3-4508-9ad7-de5cf334ae01",
              "controller": true,
              "blockOwnerDeletion": true
            }
          ]
        },
        "spec": {
          "parallelism": 1,
          "completions": 1,
          "backoffLimit": 6,
          "selector": { "matchLabels": { "controller-uid": "2fc5d48d-fb61-467d-896f-2daa7cc1831e" } },
          "template": {
            "metadata": {
              "creationTimestamp": null,
              "labels": {
                "controller-uid": "2fc5d48d-fb61-467d-896f-2daa7cc1831e",
                "job-name": "scanner-azsk-1588471200"
              }
            },
            "spec": {
              "volumes": [
                {
                  "name": "config",
                  "configMap": {
                    "name": "scanner-azsk-cfg",
                    "defaultMode": 420
                  }
                }
              ],
              "containers": [
                {
                  "name": "scanner-azsk",
                  "image": "deepnetwork/joseki-scanner-azsk:0.3.0-sha-37904e3c",
                  "args": [ "--config", "/app/config.az.yaml", "--subscriptions", "fd2c5679-1d12-4a1a-927d-7728fd6790bd", "cddd57db-cebc-4031-9e8b-af06407c8745", "77b3ee8a-c75c-4031-b507-9e92f70ec35f" ],
                  "env": [
                    {
                      "name": "SCANNER_VERSION",
                      "value": "0.3.0-sha-37904e3c"
                    }
                  ],
                  "resources": {},
                  "volumeMounts": [
                    {
                      "name": "config",
                      "readOnly": true,
                      "mountPath": "/app/config.az.yaml",
                      "subPath": "scanner-azsk-config.yaml"
                    }
                  ],
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "imagePullPolicy": "Always"
                }
              ],
              "restartPolicy": "Never",
              "terminationGracePeriodSeconds": 30,
              "dnsPolicy": "ClusterFirst",
              "serviceAccountName": "scanner-azsk",
              "serviceAccount": "scanner-azsk",
              "securityContext": {},
              "schedulerName": "default-scheduler"
            }
          }
        },
        "status": {
          "conditions": [
            {
              "type": "Complete",
              "status": "True",
              "lastProbeTime": "2020-05-03T02:10:25Z",
              "lastTransitionTime": "2020-05-03T02:10:25Z"
            }
          ],
          "startTime": "2020-05-03T02:00:03Z",
          "completionTime": "2020-05-03T02:10:25Z",
          "succeeded": 1
        }
      },
      {
        "metadata": {
          "name": "scanner-azsk-1588557600",
          "namespace": "joseki",
          "selfLink": "/apis/batch/v1/namespaces/joseki/jobs/scanner-azsk-1588557600",
          "uid": "56195720-f56a-4134-a9c3-7a5a6c9caa1c",
          "resourceVersion": "17640994",
          "creationTimestamp": "2020-05-04T02:00:02Z",
          "labels": {
            "controller-uid": "56195720-f56a-4134-a9c3-7a5a6c9caa1c",
            "job-name": "scanner-azsk-1588557600",
            "owner": "dummy8@dummy.com"
          },
          "ownerReferences": [
            {
              "apiVersion": "batch/v1beta1",
              "kind": "CronJob",
              "name": "scanner-azsk",
              "uid": "75a818c2-2db3-4508-9ad7-de5cf334ae01",
              "controller": true,
              "blockOwnerDeletion": true
            }
          ]
        },
        "spec": {
          "parallelism": 1,
          "completions": 1,
          "backoffLimit": 6,
          "selector": { "matchLabels": { "controller-uid": "56195720-f56a-4134-a9c3-7a5a6c9caa1c" } },
          "template": {
            "metadata": {
              "creationTimestamp": null,
              "labels": {
                "controller-uid": "56195720-f56a-4134-a9c3-7a5a6c9caa1c",
                "job-name": "scanner-azsk-1588557600"
              }
            },
            "spec": {
              "volumes": [
                {
                  "name": "config",
                  "configMap": {
                    "name": "scanner-azsk-cfg",
                    "defaultMode": 420
                  }
                }
              ],
              "containers": [
                {
                  "name": "scanner-azsk",
                  "image": "deepnetwork/joseki-scanner-azsk:0.3.0-sha-37904e3c",
                  "args": [ "--config", "/app/config.az.yaml", "--subscriptions", "fd2c5679-1d12-4a1a-927d-7728fd6790bd", "cddd57db-cebc-4031-9e8b-af06407c8745", "77b3ee8a-c75c-4031-b507-9e92f70ec35f" ],
                  "env": [
                    {
                      "name": "SCANNER_VERSION",
                      "value": "0.3.0-sha-37904e3c"
                    }
                  ],
                  "resources": {},
                  "volumeMounts": [
                    {
                      "name": "config",
                      "readOnly": true,
                      "mountPath": "/app/config.az.yaml",
                      "subPath": "scanner-azsk-config.yaml"
                    }
                  ],
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "imagePullPolicy": "Always"
                }
              ],
              "restartPolicy": "Never",
              "terminationGracePeriodSeconds": 30,
              "dnsPolicy": "ClusterFirst",
              "serviceAccountName": "scanner-azsk",
              "serviceAccount": "scanner-azsk",
              "securityContext": {},
              "schedulerName": "default-scheduler"
            }
          }
        },
        "status": {
          "conditions": [
            {
              "type": "Complete",
              "status": "True",
              "lastProbeTime": "2020-05-04T02:11:33Z",
              "lastTransitionTime": "2020-05-04T02:11:33Z"
            }
          ],
          "startTime": "2020-05-04T02:00:02Z",
          "completionTime": "2020-05-04T02:11:33Z",
          "succeeded": 1
        }
      },
      {
        "metadata": {
          "name": "scanner-azsk-1588644000",
          "namespace": "joseki",
          "selfLink": "/apis/batch/v1/namespaces/joseki/jobs/scanner-azsk-1588644000",
          "uid": "6681ce57-7cb5-483d-9798-c66817538544",
          "resourceVersion": "17868560",
          "creationTimestamp": "2020-05-05T02:00:06Z",
          "labels": {
            "controller-uid": "6681ce57-7cb5-483d-9798-c66817538544",
            "job-name": "scanner-azsk-1588644000",
            "owner": "dummy8@dummy.com"
          },
          "ownerReferences": [
            {
              "apiVersion": "batch/v1beta1",
              "kind": "CronJob",
              "name": "scanner-azsk",
              "uid": "75a818c2-2db3-4508-9ad7-de5cf334ae01",
              "controller": true,
              "blockOwnerDeletion": true
            }
          ]
        },
        "spec": {
          "parallelism": 1,
          "completions": 1,
          "backoffLimit": 6,
          "selector": { "matchLabels": { "controller-uid": "6681ce57-7cb5-483d-9798-c66817538544" } },
          "template": {
            "metadata": {
              "creationTimestamp": null,
              "labels": {
                "controller-uid": "6681ce57-7cb5-483d-9798-c66817538544",
                "job-name": "scanner-azsk-1588644000",
                "owner": "dummy8@dummy.com"
              }
            },
            "spec": {
              "volumes": [
                {
                  "name": "config",
                  "configMap": {
                    "name": "scanner-azsk-cfg",
                    "defaultMode": 420
                  }
                }
              ],
              "containers": [
                {
                  "name": "scanner-azsk",
                  "image": "deepnetwork/joseki-scanner-azsk:0.3.0-sha-37904e3c",
                  "args": [ "--config", "/app/config.az.yaml", "--subscriptions", "fd2c5679-1d12-4a1a-927d-7728fd6790bd", "cddd57db-cebc-4031-9e8b-af06407c8745", "77b3ee8a-c75c-4031-b507-9e92f70ec35f" ],
                  "env": [
                    {
                      "name": "SCANNER_VERSION",
                      "value": "0.3.0-sha-37904e3c"
                    }
                  ],
                  "resources": {},
                  "volumeMounts": [
                    {
                      "name": "config",
                      "readOnly": true,
                      "mountPath": "/app/config.az.yaml",
                      "subPath": "scanner-azsk-config.yaml"
                    }
                  ],
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "imagePullPolicy": "Always"
                }
              ],
              "restartPolicy": "Never",
              "terminationGracePeriodSeconds": 30,
              "dnsPolicy": "ClusterFirst",
              "serviceAccountName": "scanner-azsk",
              "serviceAccount": "scanner-azsk",
              "securityContext": {},
              "schedulerName": "default-scheduler"
            }
          }
        },
        "status": {
          "conditions": [
            {
              "type": "Complete",
              "status": "True",
              "lastProbeTime": "2020-05-05T02:11:56Z",
              "lastTransitionTime": "2020-05-05T02:11:56Z"
            }
          ],
          "startTime": "2020-05-05T02:00:06Z",
          "completionTime": "2020-05-05T02:11:56Z",
          "succeeded": 1
        }
      },
      {
        "metadata": {
          "name": "scanner-azsk-1588730400",
          "namespace": "joseki",
          "selfLink": "/apis/batch/v1/namespaces/joseki/jobs/scanner-azsk-1588730400",
          "uid": "39e6f4a1-ce10-4d3c-af51-bb0e5f195f92",
          "resourceVersion": "18094064",
          "creationTimestamp": "2020-05-06T02:00:06Z",
          "labels": {
            "controller-uid": "39e6f4a1-ce10-4d3c-af51-bb0e5f195f92",
            "job-name": "scanner-azsk-1588730400",
            "owner": "dummy9@dummy.com"
          },
          "ownerReferences": [
            {
              "apiVersion": "batch/v1beta1",
              "kind": "CronJob",
              "name": "scanner-azsk",
              "uid": "75a818c2-2db3-4508-9ad7-de5cf334ae01",
              "controller": true,
              "blockOwnerDeletion": true
            }
          ]
        },
        "spec": {
          "parallelism": 1,
          "completions": 1,
          "backoffLimit": 6,
          "selector": { "matchLabels": { "controller-uid": "39e6f4a1-ce10-4d3c-af51-bb0e5f195f92" } },
          "template": {
            "metadata": {
              "creationTimestamp": null,
              "labels": {
                "controller-uid": "39e6f4a1-ce10-4d3c-af51-bb0e5f195f92",
                "job-name": "scanner-azsk-1588730400"
              }
            },
            "spec": {
              "volumes": [
                {
                  "name": "config",
                  "configMap": {
                    "name": "scanner-azsk-cfg",
                    "defaultMode": 420
                  }
                }
              ],
              "containers": [
                {
                  "name": "scanner-azsk",
                  "image": "deepnetwork/joseki-scanner-azsk:0.3.0-sha-37904e3c",
                  "args": [ "--config", "/app/config.az.yaml", "--subscriptions", "fd2c5679-1d12-4a1a-927d-7728fd6790bd", "cddd57db-cebc-4031-9e8b-af06407c8745", "77b3ee8a-c75c-4031-b507-9e92f70ec35f" ],
                  "env": [
                    {
                      "name": "SCANNER_VERSION",
                      "value": "0.3.0-sha-37904e3c"
                    }
                  ],
                  "resources": {},
                  "volumeMounts": [
                    {
                      "name": "config",
                      "readOnly": true,
                      "mountPath": "/app/config.az.yaml",
                      "subPath": "scanner-azsk-config.yaml"
                    }
                  ],
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "imagePullPolicy": "Always"
                }
              ],
              "restartPolicy": "Never",
              "terminationGracePeriodSeconds": 30,
              "dnsPolicy": "ClusterFirst",
              "serviceAccountName": "scanner-azsk",
              "serviceAccount": "scanner-azsk",
              "securityContext": {},
              "schedulerName": "default-scheduler"
            }
          }
        },
        "status": {
          "startTime": "2020-05-06T02:00:06Z",
          "active": 1
        }
      },
      {
        "metadata": {
          "name": "scanner-polaris-1588471200",
          "namespace": "joseki",
          "selfLink": "/apis/batch/v1/namespaces/joseki/jobs/scanner-polaris-1588471200",
          "uid": "67042210-cf30-432f-92eb-570cb203e82d",
          "resourceVersion": "17411697",
          "creationTimestamp": "2020-05-03T02:00:03Z",
          "labels": {
            "controller-uid": "67042210-cf30-432f-92eb-570cb203e82d",
            "job-name": "scanner-polaris-1588471200",
            "owner": "dummy9@dummy.com"
          },
          "ownerReferences": [
            {
              "apiVersion": "batch/v1beta1",
              "kind": "CronJob",
              "name": "scanner-polaris",
              "uid": "ae04eff1-0180-421f-a603-701330e122e1",
              "controller": true,
              "blockOwnerDeletion": true
            }
          ]
        },
        "spec": {
          "parallelism": 1,
          "completions": 1,
          "backoffLimit": 6,
          "selector": { "matchLabels": { "controller-uid": "67042210-cf30-432f-92eb-570cb203e82d" } },
          "template": {
            "metadata": {
              "creationTimestamp": null,
              "labels": {
                "controller-uid": "67042210-cf30-432f-92eb-570cb203e82d",
                "job-name": "scanner-polaris-1588471200"
              }
            },
            "spec": {
              "volumes": [
                {
                  "name": "config",
                  "configMap": {
                    "name": "scanner-polaris-cfg",
                    "defaultMode": 420
                  }
                }
              ],
              "containers": [
                {
                  "name": "scanner-polaris",
                  "image": "deepnetwork/joseki-scanner-polaris:0.3.0-sha-37904e3c",
                  "args": [ "--config", "/app/scanner-polaris-config.yaml" ],
                  "env": [
                    {
                      "name": "SCANNER_VERSION",
                      "value": "0.3.0-sha-37904e3c"
                    }
                  ],
                  "resources": {},
                  "volumeMounts": [
                    {
                      "name": "config",
                      "readOnly": true,
                      "mountPath": "/app/scanner-polaris-config.yaml",
                      "subPath": "scanner-polaris-config.yaml"
                    },
                    {
                      "name": "config",
                      "readOnly": true,
                      "mountPath": "/app/polaris-config.yaml",
                      "subPath": "polaris-config.yaml"
                    }
                  ],
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "imagePullPolicy": "Always"
                }
              ],
              "restartPolicy": "Never",
              "terminationGracePeriodSeconds": 30,
              "dnsPolicy": "ClusterFirst",
              "serviceAccountName": "scanner-polaris",
              "serviceAccount": "scanner-polaris",
              "securityContext": {},
              "schedulerName": "default-scheduler"
            }
          }
        },
        "status": {
          "conditions": [
            {
              "type": "Complete",
              "status": "True",
              "lastProbeTime": "2020-05-03T02:00:11Z",
              "lastTransitionTime": "2020-05-03T02:00:11Z"
            }
          ],
          "startTime": "2020-05-03T02:00:03Z",
          "completionTime": "2020-05-03T02:00:11Z",
          "succeeded": 1
        }
      },
      {
        "metadata": {
          "name": "scanner-polaris-1588557600",
          "namespace": "joseki",
          "selfLink": "/apis/batch/v1/namespaces/joseki/jobs/scanner-polaris-1588557600",
          "uid": "03246557-3edf-4a23-b3e8-1c43565e5d26",
          "resourceVersion": "17639159",
          "creationTimestamp": "2020-05-04T02:00:02Z",
          "labels": {
            "controller-uid": "03246557-3edf-4a23-b3e8-1c43565e5d26",
            "job-name": "scanner-polaris-1588557600",
            "owner": "dummy9@dummy.com"
          },
          "ownerReferences": [
            {
              "apiVersion": "batch/v1beta1",
              "kind": "CronJob",
              "name": "scanner-polaris",
              "uid": "ae04eff1-0180-421f-a603-701330e122e1",
              "controller": true,
              "blockOwnerDeletion": true
            }
          ]
        },
        "spec": {
          "parallelism": 1,
          "completions": 1,
          "backoffLimit": 6,
          "selector": { "matchLabels": { "controller-uid": "03246557-3edf-4a23-b3e8-1c43565e5d26" } },
          "template": {
            "metadata": {
              "creationTimestamp": null,
              "labels": {
                "controller-uid": "03246557-3edf-4a23-b3e8-1c43565e5d26",
                "job-name": "scanner-polaris-1588557600"
              }
            },
            "spec": {
              "volumes": [
                {
                  "name": "config",
                  "configMap": {
                    "name": "scanner-polaris-cfg",
                    "defaultMode": 420
                  }
                }
              ],
              "containers": [
                {
                  "name": "scanner-polaris",
                  "image": "deepnetwork/joseki-scanner-polaris:0.3.0-sha-37904e3c",
                  "args": [ "--config", "/app/scanner-polaris-config.yaml" ],
                  "env": [
                    {
                      "name": "SCANNER_VERSION",
                      "value": "0.3.0-sha-37904e3c"
                    }
                  ],
                  "resources": {},
                  "volumeMounts": [
                    {
                      "name": "config",
                      "readOnly": true,
                      "mountPath": "/app/scanner-polaris-config.yaml",
                      "subPath": "scanner-polaris-config.yaml"
                    },
                    {
                      "name": "config",
                      "readOnly": true,
                      "mountPath": "/app/polaris-config.yaml",
                      "subPath": "polaris-config.yaml"
                    }
                  ],
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "imagePullPolicy": "Always"
                }
              ],
              "restartPolicy": "Never",
              "terminationGracePeriodSeconds": 30,
              "dnsPolicy": "ClusterFirst",
              "serviceAccountName": "scanner-polaris",
              "serviceAccount": "scanner-polaris",
              "securityContext": {},
              "schedulerName": "default-scheduler"
            }
          }
        },
        "status": {
          "conditions": [
            {
              "type": "Complete",
              "status": "True",
              "lastProbeTime": "2020-05-04T02:00:08Z",
              "lastTransitionTime": "2020-05-04T02:00:08Z"
            }
          ],
          "startTime": "2020-05-04T02:00:02Z",
          "completionTime": "2020-05-04T02:00:08Z",
          "succeeded": 1
        }
      },
      {
        "metadata": {
          "name": "scanner-polaris-1588644000",
          "namespace": "joseki",
          "selfLink": "/apis/batch/v1/namespaces/joseki/jobs/scanner-polaris-1588644000",
          "uid": "5dac9179-a9df-45f7-80cf-1c1c1e8510f2",
          "resourceVersion": "17866684",
          "creationTimestamp": "2020-05-05T02:00:06Z",
          "labels": {
            "controller-uid": "5dac9179-a9df-45f7-80cf-1c1c1e8510f2",
            "job-name": "scanner-polaris-1588644000",
            "owner": "dummy9@dummy.com"
          },
          "ownerReferences": [
            {
              "apiVersion": "batch/v1beta1",
              "kind": "CronJob",
              "name": "scanner-polaris",
              "uid": "ae04eff1-0180-421f-a603-701330e122e1",
              "controller": true,
              "blockOwnerDeletion": true
            }
          ]
        },
        "spec": {
          "parallelism": 1,
          "completions": 1,
          "backoffLimit": 6,
          "selector": { "matchLabels": { "controller-uid": "5dac9179-a9df-45f7-80cf-1c1c1e8510f2" } },
          "template": {
            "metadata": {
              "creationTimestamp": null,
              "labels": {
                "controller-uid": "5dac9179-a9df-45f7-80cf-1c1c1e8510f2",
                "job-name": "scanner-polaris-1588644000"
              }
            },
            "spec": {
              "volumes": [
                {
                  "name": "config",
                  "configMap": {
                    "name": "scanner-polaris-cfg",
                    "defaultMode": 420
                  }
                }
              ],
              "containers": [
                {
                  "name": "scanner-polaris",
                  "image": "deepnetwork/joseki-scanner-polaris:0.3.0-sha-37904e3c",
                  "args": [ "--config", "/app/scanner-polaris-config.yaml" ],
                  "env": [
                    {
                      "name": "SCANNER_VERSION",
                      "value": "0.3.0-sha-37904e3c"
                    }
                  ],
                  "resources": {},
                  "volumeMounts": [
                    {
                      "name": "config",
                      "readOnly": true,
                      "mountPath": "/app/scanner-polaris-config.yaml",
                      "subPath": "scanner-polaris-config.yaml"
                    },
                    {
                      "name": "config",
                      "readOnly": true,
                      "mountPath": "/app/polaris-config.yaml",
                      "subPath": "polaris-config.yaml"
                    }
                  ],
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "imagePullPolicy": "Always"
                }
              ],
              "restartPolicy": "Never",
              "terminationGracePeriodSeconds": 30,
              "dnsPolicy": "ClusterFirst",
              "serviceAccountName": "scanner-polaris",
              "serviceAccount": "scanner-polaris",
              "securityContext": {},
              "schedulerName": "default-scheduler"
            }
          }
        },
        "status": {
          "conditions": [
            {
              "type": "Complete",
              "status": "True",
              "lastProbeTime": "2020-05-05T02:00:14Z",
              "lastTransitionTime": "2020-05-05T02:00:14Z"
            }
          ],
          "startTime": "2020-05-05T02:00:06Z",
          "completionTime": "2020-05-05T02:00:14Z",
          "succeeded": 1
        }
      },
      {
        "metadata": {
          "name": "scanner-polaris-1588730400",
          "namespace": "joseki",
          "selfLink": "/apis/batch/v1/namespaces/joseki/jobs/scanner-polaris-1588730400",
          "uid": "b164b4a6-6acb-4aca-8d4c-13140d45f623",
          "resourceVersion": "18094072",
          "creationTimestamp": "2020-05-06T02:00:06Z",
          "labels": {
            "controller-uid": "b164b4a6-6acb-4aca-8d4c-13140d45f623",
            "job-name": "scanner-polaris-1588730400",
            "owner": "dummy9@dummy.com"
          },
          "ownerReferences": [
            {
              "apiVersion": "batch/v1beta1",
              "kind": "CronJob",
              "name": "scanner-polaris",
              "uid": "ae04eff1-0180-421f-a603-701330e122e1",
              "controller": true,
              "blockOwnerDeletion": true
            }
          ]
        },
        "spec": {
          "parallelism": 1,
          "completions": 1,
          "backoffLimit": 6,
          "selector": { "matchLabels": { "controller-uid": "b164b4a6-6acb-4aca-8d4c-13140d45f623" } },
          "template": {
            "metadata": {
              "creationTimestamp": null,
              "labels": {
                "controller-uid": "b164b4a6-6acb-4aca-8d4c-13140d45f623",
                "job-name": "scanner-polaris-1588730400"
              }
            },
            "spec": {
              "volumes": [
                {
                  "name": "config",
                  "configMap": {
                    "name": "scanner-polaris-cfg",
                    "defaultMode": 420
                  }
                }
              ],
              "containers": [
                {
                  "name": "scanner-polaris",
                  "image": "deepnetwork/joseki-scanner-polaris:0.3.0-sha-37904e3c",
                  "args": [ "--config", "/app/scanner-polaris-config.yaml" ],
                  "env": [
                    {
                      "name": "SCANNER_VERSION",
                      "value": "0.3.0-sha-37904e3c"
                    }
                  ],
                  "resources": {},
                  "volumeMounts": [
                    {
                      "name": "config",
                      "readOnly": true,
                      "mountPath": "/app/scanner-polaris-config.yaml",
                      "subPath": "scanner-polaris-config.yaml"
                    },
                    {
                      "name": "config",
                      "readOnly": true,
                      "mountPath": "/app/polaris-config.yaml",
                      "subPath": "polaris-config.yaml"
                    }
                  ],
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "imagePullPolicy": "Always"
                }
              ],
              "restartPolicy": "Never",
              "terminationGracePeriodSeconds": 30,
              "dnsPolicy": "ClusterFirst",
              "serviceAccountName": "scanner-polaris",
              "serviceAccount": "scanner-polaris",
              "securityContext": {},
              "schedulerName": "default-scheduler"
            }
          }
        },
        "status": {
          "startTime": "2020-05-06T02:00:07Z",
          "active": 1
        }
      }
    ],
    "CronJobs": [
      {
        "metadata": {
          "name": "fake-scanner-azsk",
          "namespace": "joseki",
          "selfLink": "/apis/batch/v1beta1/namespaces/joseki/cronjobs/fake-scanner-azsk",
          "uid": "0cea1c25-2e4c-4028-8e44-d3d51046656b",
          "resourceVersion": "18094044",
          "creationTimestamp": "2020-04-02T16:21:52Z",
          "labels": {
            "app": "fake-scanner-azsk",
            "module": "scanners",
            "version": "0.2.1-sha-8b9750f4",
            "owner": "dummy9@dummy.com"
          },
          "annotations": { "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"batch/v1beta1\",\"kind\":\"CronJob\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"fake-scanner-azsk\",\"module\":\"scanners\",\"version\":\"0.2.1-sha-8b9750f4\"},\"name\":\"fake-scanner-azsk\",\"namespace\":\"joseki\"},\"spec\":{\"jobTemplate\":{\"spec\":{\"template\":{\"spec\":{\"containers\":[{\"args\":[\"--config\",\"/app/config.az.yaml\",\"--subscriptions\",\"5720db52-2fb2-4568-bb63-20c7c0dd0a3e\"],\"env\":[{\"name\":\"SCANNER_VERSION\",\"value\":\"0.2.1-sha-8b9750f4\"}],\"image\":\"deepnetwork/joseki-scanner-azsk:0.2.1-sha-8b9750f4\",\"imagePullPolicy\":\"Always\",\"name\":\"fake-scanner-azsk\",\"volumeMounts\":[{\"mountPath\":\"/app/config.az.yaml\",\"name\":\"config\",\"readOnly\":true,\"subPath\":\"fake-scanner-azsk-config.yaml\"},{\"mountPath\":\"/usr/share/azsk_test_data\",\"name\":\"shared-data\"}]}],\"initContainers\":[{\"command\":[\"/bin/sh\",\"-c\",\"tar -xf /tmp/azsk_test_data.tar.xz -C /usr/share\"],\"image\":\"alpine:3.11.5\",\"name\":\"extract-test-data\",\"volumeMounts\":[{\"mountPath\":\"/tmp/azsk_test_data.tar.xz\",\"name\":\"test-data\",\"readOnly\":true,\"subPath\":\"azsk_test_data.tar.xz\"},{\"mountPath\":\"/usr/share/azsk_test_data\",\"name\":\"shared-data\"}]}],\"restartPolicy\":\"Never\",\"serviceAccountName\":\"scanner-azsk\",\"volumes\":[{\"configMap\":{\"name\":\"fake-scanner-azsk-cfg\"},\"name\":\"config\"},{\"configMap\":{\"name\":\"azsk-test-data\"},\"name\":\"test-data\"},{\"emptyDir\":{},\"name\":\"shared-data\"}]}}}},\"schedule\":\"0 2 * * *\"}}\n" }
        },
        "spec": {
          "schedule": "0 2 * * *",
          "concurrencyPolicy": "Allow",
          "suspend": false,
          "jobTemplate": {
            "metadata": { "creationTimestamp": null },
            "spec": {
              "template": {
                "metadata": { "creationTimestamp": null },
                "spec": {
                  "volumes": [
                    {
                      "name": "config",
                      "configMap": {
                        "name": "fake-scanner-azsk-cfg",
                        "defaultMode": 420
                      }
                    },
                    {
                      "name": "test-data",
                      "configMap": {
                        "name": "azsk-test-data",
                        "defaultMode": 420
                      }
                    },
                    {
                      "name": "shared-data",
                      "emptyDir": {}
                    }
                  ],
                  "initContainers": [
                    {
                      "name": "extract-test-data",
                      "image": "alpine:3.11.5",
                      "command": [ "/bin/sh", "-c", "tar -xf /tmp/azsk_test_data.tar.xz -C /usr/share" ],
                      "resources": {},
                      "volumeMounts": [
                        {
                          "name": "test-data",
                          "readOnly": true,
                          "mountPath": "/tmp/azsk_test_data.tar.xz",
                          "subPath": "azsk_test_data.tar.xz"
                        },
                        {
                          "name": "shared-data",
                          "mountPath": "/usr/share/azsk_test_data"
                        }
                      ],
                      "terminationMessagePath": "/dev/termination-log",
                      "terminationMessagePolicy": "File",
                      "imagePullPolicy": "IfNotPresent"
                    }
                  ],
                  "containers": [
                    {
                      "name": "fake-scanner-azsk",
                      "image": "deepnetwork/joseki-scanner-azsk:0.2.1-sha-8b9750f4",
                      "args": [ "--config", "/app/config.az.yaml", "--subscriptions", "5720db52-2fb2-4568-bb63-20c7c0dd0a3e" ],
                      "env": [
                        {
                          "name": "SCANNER_VERSION",
                          "value": "0.2.1-sha-8b9750f4"
                        }
                      ],
                      "resources": {},
                      "volumeMounts": [
                        {
                          "name": "config",
                          "readOnly": true,
                          "mountPath": "/app/config.az.yaml",
                          "subPath": "fake-scanner-azsk-config.yaml"
                        },
                        {
                          "name": "shared-data",
                          "mountPath": "/usr/share/azsk_test_data"
                        }
                      ],
                      "terminationMessagePath": "/dev/termination-log",
                      "terminationMessagePolicy": "File",
                      "imagePullPolicy": "Always"
                    }
                  ],
                  "restartPolicy": "Never",
                  "terminationGracePeriodSeconds": 30,
                  "dnsPolicy": "ClusterFirst",
                  "serviceAccountName": "scanner-azsk",
                  "serviceAccount": "scanner-azsk",
                  "securityContext": {},
                  "schedulerName": "default-scheduler"
                }
              }
            }
          },
          "successfulJobsHistoryLimit": 3,
          "failedJobsHistoryLimit": 1
        },
        "status": {
          "active": [
            {
              "kind": "Job",
              "namespace": "joseki",
              "name": "fake-scanner-azsk-1588730400",
              "uid": "bd72649c-410e-4de2-baf9-62098f543743",
              "apiVersion": "batch/v1",
              "resourceVersion": "18094042"
            }
          ],
          "lastScheduleTime": "2020-05-06T02:00:00Z"
        }
      },
      {
        "metadata": {
          "name": "fake-scanner-polaris",
          "namespace": "joseki",
          "selfLink": "/apis/batch/v1beta1/namespaces/joseki/cronjobs/fake-scanner-polaris",
          "uid": "37f2b0e9-aebc-4720-9a4b-92e92ebafc7a",
          "resourceVersion": "18094046",
          "creationTimestamp": "2020-04-07T08:05:40Z",
          "labels": {
            "app": "fake-scanner-polaris",
            "module": "scanners",
            "version": "0.2.2-sha-d9d3d2b7",
            "owner": "dummy9@dummy.com"
          },
          "annotations": { "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"batch/v1beta1\",\"kind\":\"CronJob\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"fake-scanner-polaris\",\"module\":\"scanners\",\"version\":\"0.2.2-sha-d9d3d2b7\"},\"name\":\"fake-scanner-polaris\",\"namespace\":\"joseki\"},\"spec\":{\"jobTemplate\":{\"spec\":{\"template\":{\"spec\":{\"containers\":[{\"args\":[\"--config\",\"/app/scanner-polaris-config.yaml\"],\"env\":[{\"name\":\"SCANNER_VERSION\",\"value\":\"0.2.2-sha-d9d3d2b7\"}],\"image\":\"deepnetwork/joseki-scanner-polaris:0.2.2-sha-d9d3d2b7\",\"imagePullPolicy\":\"Always\",\"name\":\"fake-scanner-polaris\",\"volumeMounts\":[{\"mountPath\":\"/app/scanner-polaris-config.yaml\",\"name\":\"config\",\"readOnly\":true,\"subPath\":\"fake-scanner-polaris-config.yaml\"},{\"mountPath\":\"/app/polaris-config.yaml\",\"name\":\"config\",\"readOnly\":true,\"subPath\":\"polaris-config.yaml\"},{\"mountPath\":\"/usr/share/polaris_test_data\",\"name\":\"shared-data\"}]}],\"initContainers\":[{\"command\":[\"/bin/sh\",\"-c\",\"tar -xf /tmp/polaris_test_data.tar.xz -C /usr/share\"],\"image\":\"alpine:3.11.5\",\"name\":\"extract-test-data\",\"volumeMounts\":[{\"mountPath\":\"/tmp/polaris_test_data.tar.xz\",\"name\":\"test-data\",\"readOnly\":true,\"subPath\":\"polaris_test_data.tar.xz\"},{\"mountPath\":\"/usr/share/polaris_test_data\",\"name\":\"shared-data\"}]}],\"restartPolicy\":\"Never\",\"serviceAccountName\":\"scanner-polaris\",\"volumes\":[{\"configMap\":{\"name\":\"fake-scanner-polaris-cfg\"},\"name\":\"config\"},{\"configMap\":{\"name\":\"polaris-test-data\"},\"name\":\"test-data\"},{\"emptyDir\":{},\"name\":\"shared-data\"}]}}}},\"schedule\":\"0 2 * * *\"}}\n" }
        },
        "spec": {
          "schedule": "0 2 * * *",
          "concurrencyPolicy": "Allow",
          "suspend": false,
          "jobTemplate": {
            "metadata": { "creationTimestamp": null },
            "spec": {
              "template": {
                "metadata": { "creationTimestamp": null },
                "spec": {
                  "volumes": [
                    {
                      "name": "config",
                      "configMap": {
                        "name": "fake-scanner-polaris-cfg",
                        "defaultMode": 420
                      }
                    },
                    {
                      "name": "test-data",
                      "configMap": {
                        "name": "polaris-test-data",
                        "defaultMode": 420
                      }
                    },
                    {
                      "name": "shared-data",
                      "emptyDir": {}
                    }
                  ],
                  "initContainers": [
                    {
                      "name": "extract-test-data",
                      "image": "alpine:3.11.5",
                      "command": [ "/bin/sh", "-c", "tar -xf /tmp/polaris_test_data.tar.xz -C /usr/share" ],
                      "resources": {},
                      "volumeMounts": [
                        {
                          "name": "test-data",
                          "readOnly": true,
                          "mountPath": "/tmp/polaris_test_data.tar.xz",
                          "subPath": "polaris_test_data.tar.xz"
                        },
                        {
                          "name": "shared-data",
                          "mountPath": "/usr/share/polaris_test_data"
                        }
                      ],
                      "terminationMessagePath": "/dev/termination-log",
                      "terminationMessagePolicy": "File",
                      "imagePullPolicy": "IfNotPresent"
                    }
                  ],
                  "containers": [
                    {
                      "name": "fake-scanner-polaris",
                      "image": "deepnetwork/joseki-scanner-polaris:0.2.2-sha-d9d3d2b7",
                      "args": [ "--config", "/app/scanner-polaris-config.yaml" ],
                      "env": [
                        {
                          "name": "SCANNER_VERSION",
                          "value": "0.2.2-sha-d9d3d2b7"
                        }
                      ],
                      "resources": {},
                      "volumeMounts": [
                        {
                          "name": "config",
                          "readOnly": true,
                          "mountPath": "/app/scanner-polaris-config.yaml",
                          "subPath": "fake-scanner-polaris-config.yaml"
                        },
                        {
                          "name": "config",
                          "readOnly": true,
                          "mountPath": "/app/polaris-config.yaml",
                          "subPath": "polaris-config.yaml"
                        },
                        {
                          "name": "shared-data",
                          "mountPath": "/usr/share/polaris_test_data"
                        }
                      ],
                      "terminationMessagePath": "/dev/termination-log",
                      "terminationMessagePolicy": "File",
                      "imagePullPolicy": "Always"
                    }
                  ],
                  "restartPolicy": "Never",
                  "terminationGracePeriodSeconds": 30,
                  "dnsPolicy": "ClusterFirst",
                  "serviceAccountName": "scanner-polaris",
                  "serviceAccount": "scanner-polaris",
                  "securityContext": {},
                  "schedulerName": "default-scheduler"
                }
              }
            }
          },
          "successfulJobsHistoryLimit": 3,
          "failedJobsHistoryLimit": 1
        },
        "status": {
          "active": [
            {
              "kind": "Job",
              "namespace": "joseki",
              "name": "fake-scanner-polaris-1588730400",
              "uid": "c9cf30c3-2280-4eea-a4ab-5897eda4287e",
              "apiVersion": "batch/v1",
              "resourceVersion": "18094045"
            }
          ],
          "lastScheduleTime": "2020-05-06T02:00:00Z"
        }
      },
      {
        "metadata": {
          "name": "scanner-azsk",
          "namespace": "joseki",
          "selfLink": "/apis/batch/v1beta1/namespaces/joseki/cronjobs/scanner-azsk",
          "uid": "75a818c2-2db3-4508-9ad7-de5cf334ae01",
          "resourceVersion": "18094060",
          "creationTimestamp": "2020-02-13T12:58:08Z",
          "labels": {
            "app": "scanner-azsk",
            "module": "scanners",
            "version": "0.3.0-sha-37904e3c",
            "owner": "dummy9@dummy.com"
          },
          "annotations": { "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"batch/v1beta1\",\"kind\":\"CronJob\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"scanner-azsk\",\"module\":\"scanners\",\"version\":\"0.3.0-sha-37904e3c\"},\"name\":\"scanner-azsk\",\"namespace\":\"joseki\"},\"spec\":{\"jobTemplate\":{\"spec\":{\"template\":{\"spec\":{\"containers\":[{\"args\":[\"--config\",\"/app/config.az.yaml\",\"--subscriptions\",\"fd2c5679-1d12-4a1a-927d-7728fd6790bd\",\"cddd57db-cebc-4031-9e8b-af06407c8745\",\"77b3ee8a-c75c-4031-b507-9e92f70ec35f\"],\"env\":[{\"name\":\"SCANNER_VERSION\",\"value\":\"0.3.0-sha-37904e3c\"}],\"image\":\"deepnetwork/joseki-scanner-azsk:0.3.0-sha-37904e3c\",\"imagePullPolicy\":\"Always\",\"name\":\"scanner-azsk\",\"volumeMounts\":[{\"mountPath\":\"/app/config.az.yaml\",\"name\":\"config\",\"readOnly\":true,\"subPath\":\"scanner-azsk-config.yaml\"}]}],\"restartPolicy\":\"Never\",\"serviceAccountName\":\"scanner-azsk\",\"volumes\":[{\"configMap\":{\"name\":\"scanner-azsk-cfg\"},\"name\":\"config\"}]}}}},\"schedule\":\"0 2 * * *\"}}\n" }
        },
        "spec": {
          "schedule": "0 2 * * *",
          "concurrencyPolicy": "Allow",
          "suspend": false,
          "jobTemplate": {
            "metadata": { "creationTimestamp": null },
            "spec": {
              "template": {
                "metadata": { "creationTimestamp": null },
                "spec": {
                  "volumes": [
                    {
                      "name": "config",
                      "configMap": {
                        "name": "scanner-azsk-cfg",
                        "defaultMode": 420
                      }
                    }
                  ],
                  "containers": [
                    {
                      "name": "scanner-azsk",
                      "image": "deepnetwork/joseki-scanner-azsk:0.3.0-sha-37904e3c",
                      "args": [ "--config", "/app/config.az.yaml", "--subscriptions", "fd2c5679-1d12-4a1a-927d-7728fd6790bd", "cddd57db-cebc-4031-9e8b-af06407c8745", "77b3ee8a-c75c-4031-b507-9e92f70ec35f" ],
                      "env": [
                        {
                          "name": "SCANNER_VERSION",
                          "value": "0.3.0-sha-37904e3c"
                        }
                      ],
                      "resources": {},
                      "volumeMounts": [
                        {
                          "name": "config",
                          "readOnly": true,
                          "mountPath": "/app/config.az.yaml",
                          "subPath": "scanner-azsk-config.yaml"
                        }
                      ],
                      "terminationMessagePath": "/dev/termination-log",
                      "terminationMessagePolicy": "File",
                      "imagePullPolicy": "Always"
                    }
                  ],
                  "restartPolicy": "Never",
                  "terminationGracePeriodSeconds": 30,
                  "dnsPolicy": "ClusterFirst",
                  "serviceAccountName": "scanner-azsk",
                  "serviceAccount": "scanner-azsk",
                  "securityContext": {},
                  "schedulerName": "default-scheduler"
                }
              }
            }
          },
          "successfulJobsHistoryLimit": 3,
          "failedJobsHistoryLimit": 1
        },
        "status": {
          "active": [
            {
              "kind": "Job",
              "namespace": "joseki",
              "name": "scanner-azsk-1588730400",
              "uid": "39e6f4a1-ce10-4d3c-af51-bb0e5f195f92",
              "apiVersion": "batch/v1",
              "resourceVersion": "18094058"
            }
          ],
          "lastScheduleTime": "2020-05-06T02:00:00Z"
        }
      },
      {
        "metadata": {
          "name": "scanner-polaris",
          "namespace": "joseki",
          "selfLink": "/apis/batch/v1beta1/namespaces/joseki/cronjobs/scanner-polaris",
          "uid": "ae04eff1-0180-421f-a603-701330e122e1",
          "resourceVersion": "18094068",
          "creationTimestamp": "2020-02-04T14:09:50Z",
          "labels": {
            "app": "scanner-polaris",
            "module": "scanners",
            "version": "0.3.0-sha-37904e3c",
            "owner": "dummy9@dummy.com"
          },
          "annotations": { "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"batch/v1beta1\",\"kind\":\"CronJob\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"scanner-polaris\",\"module\":\"scanners\",\"version\":\"0.3.0-sha-37904e3c\"},\"name\":\"scanner-polaris\",\"namespace\":\"joseki\"},\"spec\":{\"jobTemplate\":{\"spec\":{\"template\":{\"spec\":{\"containers\":[{\"args\":[\"--config\",\"/app/scanner-polaris-config.yaml\"],\"env\":[{\"name\":\"SCANNER_VERSION\",\"value\":\"0.3.0-sha-37904e3c\"}],\"image\":\"deepnetwork/joseki-scanner-polaris:0.3.0-sha-37904e3c\",\"imagePullPolicy\":\"Always\",\"name\":\"scanner-polaris\",\"volumeMounts\":[{\"mountPath\":\"/app/scanner-polaris-config.yaml\",\"name\":\"config\",\"readOnly\":true,\"subPath\":\"scanner-polaris-config.yaml\"},{\"mountPath\":\"/app/polaris-config.yaml\",\"name\":\"config\",\"readOnly\":true,\"subPath\":\"polaris-config.yaml\"}]}],\"restartPolicy\":\"Never\",\"serviceAccountName\":\"scanner-polaris\",\"volumes\":[{\"configMap\":{\"name\":\"scanner-polaris-cfg\"},\"name\":\"config\"}]}}}},\"schedule\":\"0 2 * * *\"}}\n" }
        },
        "spec": {
          "schedule": "0 2 * * *",
          "concurrencyPolicy": "Allow",
          "suspend": false,
          "jobTemplate": {
            "metadata": { "creationTimestamp": null },
            "spec": {
              "template": {
                "metadata": { "creationTimestamp": null },
                "spec": {
                  "volumes": [
                    {
                      "name": "config",
                      "configMap": {
                        "name": "scanner-polaris-cfg",
                        "defaultMode": 420
                      }
                    }
                  ],
                  "containers": [
                    {
                      "name": "scanner-polaris",
                      "image": "deepnetwork/joseki-scanner-polaris:0.3.0-sha-37904e3c",
                      "args": [ "--config", "/app/scanner-polaris-config.yaml" ],
                      "env": [
                        {
                          "name": "SCANNER_VERSION",
                          "value": "0.3.0-sha-37904e3c"
                        }
                      ],
                      "resources": {},
                      "volumeMounts": [
                        {
                          "name": "config",
                          "readOnly": true,
                          "mountPath": "/app/scanner-polaris-config.yaml",
                          "subPath": "scanner-polaris-config.yaml"
                        },
                        {
                          "name": "config",
                          "readOnly": true,
                          "mountPath": "/app/polaris-config.yaml",
                          "subPath": "polaris-config.yaml"
                        }
                      ],
                      "terminationMessagePath": "/dev/termination-log",
                      "terminationMessagePolicy": "File",
                      "imagePullPolicy": "Always"
                    }
                  ],
                  "restartPolicy": "Never",
                  "terminationGracePeriodSeconds": 30,
                  "dnsPolicy": "ClusterFirst",
                  "serviceAccountName": "scanner-polaris",
                  "serviceAccount": "scanner-polaris",
                  "securityContext": {},
                  "schedulerName": "default-scheduler"
                }
              }
            }
          },
          "successfulJobsHistoryLimit": 3,
          "failedJobsHistoryLimit": 1
        },
        "status": {
          "active": [
            {
              "kind": "Job",
              "namespace": "joseki",
              "name": "scanner-polaris-1588730400",
              "uid": "b164b4a6-6acb-4aca-8d4c-13140d45f623",
              "apiVersion": "batch/v1",
              "resourceVersion": "18094066"
            }
          ],
          "lastScheduleTime": "2020-05-06T02:00:00Z"
        }
      }
    ],
    "ReplicationControllers": [],
    "Namespaces": [
      {
        "metadata": {
          "name": "cert-manager",
          "selfLink": "/api/v1/namespaces/cert-manager",
          "uid": "5ef970c9-9383-4c60-a481-e84f52289050",
          "resourceVersion": "8880136",
          "creationTimestamp": "2020-03-26T14:12:11Z",
          "annotations": { "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"annotations\":{},\"name\":\"cert-manager\"}}\n" },
          "labels": {
            "owner": "dummy1@dummy.com"
          }
        },
        "spec": { "finalizers": [ "kubernetes" ] },
        "status": { "phase": "Active" }
      },
      {
        "metadata": {
          "name": "default",
          "selfLink": "/api/v1/namespaces/default",
          "uid": "321342e6-d926-4408-8702-28f0ad7a76ac",
          "resourceVersion": "144",
          "creationTimestamp": "2020-01-13T14:38:50Z"
        },
        "spec": { "finalizers": [ "kubernetes" ] },
        "status": { "phase": "Active" }
      },
      {
        "metadata": {
          "name": "joseki",
          "selfLink": "/api/v1/namespaces/joseki",
          "uid": "199dc89a-fb63-420a-8293-ddf2970aa65b",
          "resourceVersion": "2452937",
          "creationTimestamp": "2020-02-04T13:05:53Z",
          "annotations": { "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"annotations\":{},\"name\":\"joseki\",\"namespace\":\"\"}}\n" }
        },
        "spec": { "finalizers": [ "kubernetes" ] },
        "status": { "phase": "Active" }
      },
      {
        "metadata": {
          "name": "kube-node-lease",
          "selfLink": "/api/v1/namespaces/kube-node-lease",
          "uid": "1e2aac08-9a41-464e-a788-a70c677935c6",
          "resourceVersion": "36",
          "creationTimestamp": "2020-01-13T14:38:47Z"
        },
        "spec": { "finalizers": [ "kubernetes" ] },
        "status": { "phase": "Active" }
      },
      {
        "metadata": {
          "name": "kube-public",
          "selfLink": "/api/v1/namespaces/kube-public",
          "uid": "df02fe7f-8eba-47d5-8670-d57448c14f56",
          "resourceVersion": "27",
          "creationTimestamp": "2020-01-13T14:38:47Z"
        },
        "spec": { "finalizers": [ "kubernetes" ] },
        "status": { "phase": "Active" }
      },
      {
        "metadata": {
          "name": "kube-system",
          "selfLink": "/api/v1/namespaces/kube-system",
          "uid": "1973bc18-3023-495d-b989-e36218ce7a17",
          "resourceVersion": "17160422",
          "creationTimestamp": "2020-01-13T14:38:46Z",
          "labels": {
            "addonmanager.kubernetes.io/mode": "Reconcile",
            "control-plane": "true",
            "kubernetes.io/cluster-service": "true",
            "owner": "dummy1@dummy.com"
          },
          "annotations": { "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"control-plane\":\"true\",\"kubernetes.io/cluster-service\":\"true\"},\"name\":\"kube-system\"}}\n" }
        },
        "spec": { "finalizers": [ "kubernetes" ] },
        "status": { "phase": "Active" }
      },
      {
        "metadata": {
          "name": "operations",
          "selfLink": "/api/v1/namespaces/operations",
          "uid": "7c321c23-68c0-44ca-ab27-da3b8df0b938",
          "resourceVersion": "2324319",
          "creationTimestamp": "2020-02-03T11:29:50Z"
        },
        "spec": { "finalizers": [ "kubernetes" ] },
        "status": { "phase": "Active" }
      },
      {
        "metadata": {
          "name": "reyiz-dev",
          "selfLink": "/api/v1/namespaces/reyiz-dev",
          "uid": "6d7e8f23-53e1-4950-a897-9d76e5fd8195",
          "resourceVersion": "80726",
          "creationTimestamp": "2020-01-14T09:03:29Z"
        },
        "spec": { "finalizers": [ "kubernetes" ] },
        "status": { "phase": "Active" }
      }
    ]
  }
}
