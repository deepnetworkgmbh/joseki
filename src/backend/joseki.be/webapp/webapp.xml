<?xml version="1.0"?>
<doc>
    <assembly>
        <name>webapp</name>
    </assembly>
    <members>
        <member name="T:webapp.Audits.Processors.AuditProcessorFactory">
            <summary>
            The factory knows how to instantiate proper Audit Processor object.
            </summary>
        </member>
        <member name="M:webapp.Audits.Processors.AuditProcessorFactory.#ctor(System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.Audits.Processors.AuditProcessorFactory"/> class.
            </summary>
            <param name="services">DI container.</param>
        </member>
        <member name="M:webapp.Audits.Processors.AuditProcessorFactory.GetProcessor(webapp.Audits.ScannerMetadata)">
            <summary>
            Based on scanner-metadata finds a proper Audit Processor object.
            </summary>
            <param name="metadata">Scanner metadata object.</param>
            <returns>Audit Processor instance.</returns>
        </member>
        <member name="T:webapp.Audits.Processors.azsk.AzskAuditProcessor">
            <summary>
            Az-sk audit processor.
            </summary>
        </member>
        <member name="M:webapp.Audits.Processors.azsk.AzskAuditProcessor.#ctor(webapp.BlobStorage.IBlobStorageProcessor,webapp.Database.IJosekiDatabase)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.Audits.Processors.azsk.AzskAuditProcessor"/> class.
            </summary>
            <param name="blobStorage">Blob Storage implementation.</param>
            <param name="db">Joseki database implementation.</param>
        </member>
        <member name="M:webapp.Audits.Processors.azsk.AzskAuditProcessor.Process(webapp.BlobStorage.ScannerContainer,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:webapp.Audits.Processors.IAuditProcessor">
            <summary>
            A base interface for scanner-specific audit processors.
            </summary>
        </member>
        <member name="M:webapp.Audits.Processors.IAuditProcessor.Process(webapp.BlobStorage.ScannerContainer,System.Threading.CancellationToken)">
            <summary>
            Gets audit data from Blob Storage, normalize it, saves results to the Database.
            </summary>
            <param name="container">The container with audit results to process.</param>
            <param name="token">A signal to stop processing.</param>
            <returns>A task object, which indicates the end of the processing.</returns>
        </member>
        <member name="T:webapp.Audits.Processors.PolarisAuditProcessor">
            <summary>
            Polaris audit processor.
            </summary>
        </member>
        <member name="M:webapp.Audits.Processors.PolarisAuditProcessor.Process(webapp.BlobStorage.ScannerContainer,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:webapp.Audits.Processors.TrivyAuditProcessor">
            <summary>
            Trivy audit processor.
            </summary>
        </member>
        <member name="M:webapp.Audits.Processors.TrivyAuditProcessor.Process(webapp.BlobStorage.ScannerContainer,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:webapp.Audits.ScannerMetadata">
            <summary>
            Scanner metadata: identifier, type, heartbeat parameters.
            </summary>
        </member>
        <member name="P:webapp.Audits.ScannerMetadata.Type">
            <summary>
            The scanner type.
            </summary>
        </member>
        <member name="P:webapp.Audits.ScannerMetadata.Id">
            <summary>
            Unique scanner identifier.
            </summary>
        </member>
        <member name="P:webapp.Audits.ScannerMetadata.Periodicity">
            <summary>
            How often scanner is running. Could be one of two options:
            - "on-message";
            - "{cron expression}".
            </summary>
        </member>
        <member name="P:webapp.Audits.ScannerMetadata.HeartbeatPeriodicity">
            <summary>
            How often scanner metadata is updated. Used to catch issues with scanner components or to clean-up stale/abandoned containers.
            </summary>
        </member>
        <member name="P:webapp.Audits.ScannerMetadata.Heartbeat">
            <summary>
            Unix epoch seconds value of the last heartbeat.
            </summary>
        </member>
        <member name="T:webapp.Audits.ScannerType">
            <summary>
            Available scanner types.
            </summary>
        </member>
        <member name="F:webapp.Audits.ScannerType.None">
            <summary>
            Unknown scanner type.
            </summary>
        </member>
        <member name="F:webapp.Audits.ScannerType.Polaris">
            <summary>
            Represents polaris scanner.
            </summary>
        </member>
        <member name="F:webapp.Audits.ScannerType.Trivy">
            <summary>
            Represents trivy scanner.
            </summary>
        </member>
        <member name="F:webapp.Audits.ScannerType.Azsk">
            <summary>
            Represents azsk scanner.
            </summary>
        </member>
        <member name="T:webapp.BackgroundJobs.ScannerContainersWatchman">
            <summary>
            ScannerContainers watchman is responsible for following actual state of root-level containers in Blob Storage
            and maintaining up-to-date work items in Scheduler Assistant.
            </summary>
        </member>
        <member name="M:webapp.BackgroundJobs.ScannerContainersWatchman.#ctor(webapp.BlobStorage.IBlobStorageProcessor,webapp.BackgroundJobs.SchedulerAssistant,webapp.Configuration.ConfigurationParser)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.BackgroundJobs.ScannerContainersWatchman"/> class.
            </summary>
            <param name="blobStorage">The Blob Storage.</param>
            <param name="scheduler">The scheduler assistant.</param>
            <param name="config">Joseki Backend configuration.</param>
        </member>
        <member name="M:webapp.BackgroundJobs.ScannerContainersWatchman.Watch(System.Threading.CancellationToken)">
            <summary>
            Every Watchmen.ScannerContainersPeriodicity seconds lists containers from Blob storage and updates scheduler-assistant.
            </summary>
            <returns>A task object.</returns>
        </member>
        <member name="T:webapp.BackgroundJobs.ScannerResultsReaderJob">
            <summary>
            The object is responsible for getting new audit-results from Blob Storage.
            To accomplish the task it glues together ScannerContainers Watchman, Scheduler Assistant, and Audit Processors Factory.
            </summary>
        </member>
        <member name="M:webapp.BackgroundJobs.ScannerResultsReaderJob.#ctor(System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.BackgroundJobs.ScannerResultsReaderJob"/> class.
            </summary>
            <param name="services">DI container.</param>
        </member>
        <member name="M:webapp.BackgroundJobs.ScannerResultsReaderJob.ExecuteAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:webapp.BackgroundJobs.SchedulerAssistant">
            <summary>
            Maintains a list of containers, that should be periodically processed.
            Knows when to run a single container processor.
            </summary>
        </member>
        <member name="M:webapp.BackgroundJobs.SchedulerAssistant.#ctor(webapp.Audits.Processors.AuditProcessorFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.BackgroundJobs.SchedulerAssistant"/> class.
            </summary>
            <param name="processorFactory">Audit Processor factory.</param>
        </member>
        <member name="M:webapp.BackgroundJobs.SchedulerAssistant.Run(System.Threading.CancellationToken)">
            <summary>
            The method runs handler function for all containers according to their heartbeat periods.
            </summary>
            <param name="cancellation">Indicates when to stop running.</param>
            <returns>A Task object, which completes when CancellationToken is canceled.</returns>
        </member>
        <member name="M:webapp.BackgroundJobs.SchedulerAssistant.UpdateWorkingItems(webapp.BlobStorage.ScannerContainer[])">
            <summary>
            Compares list of actual containers and working set.
            </summary>
        </member>
        <member name="T:webapp.BackgroundJobs.SchedulerAssistant.SchedulableItem">
            <summary>
            Helps to keep track of scanner-containers processing time.
            </summary>
        </member>
        <member name="P:webapp.BackgroundJobs.SchedulerAssistant.SchedulableItem.Container">
            <summary>
            The container, which should be periodically processed.
            </summary>
        </member>
        <member name="P:webapp.BackgroundJobs.SchedulerAssistant.SchedulableItem.LastProcessed">
            <summary>
            Last time when the container was processed.
            </summary>
        </member>
        <member name="P:webapp.BackgroundJobs.SchedulerAssistant.SchedulableItem.Periodicity">
            <summary>
            How often the container should be processed.
            </summary>
        </member>
        <member name="P:webapp.BackgroundJobs.SchedulerAssistant.SchedulableItem.Generation">
            <summary>
            Indicates a generation to which the item belongs. The property used to get rid of stale items.
            </summary>
        </member>
        <member name="P:webapp.BackgroundJobs.SchedulerAssistant.SchedulableItem.NextProcessingTime">
            <summary>
            Returns the point of time, when the container should be processed.
            </summary>
        </member>
        <member name="T:webapp.BlobStorage.AuditBlob">
            <summary>
            Describes a single audit folder within a scanner container.
            </summary>
        </member>
        <member name="P:webapp.BlobStorage.AuditBlob.Name">
            <summary>
            Unique audit blob metadata file name (including path within a container).
            </summary>
        </member>
        <member name="P:webapp.BlobStorage.AuditBlob.ParentContainer">
            <summary>
            Parent scanner container.
            </summary>
        </member>
        <member name="T:webapp.BlobStorage.AzureBlobStorageProcessor">
            <summary>
            Azure Blob Storage implementation of Blob Storage Processor.
            </summary>
        </member>
        <member name="M:webapp.BlobStorage.AzureBlobStorageProcessor.#ctor(webapp.Configuration.ConfigurationParser)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.BlobStorage.AzureBlobStorageProcessor"/> class.
            </summary>
            <param name="config">The application configuration object.</param>
        </member>
        <member name="M:webapp.BlobStorage.AzureBlobStorageProcessor.ListAllContainers">
            <inheritdoc />
        </member>
        <member name="M:webapp.BlobStorage.AzureBlobStorageProcessor.DownloadFile(System.String)">
            <inheritdoc />
        </member>
        <member name="M:webapp.BlobStorage.AzureBlobStorageProcessor.GetUnprocessedAudits(webapp.BlobStorage.ScannerContainer)">
            <inheritdoc />
        </member>
        <member name="M:webapp.BlobStorage.AzureBlobStorageProcessor.MarkAsProcessed(webapp.BlobStorage.AuditBlob)">
            <inheritdoc />
        </member>
        <member name="T:webapp.BlobStorage.IBlobStorageMaintainer">
            <summary>
            Takes care of managing Archive and Garbage Bin in the Blob Storage service.
            </summary>
        </member>
        <member name="M:webapp.BlobStorage.IBlobStorageMaintainer.MoveToArchive(webapp.BlobStorage.AuditBlob)">
            <summary>
            Moves audit blob from scanner container to Archive container.
            </summary>
            <param name="blob">Audit blob object.</param>
            <returns>A task object.</returns>
        </member>
        <member name="M:webapp.BlobStorage.IBlobStorageMaintainer.DeleteStale(webapp.BlobStorage.AuditBlob)">
            <summary>
            Moves blob from Archive to Garbage Bin.
            </summary>
            <param name="blob">Audit blob object.</param>
            <returns>A task object.</returns>
        </member>
        <member name="M:webapp.BlobStorage.IBlobStorageMaintainer.DeleteStale(webapp.BlobStorage.ScannerContainer)">
            <summary>
            Moves the entire scanner container to Garbage Bin.
            </summary>
            <param name="container">Scanner container object.</param>
            <returns>A task object.</returns>
        </member>
        <member name="M:webapp.BlobStorage.IBlobStorageMaintainer.CleanupGarbageBin">
            <summary>
            Deletes all expired blobs from Garbage Bin.
            </summary>
            <returns>A task object.</returns>
        </member>
        <member name="T:webapp.BlobStorage.IBlobStorageProcessor">
            <summary>
            General abstraction in front of Blob Storage service.
            </summary>
        </member>
        <member name="M:webapp.BlobStorage.IBlobStorageProcessor.ListAllContainers">
            <summary>
            Get all root-level containers. Each single container represents a separate scanner service.
            </summary>
            <returns>Array of container objects.</returns>
        </member>
        <member name="M:webapp.BlobStorage.IBlobStorageProcessor.DownloadFile(System.String)">
            <summary>
            Asynchronously downloads a file from server.
            </summary>
            <param name="relativePath">The relative path to file, starting with scanner container name.</param>
            <returns>A blob-content stream.</returns>
        </member>
        <member name="M:webapp.BlobStorage.IBlobStorageProcessor.GetUnprocessedAudits(webapp.BlobStorage.ScannerContainer)">
            <summary>
            Returns only unprocessed audit blobs.
            </summary>
            <param name="container">The scanner container name.</param>
            <returns>Array of blobs with unprocessed audit results.</returns>
        </member>
        <member name="M:webapp.BlobStorage.IBlobStorageProcessor.MarkAsProcessed(webapp.BlobStorage.AuditBlob)">
            <summary>
            Marks the blob as processed.
            </summary>
            <param name="auditBlob">Audit blob to mark.</param>
            <returns>A task object.</returns>
        </member>
        <member name="T:webapp.BlobStorage.ScannerContainer">
            <summary>
            Describes a single root-level container object of Blob Storage.
            </summary>
        </member>
        <member name="M:webapp.BlobStorage.ScannerContainer.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.BlobStorage.ScannerContainer"/> class.
            </summary>
            <param name="name">Scanner container name.</param>
        </member>
        <member name="P:webapp.BlobStorage.ScannerContainer.Name">
            <summary>
            Unique per Blob Storage container name.
            </summary>
        </member>
        <member name="P:webapp.BlobStorage.ScannerContainer.Metadata">
            <summary>
            Scanner metadata.
            </summary>
        </member>
        <member name="P:webapp.BlobStorage.ScannerContainer.MetadataFilePath">
            <summary>
            Relative path to metadata file.
            </summary>
        </member>
        <member name="T:webapp.Configuration.ConfigurationParser">
            <summary>
            Parse YAML based application configuration.
            </summary>
        </member>
        <member name="M:webapp.Configuration.ConfigurationParser.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.Configuration.ConfigurationParser"/> class.
            </summary>
            <param name="configFilePath">The application configuration file path.</param>
        </member>
        <member name="M:webapp.Configuration.ConfigurationParser.Parse(System.String)">
            <summary>
            Parse the string into dotnet object.
            </summary>
            <param name="input">String representation of YAML file.</param>
            <returns>The application configuration object.</returns>
        </member>
        <member name="M:webapp.Configuration.ConfigurationParser.Get">
            <summary>
            Parses Joseki Config on the first request and cache the result in memory.
            </summary>
            <returns>Joseki backend service configuration object.</returns>
        </member>
        <member name="T:webapp.Configuration.JosekiConfiguration">
            <summary>
            Joseki Backend service configuration.
            </summary>
        </member>
        <member name="P:webapp.Configuration.JosekiConfiguration.AzureBlob">
            <summary>
            Azure Blob related configuration.
            </summary>
        </member>
        <member name="P:webapp.Configuration.JosekiConfiguration.Watchmen">
            <summary>
            Aggregated Watchmen configs.
            </summary>
        </member>
        <member name="T:webapp.Configuration.AzureBlobConfig">
            <summary>
            Azure Blob related configuration.
            </summary>
        </member>
        <member name="P:webapp.Configuration.AzureBlobConfig.BasePath">
            <summary>
            Base Azure Blob Storage URL.
            </summary>
        </member>
        <member name="P:webapp.Configuration.AzureBlobConfig.Sas">
            <summary>
            Sas token.
            </summary>
        </member>
        <member name="T:webapp.Configuration.Watchmen">
            <summary>
            Watchmen related configurations.
            </summary>
        </member>
        <member name="P:webapp.Configuration.Watchmen.ScannerContainersPeriodicity">
            <summary>
            How often ScannerContainersWatchman is listing root-level containers.
            The measurement is in seconds.
            </summary>
        </member>
        <member name="T:webapp.Controllers.AuditsController">
            <summary>
            .Audit data endpoints.
            </summary>
        </member>
        <member name="M:webapp.Controllers.AuditsController.GetOverview(System.Nullable{System.DateTime})">
            <summary>
            Returns the overall infrastructure overview for Joseki landing page.
            </summary>
            <returns>The overall infrastructure overview.</returns>
        </member>
        <member name="M:webapp.Controllers.AuditsController.GetOverviewDiff(System.DateTime,System.DateTime)">
            <summary>
            Returns the overall infrastructure overview diff.
            </summary>
            <returns>The overall infrastructure overview diff.</returns>
        </member>
        <member name="M:webapp.Controllers.AuditsController.GetComponentHistory(System.String)">
            <summary>
            Returns the component scan history.
            </summary>
            <returns>the component scan history.</returns>
        </member>
        <member name="T:webapp.Controllers.Data">
            <summary>
            data wrapper before connecting to real results.
            </summary>
        </member>
        <member name="P:webapp.Controllers.Data.Dates">
            <summary>
            list of dates for ui tests.
            date behaves like a key while comparing scans.
            thus an overall scan and a component scan
            must all have the same initial scan date associated.
            </summary>
        </member>
        <member name="P:webapp.Controllers.Data.Components">
            <summary>
            list of infrastructure components.
            </summary>
        </member>
        <member name="P:webapp.Controllers.Data.Counters">
            <summary>
            list of counter summaries.
            </summary>
        </member>
        <member name="M:webapp.Controllers.Data.GetScoreHistory(webapp.Models.InfrastructureComponent)">
            <summary>
            score history, combination of dates and scores.
            </summary>
        </member>
        <member name="M:webapp.Controllers.Data.GetComponentSummary(webapp.Models.InfrastructureComponent)">
            <summary>
            Returns summary for the selected component.
            </summary>
        </member>
        <member name="M:webapp.Controllers.Data.GetComponentSummaries">
            <summary>
            Returns summary for all components except overall.
            </summary>
        </member>
        <member name="F:webapp.Controllers.Data.OverallComponent">
            <summary>
            static placeholder for overall component.
            </summary>
        </member>
        <member name="M:webapp.Database.PsqlJosekiDatabase.SaveAuditResult(webapp.Database.Models.Audit)">
            <inheritdoc />
        </member>
        <member name="T:webapp.Infrastructure.HttpRequestLoggingMiddleware">
            <summary>
            Writes logs in common format for any incoming HTTP request.
            </summary>
        </member>
        <member name="M:webapp.Infrastructure.HttpRequestLoggingMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.Infrastructure.HttpRequestLoggingMiddleware"/> class.
            </summary>
            <param name="next">Next <see cref="T:Microsoft.AspNetCore.Http.RequestDelegate"/> to execute. </param>
        </member>
        <member name="M:webapp.Infrastructure.HttpRequestLoggingMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Executes a middleware.
            </summary>
            <param name="httpContext">Current <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:webapp.Infrastructure.HttpRequestLoggingMiddleware.GetElapsedMilliseconds(System.Int64,System.Int64)">
            <summary>
            Get elapsed milliseconds based on elapsed ticks.
            </summary>
            <param name="start">Ticks on a start.</param>
            <param name="stop">Ticks in the end.</param>
            <returns>Elapsed milliseconds.</returns>
        </member>
        <member name="T:webapp.Models.Check">
            <summary>
            Check against a component.
            </summary>
        </member>
        <member name="P:webapp.Models.Check.Id">
            <summary>
            unique id of the check.
            </summary>
        </member>
        <member name="P:webapp.Models.Check.Date">
            <summary>
            the date of the check.
            </summary>
        </member>
        <member name="P:webapp.Models.Check.Collection">
            <summary>
            Name of the collection.
            kubernetes: namespace.
            azks: resource-group.
            </summary>
        </member>
        <member name="P:webapp.Models.Check.Category">
            <summary>
            category of the check
            kubernetes: polaris/trivy category.
            azks: feature name.
            </summary>
        </member>
        <member name="P:webapp.Models.Check.Object">
            <summary>
            The object to be checked.
            k8s: object (deployment, pod, service etc).
            azks: resource (keyvault etc).
            </summary>
        </member>
        <member name="P:webapp.Models.Check.Control">
            <summary>
            The control name of the check.
            k8s: polaris `check` name.
            azks: azks `control` name.
            </summary>
        </member>
        <member name="P:webapp.Models.Check.Severity">
            <summary>
            severity of the check.
            </summary>
        </member>
        <member name="P:webapp.Models.Check.Description">
            <summary>
            description of the check.
            </summary>
        </member>
        <member name="P:webapp.Models.Check.Remediation">
            <summary>
            the suggested remediation (if any).
            </summary>
        </member>
        <member name="P:webapp.Models.Check.References">
            <summary>
            array of references about the check.
            </summary>
        </member>
        <member name="M:webapp.Models.Check.#ctor(webapp.Models.InfrastructureComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.Models.Check"/> class.
            create unique id on constructor.
            </summary>
        </member>
        <member name="T:webapp.Models.CheckSeverity">
            <summary>
            Severity of the check.
            </summary>
        </member>
        <member name="F:webapp.Models.CheckSeverity.NoData">
            <summary>
            Enum value when a scan was not found
            </summary>
        </member>
        <member name="F:webapp.Models.CheckSeverity.Failed">
            <summary>
            Enum value when a scan failed
            </summary>
        </member>
        <member name="F:webapp.Models.CheckSeverity.Warning">
            <summary>
            Enum value when a scan has warning
            </summary>
        </member>
        <member name="F:webapp.Models.CheckSeverity.Success">
            <summary>
            Enum value when a scan succeeded
            </summary>
        </member>
        <member name="T:webapp.Models.CountersSummary">
            <summary>
            Represents short summary of check-result counters.
            </summary>
        </member>
        <member name="P:webapp.Models.CountersSummary.Passed">
            <summary>
            Amount of Passed checks.
            </summary>
        </member>
        <member name="P:webapp.Models.CountersSummary.Failed">
            <summary>
            Amount of failed checks.
            </summary>
        </member>
        <member name="P:webapp.Models.CountersSummary.Warning">
            <summary>
            Amount of Warnings.
            </summary>
        </member>
        <member name="P:webapp.Models.CountersSummary.NoData">
            <summary>
            Amount of checks with no-data result: requires a manual verification or Joseki is not able to perform the check.
            </summary>
        </member>
        <member name="P:webapp.Models.CountersSummary.Total">
            <summary>
            Total checks amount.
            </summary>
        </member>
        <member name="P:webapp.Models.CountersSummary.Score">
            <summary>
            The audit score. It indicates how close the infrastructure is to known best-practices configuration.
            NoData checks are excluded, Passed and Failed has doubled weight.
            The final formula is Passed*2/(Failed*2 + Passed*2 + Warning).
            </summary>
        </member>
        <member name="T:webapp.Models.InfrastructureCategory">
            <summary>
            Enumerates possible infrastructure categories.
            </summary>
        </member>
        <member name="F:webapp.Models.InfrastructureCategory.Overall">
            <summary>
            Overall infrastructure.
            </summary>
        </member>
        <member name="F:webapp.Models.InfrastructureCategory.Subscription">
            <summary>
            Cloud Subscription.
            </summary>
        </member>
        <member name="F:webapp.Models.InfrastructureCategory.Kubernetes">
            <summary>
            Kubernetes cluster.
            </summary>
        </member>
        <member name="T:webapp.Models.InfrastructureComponent">
            <summary>
            The class for Infrastructure Component object.
            </summary>
        </member>
        <member name="P:webapp.Models.InfrastructureComponent.Id">
            <summary>
            The unique Id of a component.
            </summary>
        </member>
        <member name="P:webapp.Models.InfrastructureComponent.Name">
            <summary>
            The name of the component: dev-cluster, subscription-1, etc.
            </summary>
        </member>
        <member name="P:webapp.Models.InfrastructureComponent.Category">
            <summary>
            The bucket of infrastructure component: Cloud Subscription, Kubernetes cluster, etc.
            </summary>
        </member>
        <member name="M:webapp.Models.InfrastructureComponent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.Models.InfrastructureComponent"/> class.
            Creates random id on constructor.
            </summary>
        </member>
        <member name="T:webapp.Models.InfrastructureComponentSummary">
            <summary>
            Summarizes a single infrastructure unit stats: score, trends, name.
            </summary>
        </member>
        <member name="P:webapp.Models.InfrastructureComponentSummary.Date">
            <summary>
            The generation date of the Summary.
            </summary>
        </member>
        <member name="P:webapp.Models.InfrastructureComponentSummary.Component">
            <summary>
            The component of the current summary.
            </summary>
        </member>
        <member name="P:webapp.Models.InfrastructureComponentSummary.Current">
            <summary>
            Latest known check-result counters.
            </summary>
        </member>
        <member name="P:webapp.Models.InfrastructureComponentSummary.Checks">
            <summary>
            List of every check in component.
            </summary>
        </member>
        <member name="T:webapp.Models.InfrastructureComponentSummaryWithHistory">
            <summary>
            Summarizes a single infrastructure unit stats: score, trends, name.
            </summary>
        </member>
        <member name="P:webapp.Models.InfrastructureComponentSummaryWithHistory.ScoreHistory">
            <summary>
            Holds Scores per last 30 days.
            If no data for a day - places 0.
            </summary>
        </member>
        <member name="P:webapp.Models.InfrastructureComponentSummaryWithHistory.ScoreTrend">
            <summary>
            Pre-calculated parameters for drawing trend line.
            </summary>
        </member>
        <member name="T:webapp.Models.InfrastructureOverview">
            <summary>
            Returns infrastructure summary: scores by category, counters, etc.
            </summary>
        </member>
        <member name="P:webapp.Models.InfrastructureOverview.Overall">
            <summary>
            Overall infrastructure summary.
            </summary>
        </member>
        <member name="P:webapp.Models.InfrastructureOverview.Components">
            <summary>
            Separate summary for each involved component.
            </summary>
        </member>
        <member name="T:webapp.Models.InfrastructureOverviewDiff">
            <summary>
            Returns infrastructure summary: scores by category, counters, etc.
            </summary>
        </member>
        <member name="P:webapp.Models.InfrastructureOverviewDiff.Overall1">
            <summary>
            First overall infrastructure summary.
            </summary>
        </member>
        <member name="P:webapp.Models.InfrastructureOverviewDiff.Overall2">
            <summary>
            Second overall infrastructure summary.
            </summary>
        </member>
        <member name="P:webapp.Models.InfrastructureOverviewDiff.Components1">
            <summary>
            Components of first summary.
            </summary>
        </member>
        <member name="P:webapp.Models.InfrastructureOverviewDiff.Components2">
            <summary>
            Components of second summary.
            </summary>
        </member>
        <member name="T:webapp.Models.ScanResult">
            <summary>
            Scan result enum.
            </summary>
        </member>
        <member name="F:webapp.Models.ScanResult.NotFound">
            <summary>
            Enum value when a scan was not found
            </summary>
        </member>
        <member name="F:webapp.Models.ScanResult.Failed">
            <summary>
            Enum value when a scan faile d
            </summary>
        </member>
        <member name="F:webapp.Models.ScanResult.Succeeded">
            <summary>
            Enum value when a scan succeeded
            </summary>
        </member>
        <member name="T:webapp.Models.ScoreHistoryItem">
            <summary>
            Represents the score of component at a given date.
            </summary>
        </member>
        <member name="M:webapp.Models.ScoreHistoryItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.Models.ScoreHistoryItem"/> class with default values.
            </summary>
        </member>
        <member name="M:webapp.Models.ScoreHistoryItem.#ctor(System.DateTime,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.Models.ScoreHistoryItem"/> class with provided Date and Score values.
            </summary>
            <param name="date">The date of the score record.</param>
            <param name="score">The score value.</param>
        </member>
        <member name="P:webapp.Models.ScoreHistoryItem.RecordedAt">
            <summary>
            The date of the Score.
            </summary>
        </member>
        <member name="P:webapp.Models.ScoreHistoryItem.Score">
            <summary>
            Score value.
            </summary>
        </member>
        <member name="T:webapp.Models.Trend">
            <summary>
            Holds properties to draw a straight trend line.
            Current version is based on https://math.stackexchange.com/a/204021
            TODO: figure out the right trend formula. (base on diffs, moving-averages?).
            </summary>
        </member>
        <member name="P:webapp.Models.Trend.Slope">
            <summary>
            The slope of the trend line.
            </summary>
        </member>
        <member name="P:webapp.Models.Trend.Offset">
            <summary>
            The offset of the trend line.
            </summary>
        </member>
        <member name="M:webapp.Models.Trend.GetTrend(webapp.Models.ScoreHistoryItem[])">
            <summary>
            Calculates Trend parameters for subset of score values.
            </summary>
            <param name="values">The score values.</param>
            <returns>Trend object.</returns>
        </member>
        <member name="T:webapp.Program">
            <summary>
            The entry point.
            </summary>
        </member>
        <member name="M:webapp.Program.Main(System.String[])">
            <summary>
            The entry point.
            </summary>
            <param name="args">Input arguments.</param>
        </member>
        <member name="M:webapp.Program.CreateHostBuilder(System.String[])">
            <summary>
            Creates a new instance of ASP.NET core application.
            </summary>
            <param name="args">Arguments.</param>
            <returns>HostBuilder object.</returns>
        </member>
        <member name="T:webapp.Startup">
            <summary>
            Startup class.
            </summary>
        </member>
        <member name="M:webapp.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.Startup"/> class.
            </summary>
            <param name="configuration">The application configuration object.</param>
        </member>
        <member name="P:webapp.Startup.Configuration">
            <summary>
            The application configuration object.
            </summary>
        </member>
        <member name="M:webapp.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services">Services collection.</param>
        </member>
        <member name="M:webapp.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app">Builder object.</param>
            <param name="env">Environment configuration.</param>
        </member>
    </members>
</doc>
