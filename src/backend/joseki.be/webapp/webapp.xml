<?xml version="1.0"?>
<doc>
    <assembly>
        <name>webapp</name>
    </assembly>
    <members>
        <member name="T:webapp.Audits.Processors.AuditProcessorStub">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:webapp.Audits.Processors.AuditProcessorStub.Process(webapp.BlobStorage.ScannerContainer,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:webapp.Audits.Processors.azsk.AuditMetadata">
            <summary>
            The object is deserialized from Blob Storage container.
            </summary>
        </member>
        <member name="P:webapp.Audits.Processors.azsk.AuditMetadata.AuditId">
            <summary>
            Unique audit identifier.
            </summary>
        </member>
        <member name="P:webapp.Audits.Processors.azsk.AuditMetadata.ScannerVersion">
            <summary>
            Az-sk scanner version.
            </summary>
        </member>
        <member name="P:webapp.Audits.Processors.azsk.AuditMetadata.Periodicity">
            <summary>
            az-sk scanner periodicity.
            </summary>
        </member>
        <member name="P:webapp.Audits.Processors.azsk.AuditMetadata.Timestamp">
            <summary>
            The last time, when az-sk scanner performed azure subscriptions audit.
            The value is in unix-epoch seconds.
            </summary>
        </member>
        <member name="P:webapp.Audits.Processors.azsk.AuditMetadata.AuditResult">
            <summary>
            Indicates if audit was successful or not.
            Could be one of values: "succeeded", "failed".
            </summary>
        </member>
        <member name="P:webapp.Audits.Processors.azsk.AuditMetadata.FailureDescription">
            <summary>
            Described audit failure reason.
            </summary>
        </member>
        <member name="P:webapp.Audits.Processors.azsk.AuditMetadata.AzSkVersion">
            <summary>
            The version of az-sk tool used to perform the audit.
            </summary>
        </member>
        <member name="P:webapp.Audits.Processors.azsk.AuditMetadata.AzSkAuditPaths">
            <summary>
            Path to all audit related files in Blob Storage.
            </summary>
        </member>
        <member name="T:webapp.Audits.Processors.azsk.AzskAuditProcessor">
            <summary>
            Az-sk audit processor.
            </summary>
        </member>
        <member name="M:webapp.Audits.Processors.azsk.AzskAuditProcessor.#ctor(webapp.BlobStorage.IBlobStorageProcessor,webapp.Database.IJosekiDatabase,webapp.Database.ChecksCache)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.Audits.Processors.azsk.AzskAuditProcessor"/> class.
            </summary>
            <param name="blobStorage">Blob Storage implementation.</param>
            <param name="db">Joseki database implementation.</param>
            <param name="cache">Checks cache object.</param>
        </member>
        <member name="M:webapp.Audits.Processors.azsk.AzskAuditProcessor.Process(webapp.BlobStorage.ScannerContainer,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:webapp.Audits.Processors.IAuditProcessor">
            <summary>
            A base interface for scanner-specific audit processors.
            </summary>
        </member>
        <member name="M:webapp.Audits.Processors.IAuditProcessor.Process(webapp.BlobStorage.ScannerContainer,System.Threading.CancellationToken)">
            <summary>
            Gets audit data from Blob Storage, normalize it, saves results to the Database.
            </summary>
            <param name="container">The container with audit results to process.</param>
            <param name="token">A signal to stop processing.</param>
            <returns>A task object, which indicates the end of the processing.</returns>
        </member>
        <member name="T:webapp.Audits.Processors.polaris.AuditMetadata">
            <summary>
            The object is deserialized from Blob Storage container.
            </summary>
        </member>
        <member name="P:webapp.Audits.Processors.polaris.AuditMetadata.AuditId">
            <summary>
            Unique audit identifier.
            </summary>
        </member>
        <member name="P:webapp.Audits.Processors.polaris.AuditMetadata.ClusterId">
            <summary>
            Unique k8s cluster identifier.
            </summary>
        </member>
        <member name="P:webapp.Audits.Processors.polaris.AuditMetadata.ScannerVersion">
            <summary>
            polaris scanner version.
            </summary>
        </member>
        <member name="P:webapp.Audits.Processors.polaris.AuditMetadata.Timestamp">
            <summary>
            The last time, when polaris scanner performed kubernetes cluster audit.
            The value is in unix-epoch seconds.
            </summary>
        </member>
        <member name="P:webapp.Audits.Processors.polaris.AuditMetadata.AuditResult">
            <summary>
            Indicates if audit was successful or not.
            Could be one of values: "succeeded", "failed".
            </summary>
        </member>
        <member name="P:webapp.Audits.Processors.polaris.AuditMetadata.FailureDescription">
            <summary>
            Described audit failure reason.
            </summary>
        </member>
        <member name="P:webapp.Audits.Processors.polaris.AuditMetadata.PolarisVersion">
            <summary>
            The version of polaris tool used to perform the audit.
            </summary>
        </member>
        <member name="P:webapp.Audits.Processors.polaris.AuditMetadata.PolarisAuditPaths">
            <summary>
            Path to polaris audit file in Blob Storage.
            </summary>
        </member>
        <member name="P:webapp.Audits.Processors.polaris.AuditMetadata.KubeMetadataPaths">
            <summary>
            Path to kubernetes metadata file in Blob Storage.
            </summary>
        </member>
        <member name="T:webapp.Audits.Processors.polaris.PolarisAuditProcessor">
            <summary>
            Polaris audit processor.
            </summary>
        </member>
        <member name="M:webapp.Audits.Processors.polaris.PolarisAuditProcessor.#ctor(webapp.BlobStorage.IBlobStorageProcessor,webapp.Database.IJosekiDatabase,webapp.Database.ChecksCache,webapp.Queues.IQueue)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.Audits.Processors.polaris.PolarisAuditProcessor"/> class.
            </summary>
            <param name="blobStorage">Blob Storage implementation.</param>
            <param name="db">Joseki database implementation.</param>
            <param name="cache">Checks cache object.</param>
            <param name="queue">Queue Service implementation.</param>
        </member>
        <member name="M:webapp.Audits.Processors.polaris.PolarisAuditProcessor.Process(webapp.BlobStorage.ScannerContainer,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:webapp.Audits.Processors.trivy.AuditMetadata">
            <summary>
            The object is deserialized from Blob Storage container.
            </summary>
        </member>
        <member name="P:webapp.Audits.Processors.trivy.AuditMetadata.AuditId">
            <summary>
            Unique audit identifier.
            </summary>
        </member>
        <member name="P:webapp.Audits.Processors.trivy.AuditMetadata.ImageTag">
            <summary>
            Full image tag.
            </summary>
        </member>
        <member name="P:webapp.Audits.Processors.trivy.AuditMetadata.ScannerVersion">
            <summary>
            trivy scanner version.
            </summary>
        </member>
        <member name="P:webapp.Audits.Processors.trivy.AuditMetadata.Timestamp">
            <summary>
            The time, when trivy scanner performed image scan.
            The value is in unix-epoch seconds.
            </summary>
        </member>
        <member name="P:webapp.Audits.Processors.trivy.AuditMetadata.AuditResult">
            <summary>
            Indicates if scan was successful or not.
            Could be one of values: "succeeded", "upload-failed", "audit-failed".
            </summary>
        </member>
        <member name="P:webapp.Audits.Processors.trivy.AuditMetadata.FailureDescription">
            <summary>
            Described audit failure reason.
            </summary>
        </member>
        <member name="P:webapp.Audits.Processors.trivy.AuditMetadata.TrivyVersion">
            <summary>
            The version of trivy tool used to perform the scan.
            </summary>
        </member>
        <member name="P:webapp.Audits.Processors.trivy.AuditMetadata.TrivyAuditPath">
            <summary>
            Path to trivy audit file in Blob Storage.
            </summary>
        </member>
        <member name="T:webapp.Audits.Processors.trivy.TrivyAuditProcessor">
            <summary>
            Trivy audit processor.
            </summary>
        </member>
        <member name="F:webapp.Audits.Processors.trivy.TrivyAuditProcessor.LineSeparator">
            <summary>
            Indicates character used to separate lines.
            </summary>
        </member>
        <member name="M:webapp.Audits.Processors.trivy.TrivyAuditProcessor.#ctor(webapp.BlobStorage.IBlobStorageProcessor,webapp.Database.IJosekiDatabase,webapp.Database.CveCache)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.Audits.Processors.trivy.TrivyAuditProcessor"/> class.
            </summary>
            <param name="blobStorage">Blob Storage implementation.</param>
            <param name="db">Joseki database implementation.</param>
            <param name="cache">CVE cache object.</param>
        </member>
        <member name="M:webapp.Audits.Processors.trivy.TrivyAuditProcessor.Process(webapp.BlobStorage.ScannerContainer,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:webapp.Audits.Processors.trivy.TrivyScanDescriptionNormalizer">
            <summary>
            The object normalizes trivy output.
            </summary>
        </member>
        <member name="F:webapp.Audits.Processors.trivy.TrivyScanDescriptionNormalizer.NotAuthorized">
            <summary>
            Human-friendly not-authorized message.
            </summary>
        </member>
        <member name="F:webapp.Audits.Processors.trivy.TrivyScanDescriptionNormalizer.UnknownOS">
            <summary>
            Human-friendly Unknown-OS message.
            </summary>
        </member>
        <member name="F:webapp.Audits.Processors.trivy.TrivyScanDescriptionNormalizer.UnknownError">
            <summary>
            Human-friendly Unknown-Error message.
            </summary>
        </member>
        <member name="M:webapp.Audits.Processors.trivy.TrivyScanDescriptionNormalizer.ToHumanReadable(System.String)">
            <summary>
            Converts trivy output to human-friendly text.
            </summary>
            <param name="description">Trivy scan output.</param>
            <returns>Human readable result description.</returns>
        </member>
        <member name="T:webapp.Audits.ScannerMetadata">
            <summary>
            Scanner metadata: identifier, type, heartbeat parameters.
            </summary>
        </member>
        <member name="P:webapp.Audits.ScannerMetadata.Type">
            <summary>
            The scanner type.
            </summary>
        </member>
        <member name="P:webapp.Audits.ScannerMetadata.Id">
            <summary>
            Unique scanner identifier.
            </summary>
        </member>
        <member name="P:webapp.Audits.ScannerMetadata.Periodicity">
            <summary>
            How often scanner is running. Could be one of two options:
            - "on-message";
            - "{cron expression}".
            </summary>
        </member>
        <member name="P:webapp.Audits.ScannerMetadata.HeartbeatPeriodicity">
            <summary>
            How often scanner metadata is updated. Used to catch issues with scanner components or to clean-up stale/abandoned containers.
            </summary>
        </member>
        <member name="P:webapp.Audits.ScannerMetadata.Heartbeat">
            <summary>
            Unix epoch seconds value of the last heartbeat.
            </summary>
        </member>
        <member name="T:webapp.Audits.ScannerType">
            <summary>
            Available scanner types.
            </summary>
        </member>
        <member name="F:webapp.Audits.ScannerType.None">
            <summary>
            Unknown scanner type.
            </summary>
        </member>
        <member name="F:webapp.Audits.ScannerType.Polaris">
            <summary>
            Represents polaris scanner.
            </summary>
        </member>
        <member name="F:webapp.Audits.ScannerType.Trivy">
            <summary>
            Represents trivy scanner.
            </summary>
        </member>
        <member name="F:webapp.Audits.ScannerType.Azsk">
            <summary>
            Represents azsk scanner.
            </summary>
        </member>
        <member name="T:webapp.BackgroundJobs.ArchiverJob">
            <summary>
            The object is responsible for moving processed audits to Archive.
            </summary>
        </member>
        <member name="M:webapp.BackgroundJobs.ArchiverJob.#ctor(System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.BackgroundJobs.ArchiverJob"/> class.
            </summary>
            <param name="services">DI container.</param>
        </member>
        <member name="M:webapp.BackgroundJobs.ArchiverJob.ExecuteAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:webapp.BackgroundJobs.ArchiveWatchman">
            <summary>
            Archive processed audits and delete expired archive records.
            </summary>
        </member>
        <member name="M:webapp.BackgroundJobs.ArchiveWatchman.#ctor(webapp.BlobStorage.IBlobStorageMaintainer,webapp.Configuration.ConfigurationParser)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.BackgroundJobs.ArchiveWatchman"/> class.
            </summary>
            <param name="blobStorage">The Blob Storage.</param>
            <param name="config">Joseki Backend configuration.</param>
        </member>
        <member name="M:webapp.BackgroundJobs.ArchiveWatchman.Watch(System.Threading.CancellationToken)">
            <summary>
            Every Watchmen.ArchiverPeriodicityHours hours:
            - removes expired audits from Archive,
            - moves processed audits to Archive.
            </summary>
            <returns>A task object.</returns>
        </member>
        <member name="T:webapp.BackgroundJobs.InfraScoreCacheReloaderJob">
            <summary>
            The object is responsible for keeping actual records in Infrastructure-Score cache.
            </summary>
        </member>
        <member name="M:webapp.BackgroundJobs.InfraScoreCacheReloaderJob.#ctor(System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.BackgroundJobs.InfraScoreCacheReloaderJob"/> class.
            </summary>
            <param name="services">DI container.</param>
        </member>
        <member name="M:webapp.BackgroundJobs.InfraScoreCacheReloaderJob.ExecuteAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:webapp.BackgroundJobs.InfraScoreCacheWatchman">
            <summary>
            Regularly reloads Infrastructure Score cache items.
            </summary>
        </member>
        <member name="M:webapp.BackgroundJobs.InfraScoreCacheWatchman.#ctor(webapp.Database.IInfrastructureScoreCache,webapp.Configuration.ConfigurationParser)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.BackgroundJobs.InfraScoreCacheWatchman"/> class.
            </summary>
            <param name="cache">The cache.</param>
            <param name="config">Joseki Backend configuration.</param>
        </member>
        <member name="M:webapp.BackgroundJobs.InfraScoreCacheWatchman.Watch(System.Threading.CancellationToken)">
            <summary>
            Every Watchmen.InfraScorePeriodicityHours hours forces cache reload.
            </summary>
            <returns>A task object.</returns>
        </member>
        <member name="T:webapp.BackgroundJobs.ScannerContainersWatchman">
            <summary>
            ScannerContainers watchman is responsible for following actual state of root-level containers in Blob Storage
            and maintaining up-to-date work items in Scheduler Assistant.
            </summary>
        </member>
        <member name="M:webapp.BackgroundJobs.ScannerContainersWatchman.#ctor(webapp.BlobStorage.IBlobStorageProcessor,webapp.BackgroundJobs.SchedulerAssistant,webapp.Configuration.ConfigurationParser)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.BackgroundJobs.ScannerContainersWatchman"/> class.
            </summary>
            <param name="blobStorage">The Blob Storage.</param>
            <param name="scheduler">The scheduler assistant.</param>
            <param name="config">Joseki Backend configuration.</param>
        </member>
        <member name="M:webapp.BackgroundJobs.ScannerContainersWatchman.Watch(System.Threading.CancellationToken)">
            <summary>
            Every Watchmen.ScannerContainersPeriodicity seconds lists containers from Blob storage and updates scheduler-assistant.
            </summary>
            <returns>A task object.</returns>
        </member>
        <member name="T:webapp.BackgroundJobs.ScannerResultsReaderJob">
            <summary>
            The object is responsible for getting new audit-results from Blob Storage.
            To accomplish the task it glues together ScannerContainers Watchman, Scheduler Assistant, and Audit Processors Factory.
            </summary>
        </member>
        <member name="M:webapp.BackgroundJobs.ScannerResultsReaderJob.#ctor(System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.BackgroundJobs.ScannerResultsReaderJob"/> class.
            </summary>
            <param name="services">DI container.</param>
        </member>
        <member name="M:webapp.BackgroundJobs.ScannerResultsReaderJob.ExecuteAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:webapp.BackgroundJobs.SchedulerAssistant">
            <summary>
            Maintains a list of containers, that should be periodically processed.
            Knows when to run a single container processor.
            </summary>
        </member>
        <member name="M:webapp.BackgroundJobs.SchedulerAssistant.#ctor(System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.BackgroundJobs.SchedulerAssistant"/> class.
            </summary>
            <param name="services">DI container.</param>
        </member>
        <member name="M:webapp.BackgroundJobs.SchedulerAssistant.Run(System.Threading.CancellationToken)">
            <summary>
            The method runs handler function for all containers according to their heartbeat periods.
            </summary>
            <param name="cancellation">Indicates when to stop running.</param>
            <returns>A Task object, which completes when CancellationToken is canceled.</returns>
        </member>
        <member name="M:webapp.BackgroundJobs.SchedulerAssistant.UpdateWorkingItems(webapp.BlobStorage.ScannerContainer[])">
            <summary>
            Compares list of actual containers and working set.
            </summary>
        </member>
        <member name="T:webapp.BackgroundJobs.SchedulerAssistant.SchedulableItem">
            <summary>
            Helps to keep track of scanner-containers processing time.
            </summary>
        </member>
        <member name="P:webapp.BackgroundJobs.SchedulerAssistant.SchedulableItem.Container">
            <summary>
            The container, which should be periodically processed.
            </summary>
        </member>
        <member name="P:webapp.BackgroundJobs.SchedulerAssistant.SchedulableItem.LastProcessed">
            <summary>
            Last time when the container was processed.
            </summary>
        </member>
        <member name="P:webapp.BackgroundJobs.SchedulerAssistant.SchedulableItem.Periodicity">
            <summary>
            How often the container should be processed.
            </summary>
        </member>
        <member name="P:webapp.BackgroundJobs.SchedulerAssistant.SchedulableItem.Generation">
            <summary>
            Indicates a generation to which the item belongs. The property used to get rid of stale items.
            </summary>
        </member>
        <member name="P:webapp.BackgroundJobs.SchedulerAssistant.SchedulableItem.NextProcessingTime">
            <summary>
            Returns the point of time, when the container should be processed.
            </summary>
        </member>
        <member name="M:webapp.BackgroundJobs.SchedulerAssistant.SchedulableItem.StartNewIteration">
             <summary>
             The fundamental problem - once in a while, joseki should write log messages.
             BUT, if joseki writes on each iteration of scanner processor - logs might be flooded with meaningless events.
             For example, Trivy scanner-processors are executed each minute, which leads to 3*60 log-events each hour.
            
             To reduce the noise, this method helps to switch log-level from Debug to Information each hour.
             </summary>
        </member>
        <member name="M:webapp.BackgroundJobs.SchedulerAssistant.SchedulableItem.GetLogEventLevel">
            <summary>
            If iteration should be logged _globally_ - returns Information log-level.
            Otherwise - returns Debug.
            </summary>
            <returns>Serilog log-level enumeration.</returns>
        </member>
        <member name="T:webapp.BlobStorage.AuditBlob">
            <summary>
            Describes a single audit folder within a scanner container.
            </summary>
        </member>
        <member name="P:webapp.BlobStorage.AuditBlob.Name">
            <summary>
            Unique audit blob metadata file name (including path within a container).
            </summary>
        </member>
        <member name="P:webapp.BlobStorage.AuditBlob.ParentContainer">
            <summary>
            Parent scanner container.
            </summary>
        </member>
        <member name="T:webapp.BlobStorage.AzureBlobStorageMaintainer">
            <summary>
            Azure blob storage implementation of IBlobStorageMaintainer.
            </summary>
        </member>
        <member name="M:webapp.BlobStorage.AzureBlobStorageMaintainer.#ctor(webapp.Configuration.ConfigurationParser)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.BlobStorage.AzureBlobStorageMaintainer"/> class.
            </summary>
            <param name="parser">The application configuration object.</param>
        </member>
        <member name="M:webapp.BlobStorage.AzureBlobStorageMaintainer.MoveProcessedBlobsToArchive(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:webapp.BlobStorage.AzureBlobStorageMaintainer.CleanupArchive(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:webapp.BlobStorage.AzureBlobStorageMaintainer.CleanupContainer(webapp.BlobStorage.ScannerContainer)">
            <summary>
            Deletes everything from the container.
            </summary>
            <returns>A task object.</returns>
        </member>
        <member name="T:webapp.BlobStorage.AzureBlobStorageProcessor">
            <summary>
            Azure Blob Storage implementation of Blob Storage Processor.
            </summary>
        </member>
        <member name="F:webapp.BlobStorage.AzureBlobStorageProcessor.ProcessedMetadataKey">
            <summary>
            Metadata tag name for "processed" audits.
            </summary>
        </member>
        <member name="M:webapp.BlobStorage.AzureBlobStorageProcessor.#ctor(webapp.Configuration.ConfigurationParser)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.BlobStorage.AzureBlobStorageProcessor"/> class.
            </summary>
            <param name="config">The application configuration object.</param>
        </member>
        <member name="M:webapp.BlobStorage.AzureBlobStorageProcessor.ListAllContainers">
            <inheritdoc />
        </member>
        <member name="M:webapp.BlobStorage.AzureBlobStorageProcessor.DownloadFile(System.String)">
            <inheritdoc />
        </member>
        <member name="M:webapp.BlobStorage.AzureBlobStorageProcessor.GetUnprocessedAudits(webapp.BlobStorage.ScannerContainer)">
            <inheritdoc />
        </member>
        <member name="M:webapp.BlobStorage.AzureBlobStorageProcessor.MarkAsProcessed(webapp.BlobStorage.AuditBlob)">
            <inheritdoc />
        </member>
        <member name="M:webapp.BlobStorage.AzureBlobStorageProcessor.MarkAllAuditsAsUnprocessed(webapp.BlobStorage.ScannerContainer)">
            <summary>
            The method returns all audit files in the container.
            </summary>
            <param name="container">The container with audits.</param>
            <returns>Array of Audit blobs.</returns>
        </member>
        <member name="T:webapp.BlobStorage.IBlobStorageMaintainer">
            <summary>
            Takes care of managing Archive and Garbage Bin in the Blob Storage service.
            </summary>
        </member>
        <member name="M:webapp.BlobStorage.IBlobStorageMaintainer.MoveProcessedBlobsToArchive(System.Threading.CancellationToken)">
            <summary>
            Moves all processed audit blobs from scanner containers to Archive container.
            The process keeps scanner containers working set small, which reduces amount of processors work.
            </summary>
            <param name="cancellation">Cancellation token.</param>
            <returns>Number of records, that were moved to Archive.</returns>
        </member>
        <member name="M:webapp.BlobStorage.IBlobStorageMaintainer.CleanupArchive(System.Threading.CancellationToken)">
            <summary>
            Deletes all expired blobs from Archive.
            </summary>
            <param name="cancellation">Cancellation token.</param>
            <returns>Number of records, that were removed from Archive.</returns>
        </member>
        <member name="T:webapp.BlobStorage.IBlobStorageProcessor">
            <summary>
            General abstraction in front of Blob Storage service.
            </summary>
        </member>
        <member name="M:webapp.BlobStorage.IBlobStorageProcessor.ListAllContainers">
            <summary>
            Get all root-level containers. Each single container represents a separate scanner service.
            </summary>
            <returns>Array of container objects.</returns>
        </member>
        <member name="M:webapp.BlobStorage.IBlobStorageProcessor.DownloadFile(System.String)">
            <summary>
            Asynchronously downloads a file from server.
            </summary>
            <param name="relativePath">The relative path to file, starting with scanner container name.</param>
            <returns>A blob-content stream.</returns>
        </member>
        <member name="M:webapp.BlobStorage.IBlobStorageProcessor.GetUnprocessedAudits(webapp.BlobStorage.ScannerContainer)">
            <summary>
            Returns only unprocessed audit blobs.
            </summary>
            <param name="container">The scanner container name.</param>
            <returns>Array of blobs with unprocessed audit results.</returns>
        </member>
        <member name="M:webapp.BlobStorage.IBlobStorageProcessor.MarkAsProcessed(webapp.BlobStorage.AuditBlob)">
            <summary>
            Marks the blob as processed.
            </summary>
            <param name="auditBlob">Audit blob to mark.</param>
            <returns>A task object.</returns>
        </member>
        <member name="T:webapp.BlobStorage.ScannerContainer">
            <summary>
            Describes a single root-level container object of Blob Storage.
            </summary>
        </member>
        <member name="M:webapp.BlobStorage.ScannerContainer.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.BlobStorage.ScannerContainer"/> class.
            </summary>
            <param name="name">Scanner container name.</param>
        </member>
        <member name="P:webapp.BlobStorage.ScannerContainer.Name">
            <summary>
            Unique per Blob Storage container name.
            </summary>
        </member>
        <member name="P:webapp.BlobStorage.ScannerContainer.Metadata">
            <summary>
            Scanner metadata.
            </summary>
        </member>
        <member name="P:webapp.BlobStorage.ScannerContainer.MetadataFilePath">
            <summary>
            Relative path to metadata file.
            </summary>
        </member>
        <member name="T:webapp.Configuration.ConfigurationParser">
            <summary>
            Parse YAML based application configuration.
            </summary>
        </member>
        <member name="M:webapp.Configuration.ConfigurationParser.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.Configuration.ConfigurationParser"/> class.
            </summary>
            <param name="configFilePath">The application configuration file path.</param>
        </member>
        <member name="M:webapp.Configuration.ConfigurationParser.Parse(System.String)">
            <summary>
            Parse the string into dotnet object.
            </summary>
            <param name="input">String representation of YAML file.</param>
            <returns>The application configuration object.</returns>
        </member>
        <member name="M:webapp.Configuration.ConfigurationParser.Get">
            <summary>
            Parses Joseki Config on the first request and cache the result in memory.
            </summary>
            <returns>Joseki backend service configuration object.</returns>
        </member>
        <member name="T:webapp.Configuration.JosekiConfiguration">
            <summary>
            Joseki Backend service configuration.
            </summary>
        </member>
        <member name="P:webapp.Configuration.JosekiConfiguration.Database">
            <summary>
            Database related configuration.
            </summary>
        </member>
        <member name="P:webapp.Configuration.JosekiConfiguration.Cache">
            <summary>
            Aggregated Cache related configuration.
            </summary>
        </member>
        <member name="P:webapp.Configuration.JosekiConfiguration.AzureBlob">
            <summary>
            Azure Blob related configuration.
            </summary>
        </member>
        <member name="P:webapp.Configuration.JosekiConfiguration.Watchmen">
            <summary>
            Aggregated Watchmen configs.
            </summary>
        </member>
        <member name="P:webapp.Configuration.JosekiConfiguration.AzureQueue">
            <summary>
            Azure Storage Queue related configuration.
            </summary>
        </member>
        <member name="T:webapp.Configuration.DatabaseConfig">
            <summary>
            Database related configuration.
            </summary>
        </member>
        <member name="P:webapp.Configuration.DatabaseConfig.ConnectionString">
            <summary>
            MSSQL server connection string with place-holders fow username and password.
            </summary>
        </member>
        <member name="P:webapp.Configuration.DatabaseConfig.Username">
            <summary>
            MSSQL database username.
            </summary>
        </member>
        <member name="P:webapp.Configuration.DatabaseConfig.Password">
            <summary>
            MSSQL database password.
            </summary>
        </member>
        <member name="T:webapp.Configuration.CacheConfig">
            <summary>
            Cache related configurations.
            </summary>
        </member>
        <member name="P:webapp.Configuration.CacheConfig.PolarisCheckTtl">
            <summary>
            How often Polaris Check data should be updated.
            The measurement is in days.
            </summary>
        </member>
        <member name="P:webapp.Configuration.CacheConfig.AzureCheckTtl">
            <summary>
            How often Azure Check data should be updated.
            The measurement is in days.
            </summary>
        </member>
        <member name="P:webapp.Configuration.CacheConfig.CveTtl">
            <summary>
            How often CVE data should be updated.
            The measurement is in days.
            </summary>
        </member>
        <member name="P:webapp.Configuration.CacheConfig.ImageScanTtl">
            <summary>
            How often Image Scan data should be updated.
            The measurement is in hours.
            </summary>
        </member>
        <member name="P:webapp.Configuration.CacheConfig.DefaultTtl">
            <summary>
            How often cached data should be updated by default.
            The measurement is in days.
            </summary>
        </member>
        <member name="T:webapp.Configuration.AzureBlobConfig">
            <summary>
            Azure Blob related configuration.
            </summary>
        </member>
        <member name="P:webapp.Configuration.AzureBlobConfig.BasePath">
            <summary>
            Base Azure Blob Storage URL.
            </summary>
        </member>
        <member name="P:webapp.Configuration.AzureBlobConfig.Sas">
            <summary>
            Sas token.
            </summary>
        </member>
        <member name="P:webapp.Configuration.AzureBlobConfig.ConnectionString">
            <summary>
            Azure Storage connection string.
            </summary>
        </member>
        <member name="P:webapp.Configuration.AzureBlobConfig.AccountName">
            <summary>
            Storage Account name.
            </summary>
        </member>
        <member name="P:webapp.Configuration.AzureBlobConfig.AccountKey">
            <summary>
            Storage Account key.
            </summary>
        </member>
        <member name="T:webapp.Configuration.Watchmen">
            <summary>
            Watchmen related configurations.
            </summary>
        </member>
        <member name="P:webapp.Configuration.Watchmen.ScannerContainersPeriodicitySeconds">
            <summary>
            How often ScannerContainersWatchman is listing root-level containers.
            The measurement is in seconds.
            </summary>
        </member>
        <member name="P:webapp.Configuration.Watchmen.ArchiverPeriodicityHours">
            <summary>
            How often ArchiveWatchman is maintaining the Archive.
            The measurement is in hours.
            </summary>
        </member>
        <member name="P:webapp.Configuration.Watchmen.ArchiveTtlDays">
            <summary>
            How long processed audits should be stored in Archive.
            The measurement is in days.
            </summary>
        </member>
        <member name="P:webapp.Configuration.Watchmen.InfraScorePeriodicityHours">
            <summary>
            How often InfraScoreWatchman is reloading cache.
            The measurement is in hours.
            </summary>
        </member>
        <member name="T:webapp.Configuration.AzureQueueConfig">
            <summary>
            Azure Storage Queue related configuration.
            </summary>
        </member>
        <member name="P:webapp.Configuration.AzureQueueConfig.ConnectionString">
            <summary>
            Azure Storage connection string.
            </summary>
        </member>
        <member name="P:webapp.Configuration.AzureQueueConfig.AccountName">
            <summary>
            Storage Account name.
            </summary>
        </member>
        <member name="P:webapp.Configuration.AzureQueueConfig.AccountKey">
            <summary>
            Storage Account key.
            </summary>
        </member>
        <member name="P:webapp.Configuration.AzureQueueConfig.ImageScanRequestsQueue">
            <summary>
            The name of Image Scan Requests queue.
            </summary>
        </member>
        <member name="T:webapp.Controllers.v0._1.AuditsController">
            <summary>
            .Audit data endpoints.
            </summary>
        </member>
        <member name="M:webapp.Controllers.v0._1.AuditsController.#ctor(System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.Controllers.v0._1.AuditsController"/> class.
            </summary>
            <param name="services">DI container.</param>
        </member>
        <member name="M:webapp.Controllers.v0._1.AuditsController.GetOverview(System.Nullable{System.DateTime})">
            <summary>
            Returns the overall infrastructure overview for Joseki landing page.
            </summary>
            <returns>The overall infrastructure overview.</returns>
        </member>
        <member name="M:webapp.Controllers.v0._1.AuditsController.GetOverviewDiff(System.DateTime,System.DateTime)">
            <summary>
            Returns the overall infrastructure overview diff.
            </summary>
            <returns>The overall infrastructure overview diff.</returns>
        </member>
        <member name="M:webapp.Controllers.v0._1.AuditsController.GetComponentHistory(System.String)">
            <summary>
            Returns the component scan history.
            </summary>
            <returns>the component scan history.</returns>
        </member>
        <member name="M:webapp.Controllers.v0._1.AuditsController.GetComponentDetail(System.String,System.Nullable{System.DateTime})">
            <summary>
            Returns the component summary detail.
            </summary>
            <returns>the component summary detail.</returns>
        </member>
        <member name="M:webapp.Controllers.v0._1.AuditsController.GetComponentDiff(System.String,System.DateTime,System.DateTime)">
            <summary>
            Returns the component summary diff.
            </summary>
            <returns>the component summary diff.</returns>
        </member>
        <member name="M:webapp.Controllers.v0._1.AuditsController.GetImageScanHistory(System.String)">
            <summary>
            Returns the Image scans history.
            </summary>
            <param name="imageTag">Full image tag.</param>
            <returns>The Image scans history.</returns>
        </member>
        <member name="M:webapp.Controllers.v0._1.AuditsController.GetImageScanDetail(System.String,System.Nullable{System.DateTime})">
            <summary>
            Returns the Image Scan detail.
            </summary>
            <returns>the component summary detail.</returns>
        </member>
        <member name="M:webapp.Controllers.v0._1.AuditsController.GetImageScanDiff(System.String,System.DateTime,System.DateTime)">
            <summary>
            Returns the Image Scan diff.
            </summary>
            <param name="imageTag">The full image tag.</param>
            <param name="date1">The first date to compare.</param>
            <param name="date2">The second date to compare.</param>
            <returns>The Image Scan diff.</returns>
        </member>
        <member name="T:webapp.Controllers.v0._1.KnowledgebaseController">
            <summary>
            Audit data endpoints.
            </summary>
        </member>
        <member name="M:webapp.Controllers.v0._1.KnowledgebaseController.#ctor(System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.Controllers.v0._1.KnowledgebaseController"/> class.
            </summary>
            <param name="services">DI container.</param>
        </member>
        <member name="M:webapp.Controllers.v0._1.KnowledgebaseController.GetKnowledgebaseItemById(System.String)">
            <summary>
            Returns the knowledgebase item content.
            </summary>
            <returns>The knowledgebase item content.</returns>
        </member>
        <member name="M:webapp.Controllers.v0._1.KnowledgebaseController.GetKnowledgebaseItemById(System.String[])">
            <summary>
            Returns the knowledgebase items content for a subset of Ids.
            The method returns only items, that exist in the storage.
            If any id leads to not existing item - it is ignored.
            </summary>
            <returns>The knowledgebase items content.</returns>
        </member>
        <member name="M:webapp.Controllers.v0._1.KnowledgebaseController.GetComponentCategoriesDescriptions">
            <summary>
            Returns all knowledgebase items.
            </summary>
            <returns>Knowledgebase items.</returns>
        </member>
        <member name="T:webapp.Controllers.v0._2.AuditsController">
            <summary>
            Audit data endpoints.
            </summary>
        </member>
        <member name="M:webapp.Controllers.v0._2.AuditsController.#ctor(System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.Controllers.v0._2.AuditsController"/> class.
            </summary>
            <param name="services">DI container.</param>
        </member>
        <member name="M:webapp.Controllers.v0._2.AuditsController.GetOverview(System.Nullable{System.DateTime})">
            <summary>
            Returns the overall infrastructure overview for Joseki landing page.
            </summary>
            <returns>The overall infrastructure overview.</returns>
        </member>
        <member name="M:webapp.Controllers.v0._2.AuditsController.GetOverviewDiff(System.DateTime,System.DateTime)">
            <summary>
            Returns the overall infrastructure overview diff.
            </summary>
            <returns>The overall infrastructure overview diff.</returns>
        </member>
        <member name="M:webapp.Controllers.v0._2.AuditsController.GetOverallInfrastructureHistory">
            <summary>
            Returns the overall infrastructure overview history.
            </summary>
            <returns>The overall infrastructure overview history.</returns>
        </member>
        <member name="M:webapp.Controllers.v0._2.AuditsController.GetComponentHistory(System.String)">
            <summary>
            Returns the single component history.
            </summary>
            <param name="id">Unique component identifier.</param>
            <returns>The component history.</returns>
        </member>
        <member name="M:webapp.Controllers.v0._2.AuditsController.GetComponentDetail(System.String,System.Nullable{System.DateTime})">
            <summary>
            Returns the component summary detail.
            </summary>
            <returns>the component summary detail.</returns>
        </member>
        <member name="M:webapp.Controllers.v0._2.AuditsController.GetComponentDiff(System.String,System.DateTime,System.DateTime)">
            <summary>
            Returns the component summary diff.
            </summary>
            <returns>the component summary diff.</returns>
        </member>
        <member name="M:webapp.Controllers.v0._2.AuditsController.GetImageScanHistory(System.String)">
            <summary>
            Returns the Image scans history.
            </summary>
            <param name="imageTag">Full image tag.</param>
            <returns>The Image scans history.</returns>
        </member>
        <member name="M:webapp.Controllers.v0._2.AuditsController.GetImageScanDetail(System.String,System.Nullable{System.DateTime})">
            <summary>
            Returns the Image Scan detail.
            </summary>
            <returns>the component summary detail.</returns>
        </member>
        <member name="M:webapp.Controllers.v0._2.AuditsController.GetImageScanDiff(System.String,System.DateTime,System.DateTime)">
            <summary>
            Returns the Image Scan diff.
            </summary>
            <param name="imageTag">The full image tag.</param>
            <param name="date1">The first date to compare.</param>
            <param name="date2">The second date to compare.</param>
            <returns>The Image Scan diff.</returns>
        </member>
        <member name="T:webapp.Database.ChecksCache">
            <summary>
            Keeps track of Check items to reduce amount of interactions with real database.
            The objects stores in memory identifiers of Checks, that are already in database.
            It does requests only to update expired items or query not cached yet records.
            The cache is expected to be used in Singleton mode.
            </summary>
        </member>
        <member name="F:webapp.Database.ChecksCache.ImageScanCheck">
            <summary>
            Pre-defined image-scan check.
            </summary>
        </member>
        <member name="M:webapp.Database.ChecksCache.#ctor(webapp.Configuration.ConfigurationParser,joseki.db.JosekiDbContext)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.Database.ChecksCache"/> class.
            </summary>
            <param name="config">Joseki configuration object.</param>
            <param name="db">Joseki database instance.</param>
        </member>
        <member name="M:webapp.Database.ChecksCache.GetOrAddItem(System.String,System.Func{webapp.Database.Models.Check})">
            <summary>
            The method gets Check integer identifier from in-memory list, or if it's not there does requests to the Database.
            The method could do one of the following:
            - returns integer Id from memory if it's there;
            - if Id is not cached yet - queries it from the Database;
            - if Check is not in the Database yet - inserts it and stores the result in memory for future requests.
            If the cache item was not updated longer than a configured threshold - updates the record in Database.
            </summary>
            <param name="id">Check string identifier.</param>
            <param name="checkFactory">The factory method to generate a new Check object.</param>
            <returns>The integer identifier, which is used as Database Primary and Foreign Keys.</returns>
        </member>
        <member name="M:webapp.Database.ChecksCache.GetImageScanCheck">
            <summary>
            Gets the default Image Scan Check object.
            </summary>
            <returns>Internal id of image-scan Check.</returns>
        </member>
        <member name="T:webapp.Database.CveCache">
            <summary>
            Keeps track of CVE items to reduce amount of interactions with real database.
            The objects stores in memory identifiers of CVEs, that are already in database.
            It does requests only to update expired items or query not cached yet records.
            The cache is expected to be used in Singleton mode.
            </summary>
        </member>
        <member name="M:webapp.Database.CveCache.#ctor(webapp.Configuration.ConfigurationParser,joseki.db.JosekiDbContext)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.Database.CveCache"/> class.
            </summary>
            <param name="config">Joseki configuration object.</param>
            <param name="db">Joseki database instance.</param>
        </member>
        <member name="M:webapp.Database.CveCache.GetOrAddItem(System.String,System.Func{webapp.Database.Models.CVE})">
            <summary>
            The method gets CVE integer identifier from in-memory list, or if it's not there does requests to the Database.
            The method could do one of the following:
            - returns integer Id from memory if it's there;
            - if Id is not cached yet - queries it from the Database;
            - if CVE is not in the Database yet - inserts it and stores the result in memory for future requests.
            If the cache item was not updated longer than a configured threshold - updates the record in Database.
            </summary>
            <param name="id">CVE string identifier.</param>
            <param name="cveFactory">The factory method to generate a new CVE object.</param>
            <returns>The integer identifier, which is used as Database Primary and Foreign Keys.</returns>
        </member>
        <member name="T:webapp.Database.DatabaseMapper">
            <summary>
            Maps internal object ot database entities and vice versa.
            </summary>
        </member>
        <member name="M:webapp.Database.DatabaseMapper.ToEntity(webapp.Database.Models.Check)">
            <summary>
            Creates Check entity from internal model.
            </summary>
            <param name="check">Internal Check model.</param>
            <returns>Database compatible entity.</returns>
        </member>
        <member name="M:webapp.Database.DatabaseMapper.ToEntity(webapp.Database.Models.Audit)">
            <summary>
            Creates Audit entity from internal model.
            </summary>
            <param name="audit">Internal Audit model.</param>
            <returns>Database compatible entity.</returns>
        </member>
        <member name="M:webapp.Database.DatabaseMapper.ToEntity(webapp.Database.Models.CheckResult)">
            <summary>
            Creates Check Result entity from internal model.
            </summary>
            <param name="checkResult">Internal Check Result model.</param>
            <returns>Database compatible entity.</returns>
        </member>
        <member name="M:webapp.Database.DatabaseMapper.ToEntity(webapp.Database.Models.MetadataKube)">
            <summary>
            Creates Kubernetes Metadata entity from internal model.
            </summary>
            <param name="metadata">Internal metadata model.</param>
            <returns>Database compatible entity.</returns>
        </member>
        <member name="M:webapp.Database.DatabaseMapper.ToEntity(webapp.Database.Models.MetadataAzure)">
            <summary>
            Creates Azure Metadata entity from internal model.
            </summary>
            <param name="metadata">Internal metadata model.</param>
            <returns>Database compatible entity.</returns>
        </member>
        <member name="M:webapp.Database.DatabaseMapper.ToEntity(webapp.Database.Models.ImageScanResultWithCVEs)">
            <summary>
            Creates Image Scan entity from internal model.
            </summary>
            <param name="scan">Internal Image Scan model.</param>
            <returns>Database compatible entity.</returns>
        </member>
        <member name="M:webapp.Database.DatabaseMapper.ToEntity(webapp.Database.Models.ImageScanToCve)">
            <summary>
            Creates Image Scan to CVE entity from internal model.
            </summary>
            <param name="scanToCve">Internal Image Scan to CVE model.</param>
            <returns>Database compatible entity.</returns>
        </member>
        <member name="M:webapp.Database.DatabaseMapper.ToEntity(webapp.Database.Models.CVE)">
            <summary>
            Creates CVE entity from internal model.
            </summary>
            <param name="cve">Internal CVE model.</param>
            <returns>Database compatible entity.</returns>
        </member>
        <member name="M:webapp.Database.DatabaseMapper.ToEntity(webapp.Database.Models.CheckValue)">
            <summary>
            Creates CheckValue enum value from internal enum.
            </summary>
            <param name="value">Internal enum.</param>
            <returns>Database compatible enum.</returns>
        </member>
        <member name="M:webapp.Database.DatabaseMapper.ToEntity(webapp.Database.Models.CheckSeverity)">
            <summary>
            Creates CheckSeverity enum value from internal enum.
            </summary>
            <param name="severity">Internal enum.</param>
            <returns>Database compatible enum.</returns>
        </member>
        <member name="M:webapp.Database.DatabaseMapper.ToEntity(webapp.Database.Models.CveSeverity)">
            <summary>
            Creates joseki.db.entities.CveSeverity enum value from internal enum.
            </summary>
            <param name="severity">Internal enum.</param>
            <returns>Database compatible enum.</returns>
        </member>
        <member name="M:webapp.Database.DatabaseMapper.ToEntity(webapp.Database.Models.ImageScanStatus)">
            <summary>
            Creates joseki.db.entities.ImageScanStatus enum value from internal enum.
            </summary>
            <param name="status">Internal enum.</param>
            <returns>Database compatible enum.</returns>
        </member>
        <member name="M:webapp.Database.DatabaseMapper.FromEntity(joseki.db.entities.CveSeverity)">
            <summary>
            Creates internal enum value from database-compatible.
            </summary>
            <param name="severity">Database compatible enum.</param>
            <returns>Internal enum.</returns>
        </member>
        <member name="M:webapp.Database.DatabaseMapper.GetShortResult(joseki.db.entities.ImageScanResultEntity)">
            <summary>
            Creates Image Scan model from database entity.
            </summary>
            <param name="entity">Database entity.</param>
            <returns>Internal model.</returns>
        </member>
        <member name="M:webapp.Database.DatabaseMapper.FromEntity(joseki.db.entities.AuditEntity)">
            <summary>
            Creates Audit internal model from database entity.
            </summary>
            <param name="entity">Database compatible entity.</param>
            <returns>Internal Audit model.</returns>
        </member>
        <member name="M:webapp.Database.DatabaseMapper.FromEntity(joseki.db.entities.ImageScanStatus)">
            <summary>
            Creates ImageScanStatus enum value from database-compatible enum.
            </summary>
            <param name="status">Database compatible enum.</param>
            <returns>Internal enum.</returns>
        </member>
        <member name="T:webapp.Database.IJosekiDatabase">
            <summary>
            An abstraction layer on top of Joseki database.
            </summary>
        </member>
        <member name="M:webapp.Database.IJosekiDatabase.SaveAuditResult(webapp.Database.Models.Audit)">
            <summary>
            Saves all the audit related data to the database:
            - Audit itself,
            - associated Check-Results,
            - not existing before this point Checks,
            - Azure or Kube metadata.
            </summary>
            <param name="audit">The entire audit object, including checks, check-results, and metadata.</param>
            <returns>A task object.</returns>
        </member>
        <member name="M:webapp.Database.IJosekiDatabase.SaveImageScanResult(webapp.Database.Models.ImageScanResultWithCVEs)">
            <summary>
            Saves all the image-scan related data to the database:
            - image scan itself;
            - associated CVEs.
            </summary>
            <param name="imageScanResult">The entire Image Scan Result object.</param>
            <returns>A task object.</returns>
        </member>
        <member name="M:webapp.Database.IJosekiDatabase.SaveInProgressImageScan(webapp.Database.Models.ImageScanResultWithCVEs)">
            <summary>
            Saves a placeholder for in-progress image-scan.
            </summary>
            <param name="imageScanResult">The image scan place-holder.</param>
            <returns>A task object.</returns>
        </member>
        <member name="M:webapp.Database.IJosekiDatabase.GetNotExpiredImageScans(System.String[])">
            <summary>
            Queries the database for image-scan results, that are within scan TTL.
            Image Scan TTL is defined by joseki configuration.
            </summary>
            <param name="imageTags">Array of unique image-tags.</param>
            <returns>Not expired image scans.</returns>
        </member>
        <member name="M:webapp.Database.IJosekiDatabase.GetAuditedComponentsWithHistory(System.DateTime)">
            <summary>
            Gets latest audits for each component at particular date.
            </summary>
            <param name="date">The date.</param>
            <returns>Latest audits.</returns>
        </member>
        <member name="T:webapp.Database.InfraScoreDbWrapper">
            <summary>
            Takes care of database related operations used by InfrastructureScoreCache.
            </summary>
        </member>
        <member name="M:webapp.Database.InfraScoreDbWrapper.#ctor(joseki.db.JosekiDbContext)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.Database.InfraScoreDbWrapper"/> class.
            </summary>
            <param name="db">Joseki database.</param>
        </member>
        <member name="M:webapp.Database.InfraScoreDbWrapper.GetAllComponentsIds">
            <inheritdoc />
        </member>
        <member name="M:webapp.Database.InfraScoreDbWrapper.GetLastMonthAudits(System.String)">
            <inheritdoc />
        </member>
        <member name="M:webapp.Database.InfraScoreDbWrapper.GetAudit(System.String,System.DateTime)">
            <inheritdoc />
        </member>
        <member name="M:webapp.Database.InfraScoreDbWrapper.GetAudits(System.DateTime)">
            <inheritdoc />
        </member>
        <member name="M:webapp.Database.InfraScoreDbWrapper.GetCounterSummariesForAudit(System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:webapp.Database.IInfraScoreDbWrapper">
            <summary>
            Interface is extracted to embrace infra-score-cache layer testing.
            </summary>
        </member>
        <member name="M:webapp.Database.IInfraScoreDbWrapper.GetAllComponentsIds">
            <summary>
            Returns all scanner-ids used during last month.
            </summary>
            <returns>Array of unique scanner identifiers.</returns>
        </member>
        <member name="M:webapp.Database.IInfraScoreDbWrapper.GetLastMonthAudits(System.String)">
            <summary>
            Returns latest audit entities for each day during the last month.
            If there is several audits for the same day - methods returns only the last one.
            </summary>
            <param name="componentId">Scanner identifier to get audits for.</param>
            <returns>Array of latest audits per day.</returns>
        </member>
        <member name="M:webapp.Database.IInfraScoreDbWrapper.GetAudit(System.String,System.DateTime)">
            <summary>
            Returns latest audit entity for requested day.
            If there is several audits for the same day - methods returns only the last one.
            </summary>
            <param name="componentId">Scanner identifier to get audits for.</param>
            <param name="date">Audit date.</param>
            <returns>Latest audits for the day.</returns>
        </member>
        <member name="M:webapp.Database.IInfraScoreDbWrapper.GetAudits(System.DateTime)">
            <summary>
            Returns latest audits for each scanner for requested day.
            If there is several audits for the same day - methods returns only the latest one per scanner.
            </summary>
            <param name="date">Audits date.</param>
            <returns>Latest audits for each scanner for the day.</returns>
        </member>
        <member name="M:webapp.Database.IInfraScoreDbWrapper.GetCounterSummariesForAudit(System.Int32)">
            <summary>
            Calculate Counter Summary for requested audits.
            </summary>
            <param name="auditId">Audit identifier to calculate summaries.</param>
            <returns>counters-summary for requested audit-id.</returns>
        </member>
        <member name="T:webapp.Database.InfrastructureScoreCache">
            <summary>
            Takes care of keeping pre-calculated counter-summaries.
            </summary>
        </member>
        <member name="M:webapp.Database.InfrastructureScoreCache.#ctor(webapp.Database.IInfraScoreDbWrapper)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.Database.InfrastructureScoreCache"/> class.
            </summary>
            <param name="db">Joseki database.</param>
        </member>
        <member name="M:webapp.Database.InfrastructureScoreCache.ReloadEntireCache">
            <inheritdoc />
        </member>
        <member name="M:webapp.Database.InfrastructureScoreCache.GetCountersSummary(System.String,System.DateTime)">
            <inheritdoc />
        </member>
        <member name="T:webapp.Database.IInfrastructureScoreCache">
            <summary>
            Interface to abstract infra-score cache for testing.
            </summary>
        </member>
        <member name="M:webapp.Database.IInfrastructureScoreCache.ReloadEntireCache">
            <summary>
            Pre-calculate counters for all available scanners during last month.
            </summary>
            <returns>A task object.</returns>
        </member>
        <member name="M:webapp.Database.IInfrastructureScoreCache.GetCountersSummary(System.String,System.DateTime)">
            <summary>
            Returns counters summary for requested component and date.
            First method tries to look inside local cache.
            Only if there is no record in the case - requests it from DB.
            </summary>
            <param name="componentId">Infrastructure component identifier.</param>
            <param name="date">Audit date.</param>
            <returns>Counters Summary for requested component and date.</returns>
        </member>
        <member name="T:webapp.Database.Models.Audit">
            <summary>
            The entity represents a single Audit object.
            </summary>
        </member>
        <member name="F:webapp.Database.Models.Audit.OverallId">
            <summary>
            Overall infrastructure id.
            </summary>
        </member>
        <member name="F:webapp.Database.Models.Audit.OverallName">
            <summary>
            Overall infrastructure name.
            </summary>
        </member>
        <member name="P:webapp.Database.Models.Audit.Id">
            <summary>
            Unique audit identifier.
            </summary>
        </member>
        <member name="P:webapp.Database.Models.Audit.Date">
            <summary>
            date when audit was performed.
            </summary>
        </member>
        <member name="P:webapp.Database.Models.Audit.ScannerId">
            <summary>
            Which scanner did the audit.
            TODO: Maybe create a ScannerId type to automatically check scanner types.
            </summary>
        </member>
        <member name="P:webapp.Database.Models.Audit.ComponentId">
            <summary>
            Which infrastructure component was audited: k8s-cluster id or azure-subscription-id.
            TODO: Maybe create a ComponentId type to automatically split it to parts and do all the checks.
            </summary>
        </member>
        <member name="P:webapp.Database.Models.Audit.ComponentName">
            <summary>
            Human-friendly infrastructure component name.
            </summary>
        </member>
        <member name="P:webapp.Database.Models.Audit.CheckResults">
            <summary>
            List of all check-results, that belongs to the audit.
            </summary>
        </member>
        <member name="P:webapp.Database.Models.Audit.MetadataKube">
            <summary>
            Reference to associated Kubernetes metadata.
            The property is null, if audit belongs to azure.
            Only one of MetadataAzure and MetadataKube is not null.
            </summary>
        </member>
        <member name="P:webapp.Database.Models.Audit.MetadataAzure">
            <summary>
            Reference to associated Azure metadata.
            The property is null, if audit belongs to kubernetes.
            Only one of MetadataAzure and MetadataKube is not null.
            </summary>
        </member>
        <member name="T:webapp.Database.Models.Check">
            <summary>
            Describes in details a single check type.
            </summary>
        </member>
        <member name="P:webapp.Database.Models.Check.Id">
            <summary>
            The check identifier in form "{scanner-type}.{scanner-check-id}".
            </summary>
        </member>
        <member name="P:webapp.Database.Models.Check.Category">
            <summary>
            It groups related check types, for example "k8s.security", "azure.storage".
            </summary>
        </member>
        <member name="P:webapp.Database.Models.Check.Severity">
            <summary>
            The severity answers the question: how dangerous the failure of this check could be.
            It helps to prioritize check results.
            </summary>
        </member>
        <member name="P:webapp.Database.Models.Check.Description">
            <summary>
            Detailed check description: what exactly it verifies and why it's important.
            </summary>
        </member>
        <member name="P:webapp.Database.Models.Check.Remediation">
            <summary>
            The suggestion how to fix the issue.
            </summary>
        </member>
        <member name="T:webapp.Database.Models.CheckSeverity">
            <summary>
            Check severities.
            </summary>
        </member>
        <member name="F:webapp.Database.Models.CheckSeverity.Unknown">
            <summary>
            The level is unknown.
            </summary>
        </member>
        <member name="F:webapp.Database.Models.CheckSeverity.Critical">
            <summary>
            Top-level issues, that often should be addressed as soon as possible.
            </summary>
        </member>
        <member name="F:webapp.Database.Models.CheckSeverity.High">
            <summary>
            Important issue, which should be carefully reviewed.
            </summary>
        </member>
        <member name="F:webapp.Database.Models.CheckSeverity.Medium">
            <summary>
            Medium-level problem, which could cause moderate damage or loss.
            </summary>
        </member>
        <member name="F:webapp.Database.Models.CheckSeverity.Low">
            <summary>
            The lowest severity in the rank. Represents only a slight damage.
            </summary>
        </member>
        <member name="T:webapp.Database.Models.CheckResult">
            <summary>
            A single check result object.
            </summary>
        </member>
        <member name="P:webapp.Database.Models.CheckResult.Id">
            <summary>
            Unique record identifier.
            </summary>
        </member>
        <member name="P:webapp.Database.Models.CheckResult.InternalCheckId">
            <summary>
            The reference to Check entity.
            </summary>
        </member>
        <member name="P:webapp.Database.Models.CheckResult.ExternalCheckId">
            <summary>
            External check identifier with format "{scanner_type}.{scanner-check-id}".
            </summary>
        </member>
        <member name="P:webapp.Database.Models.CheckResult.ComponentId">
            <summary>
            Unique component identifier in format:
            - for azure components: `subscription/{id}/resource_group/{rg_name}/{object_type}/{object_name}`;
            - for k8s resources: `k8s/{cluster_id}/namespace/{ns_name}/{object_type}/{object_name}/pod/{pod_name}/container/{container_name}/{image_tag}`,
            where all sections after `{object_name}` are optional, as there might be separate checks on object-type, pod, container, or image.
            </summary>
        </member>
        <member name="P:webapp.Database.Models.CheckResult.AuditId">
            <summary>
            The reference to Audit entity.
            </summary>
        </member>
        <member name="P:webapp.Database.Models.CheckResult.Value">
            <summary>
            The check result itself.
            </summary>
        </member>
        <member name="P:webapp.Database.Models.CheckResult.Message">
            <summary>
            Free-format associated message.
            </summary>
        </member>
        <member name="P:webapp.Database.Models.CheckResult.Check">
            <summary>
            Check object.
            </summary>
        </member>
        <member name="T:webapp.Database.Models.CheckValue">
            <summary>
            Represents the check result value.
            </summary>
        </member>
        <member name="F:webapp.Database.Models.CheckValue.NoData">
            <summary>
            There is no result due one of the reasons:
            - the check failed,
            - the check requires a manual step,
            - the check result should be verified by end-user.
            </summary>
        </member>
        <member name="F:webapp.Database.Models.CheckValue.InProgress">
            <summary>
            The check is still in progress
            </summary>
        </member>
        <member name="F:webapp.Database.Models.CheckValue.Failed">
            <summary>
            The Component failed to satisfy Check requirements.
            </summary>
        </member>
        <member name="F:webapp.Database.Models.CheckValue.Succeeded">
            <summary>
            The Component satisfied Check requirements.
            </summary>
        </member>
        <member name="T:webapp.Database.Models.CVE">
            <summary>
            The object describes a single CVE (Common Vulnerabilities and Exposures).
            </summary>
        </member>
        <member name="P:webapp.Database.Models.CVE.Id">
            <summary>
            The <see href="https://cve.mitre.org/cve/identifiers/index.html">CVE identifier</see>,
            which looks like `CVE-2005-2541` or `TEMP-0290435-0B57B5`.
            </summary>
        </member>
        <member name="P:webapp.Database.Models.CVE.Title">
            <summary>
            Short CVE description.
            </summary>
        </member>
        <member name="P:webapp.Database.Models.CVE.PackageName">
            <summary>
            The name of the package, where CVE was found, for example "tar" or "sysvinit-utils".
            </summary>
        </member>
        <member name="P:webapp.Database.Models.CVE.Description">
            <summary>
            Detailed CVE description.
            </summary>
        </member>
        <member name="P:webapp.Database.Models.CVE.Severity">
            <summary>
            Highlights how dangerous the CVE is.
            </summary>
        </member>
        <member name="P:webapp.Database.Models.CVE.Remediation">
            <summary>
            In most cases, suggests to update the sources to the version of the package, that addresses the issue.
            </summary>
        </member>
        <member name="P:webapp.Database.Models.CVE.References">
            <summary>
            Links to external source with more details about the CVE.
            </summary>
        </member>
        <member name="T:webapp.Database.Models.CveSeverity">
            <summary>
            CVE severities.
            </summary>
        </member>
        <member name="F:webapp.Database.Models.CveSeverity.Unknown">
            <summary>
            The level is unknown.
            </summary>
        </member>
        <member name="F:webapp.Database.Models.CveSeverity.Low">
            <summary>
            The lowest severity in the rank. Represents only a slight damage.
            </summary>
        </member>
        <member name="F:webapp.Database.Models.CveSeverity.Medium">
            <summary>
            Medium-level problem, which could cause moderate damage or loss.
            </summary>
        </member>
        <member name="F:webapp.Database.Models.CveSeverity.High">
            <summary>
            Important issue, which should be carefully reviewed.
            </summary>
        </member>
        <member name="F:webapp.Database.Models.CveSeverity.Critical">
            <summary>
            Top-level issues, that often should be addressed as soon as possible.
            </summary>
        </member>
        <member name="T:webapp.Database.Models.ImageScanResult">
            <summary>
            Short representation of Image Scan Result.
            </summary>
        </member>
        <member name="P:webapp.Database.Models.ImageScanResult.ImageTag">
            <summary>
            Full image tag, which includes registry, image name and version.
            For example `mcr.microsoft.com/dotnet/core/sdk:3.1.101-alpine3.10`.
            </summary>
        </member>
        <member name="P:webapp.Database.Models.ImageScanResult.Date">
            <summary>
            UTC point of time when scan was performed.
            </summary>
        </member>
        <member name="P:webapp.Database.Models.ImageScanResult.Status">
            <summary>
            The status of image scan.
            </summary>
        </member>
        <member name="P:webapp.Database.Models.ImageScanResult.Description">
            <summary>
            Human-readable description of the scan.
            </summary>
        </member>
        <member name="P:webapp.Database.Models.ImageScanResult.Counters">
            <summary>
            Counts issues by Severity.
            </summary>
        </member>
        <member name="M:webapp.Database.Models.ImageScanResult.GetCheckResultValue">
            <summary>
            Maps the object to Check Result value.
            </summary>
            <returns>Check Result value.</returns>
        </member>
        <member name="M:webapp.Database.Models.ImageScanResult.GetCheckResultMessage">
            <summary>
            Compose human-readable result description with format "{severity-1} {issues-count-1}; {severity-2} {issues-count-2};...".
            </summary>
            <returns>Short human-readable image-scan summary.</returns>
        </member>
        <member name="T:webapp.Database.Models.VulnerabilityCounter">
            <summary>
            Represents the amount of issues with a particular severity.
            </summary>
        </member>
        <member name="P:webapp.Database.Models.VulnerabilityCounter.Severity">
            <summary>
            The CVE severity.
            </summary>
        </member>
        <member name="P:webapp.Database.Models.VulnerabilityCounter.Count">
            <summary>
            Amount of CVEs with this severity.
            </summary>
        </member>
        <member name="T:webapp.Database.Models.ImageScanStatus">
            <summary>
            The status of the Image Scan.
            </summary>
        </member>
        <member name="F:webapp.Database.Models.ImageScanStatus.Queued">
            <summary>
            Image Scan was already queued, but the result is not handled yet.
            </summary>
        </member>
        <member name="F:webapp.Database.Models.ImageScanStatus.Failed">
            <summary>
            Image scanner failed to perform the scan.
            </summary>
        </member>
        <member name="F:webapp.Database.Models.ImageScanStatus.Succeeded">
            <summary>
            Image scan succeeded.
            This status does not mean, that the image passed the scan!
            </summary>
        </member>
        <member name="T:webapp.Database.Models.ImageScanResultWithCVEs">
            <summary>
            The goal of image scan is verify if known CVEs (Common Vulnerabilities and Exposures) present in used by image packages.
            Therefore, the Scan Result consists of an array of CVEs. The array might be empty, if no vulnerabilities was found.
            </summary>
        </member>
        <member name="P:webapp.Database.Models.ImageScanResultWithCVEs.Id">
            <summary>
            Unique identifier.
            </summary>
        </member>
        <member name="P:webapp.Database.Models.ImageScanResultWithCVEs.FoundCVEs">
            <summary>
            List of discovered vulnerabilities.
            </summary>
        </member>
        <member name="T:webapp.Database.Models.ImageScanToCve">
            <summary>
            Maps exact image scans to list of CVEs in this scan.
            </summary>
        </member>
        <member name="P:webapp.Database.Models.ImageScanToCve.InternalCveId">
            <summary>
            Internal CVE identifier.
            </summary>
        </member>
        <member name="P:webapp.Database.Models.ImageScanToCve.Target">
            <summary>
            Where the CVE was discovered: container image name or application dependencies file.
            </summary>
        </member>
        <member name="P:webapp.Database.Models.ImageScanToCve.UsedPackage">
            <summary>
            The package that have CVE or depends on a package with CVE.
            </summary>
        </member>
        <member name="P:webapp.Database.Models.ImageScanToCve.UsedPackageVersion">
            <summary>
            States which exact version of vulnerable package `ScanId` discovered.
            </summary>
        </member>
        <member name="T:webapp.Database.Models.MetadataAzure">
            <summary>
            Json-serialized azure metadata, actual at a particular audit time.
            </summary>
        </member>
        <member name="P:webapp.Database.Models.MetadataAzure.Id">
            <summary>
            The record identifier.
            </summary>
        </member>
        <member name="P:webapp.Database.Models.MetadataAzure.AuditId">
            <summary>
            Reference to the audit record.
            </summary>
        </member>
        <member name="P:webapp.Database.Models.MetadataAzure.Date">
            <summary>
            Date and time, when metadata was collected.
            </summary>
        </member>
        <member name="P:webapp.Database.Models.MetadataAzure.JSON">
            <summary>
            Json-encoded representation of azure-metadata.
            </summary>
        </member>
        <member name="T:webapp.Database.Models.MetadataKube">
            <summary>
            Json-serialized kubernetes metadata, actual at a particular audit time.
            </summary>
        </member>
        <member name="P:webapp.Database.Models.MetadataKube.Id">
            <summary>
            The record identifier.
            </summary>
        </member>
        <member name="P:webapp.Database.Models.MetadataKube.AuditId">
            <summary>
            Reference to the audit record.
            </summary>
        </member>
        <member name="P:webapp.Database.Models.MetadataKube.Date">
            <summary>
            Date and time, when metadata was collected.
            </summary>
        </member>
        <member name="P:webapp.Database.Models.MetadataKube.JSON">
            <summary>
            Json-encoded representation of kube-metadata.
            </summary>
        </member>
        <member name="T:webapp.Database.MssqlJosekiDatabase">
            <summary>
            MsSQL implementation of Database.
            </summary>
        </member>
        <member name="M:webapp.Database.MssqlJosekiDatabase.#ctor(joseki.db.JosekiDbContext,webapp.Configuration.ConfigurationParser)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.Database.MssqlJosekiDatabase"/> class.
            </summary>
        </member>
        <member name="M:webapp.Database.MssqlJosekiDatabase.SaveAuditResult(webapp.Database.Models.Audit)">
            <inheritdoc />
        </member>
        <member name="M:webapp.Database.MssqlJosekiDatabase.SaveInProgressImageScan(webapp.Database.Models.ImageScanResultWithCVEs)">
            <inheritdoc />
        </member>
        <member name="M:webapp.Database.MssqlJosekiDatabase.SaveImageScanResult(webapp.Database.Models.ImageScanResultWithCVEs)">
            <inheritdoc />
        </member>
        <member name="M:webapp.Database.MssqlJosekiDatabase.GetNotExpiredImageScans(System.String[])">
            <inheritdoc />
        </member>
        <member name="M:webapp.Database.MssqlJosekiDatabase.GetAuditedComponentsWithHistory(System.DateTime)">
            <inheritdoc />
        </member>
        <member name="T:webapp.Exceptions.AuditNotFoundException">
            <summary>
            Thrown, when there is no audit to satisfy requested parameters.
            </summary>
        </member>
        <member name="M:webapp.Exceptions.AuditNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.Exceptions.AuditNotFoundException"/> class.
            </summary>
            <param name="message">Custom exception message.</param>
        </member>
        <member name="T:webapp.Exceptions.JosekiException">
            <summary>
            General Joseki exception.
            </summary>
        </member>
        <member name="M:webapp.Exceptions.JosekiException.#ctor(System.Exception,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.Exceptions.JosekiException"/> class.
            </summary>
            <param name="ex">Inner exception object.</param>
            <param name="message">Custom exception message.</param>
        </member>
        <member name="M:webapp.Exceptions.JosekiException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.Exceptions.JosekiException"/> class.
            </summary>
            <param name="message">Custom exception message.</param>
        </member>
        <member name="M:webapp.Exceptions.JosekiException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.Exceptions.JosekiException"/> class.
            </summary>
        </member>
        <member name="T:webapp.Handlers.GetComponentDetailsHandler">
            <summary>
            Prepares response to get-component-details request.
            </summary>0
        </member>
        <member name="M:webapp.Handlers.GetComponentDetailsHandler.#ctor(joseki.db.JosekiDbContext,webapp.Database.IInfrastructureScoreCache)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.Handlers.GetComponentDetailsHandler"/> class.
            </summary>
            <param name="db">Joseki database object.</param>
            <param name="cache">Score cache.</param>
        </member>
        <member name="M:webapp.Handlers.GetComponentDetailsHandler.GetDetails(System.String,System.DateTime)">
            <summary>
            Returns infrastructure history for requested component.
            </summary>
            <param name="componentId">Component identifier.</param>
            <param name="date">The date to get details for.</param>
            <returns>Component details.</returns>
        </member>
        <member name="T:webapp.Handlers.GetImageScanHandler">
            <summary>
            Prepares response to get-image-scan-details request.
            </summary>0
        </member>
        <member name="M:webapp.Handlers.GetImageScanHandler.#ctor(joseki.db.JosekiDbContext)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.Handlers.GetImageScanHandler"/> class.
            </summary>
            <param name="db">Joseki database object.</param>
        </member>
        <member name="M:webapp.Handlers.GetImageScanHandler.GetHistory(System.String)">
            <summary>
            Returns Image Scan details history for requested Tag.
            </summary>
            <param name="imageTag">Image full tag.</param>
            <returns>Image scan details.</returns>
        </member>
        <member name="M:webapp.Handlers.GetImageScanHandler.GetDetails(System.String,System.DateTime)">
            <summary>
            Returns Image Scan details for requested Tag and Date.
            </summary>
            <param name="imageTag">Image full tag.</param>
            <param name="date">The date to get details for.</param>
            <returns>Image scan details.</returns>
        </member>
        <member name="M:webapp.Handlers.GetImageScanHandler.GetCounters(System.String,System.DateTime)">
            <summary>
            Returns only CVE counters for Image Scan at requested Date.
            </summary>
            <param name="imageTag">Image full tag.</param>
            <param name="date">The date to get details for.</param>
            <returns>Image scan details.</returns>
        </member>
        <member name="T:webapp.Handlers.GetInfrastructureHistoryHandler">
            <summary>
            Prepares response to get-infrastructure-history request.
            </summary>
        </member>
        <member name="M:webapp.Handlers.GetInfrastructureHistoryHandler.#ctor(joseki.db.JosekiDbContext,webapp.Database.IInfrastructureScoreCache)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.Handlers.GetInfrastructureHistoryHandler"/> class.
            </summary>
            <param name="db">Joseki database object.</param>
            <param name="cache">Score cache.</param>
        </member>
        <member name="M:webapp.Handlers.GetInfrastructureHistoryHandler.GetHistory(System.String)">
            <summary>
            Returns infrastructure history for requested component.
            </summary>
            <param name="componentId">Component identifier.</param>
            <returns>Infrastructure history.</returns>
        </member>
        <member name="T:webapp.Handlers.GetInfrastructureOverviewDiffHandler">
            <summary>
            Prepares response to get-overall-infrastructure-diff request.
            </summary>
        </member>
        <member name="M:webapp.Handlers.GetInfrastructureOverviewDiffHandler.#ctor(webapp.Database.IJosekiDatabase,webapp.Database.IInfrastructureScoreCache)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.Handlers.GetInfrastructureOverviewDiffHandler"/> class.
            </summary>
            <param name="db">Joseki database.</param>
            <param name="cache">Score cache.</param>
        </member>
        <member name="M:webapp.Handlers.GetInfrastructureOverviewDiffHandler.GetDiff(System.DateTime,System.DateTime)">
            <summary>
            Returns overall infrastructure overview objects for two dates.
            </summary>
            <param name="date1">The first date to calculate overview.</param>
            <param name="date2">The second date to calculate overview.</param>
            <returns>Infrastructure overview diff.</returns>
        </member>
        <member name="T:webapp.Handlers.GetInfrastructureOverviewHandler">
            <summary>
            Prepares response to get-overall-infrastructure request.
            </summary>
        </member>
        <member name="M:webapp.Handlers.GetInfrastructureOverviewHandler.#ctor(webapp.Database.IJosekiDatabase,webapp.Database.IInfrastructureScoreCache)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.Handlers.GetInfrastructureOverviewHandler"/> class.
            </summary>
            <param name="db">Joseki database.</param>
            <param name="cache">Score cache.</param>
        </member>
        <member name="M:webapp.Handlers.GetInfrastructureOverviewHandler.GetOverview(System.DateTime)">
            <summary>
            Returns overall infrastructure overview object.
            </summary>
            <param name="date">date to calculate overview.</param>
            <returns>Infrastructure overview.</returns>
        </member>
        <member name="T:webapp.Handlers.GetKnowledgebaseItemsHandler">
            <summary>
            Encapsulates GET operations for Knowledgebase item.
            </summary>
        </member>
        <member name="M:webapp.Handlers.GetKnowledgebaseItemsHandler.#ctor(joseki.db.JosekiDbContext)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.Handlers.GetKnowledgebaseItemsHandler"/> class.
            </summary>
            <param name="db">Joseki database object.</param>
        </member>
        <member name="M:webapp.Handlers.GetKnowledgebaseItemsHandler.GetItemById(System.String)">
            <summary>
            Tries to get item from the database by identifier.
            </summary>
            <param name="id">Knowledgebase item identifier.</param>
            <returns>Knowledgebase item content or default NotFound entity.</returns>
        </member>
        <member name="M:webapp.Handlers.GetKnowledgebaseItemsHandler.GetItemsByIds(System.String[])">
            <summary>
            Tries to get items from the database by their public identifiers.
            </summary>
            <param name="ids">Knowledgebase item identifiers.</param>
            <returns>Found knowledgebase items.</returns>
        </member>
        <member name="M:webapp.Handlers.GetKnowledgebaseItemsHandler.GetAll">
            <summary>
            Returns all knowledgebase items from DB.
            </summary>
            <returns>All Knowledgebase items.</returns>
        </member>
        <member name="T:webapp.Handlers.InfraScoreExtensions">
            <summary>
            Common Infra-Score extensions.
            </summary>
        </member>
        <member name="M:webapp.Handlers.InfraScoreExtensions.GetInfrastructureOverview(webapp.Database.IInfrastructureScoreCache,System.DateTime,webapp.Database.Models.Audit[])">
            <summary>
            Composes an infrastructure overview object for a requested date and provided audits.
            </summary>
            <param name="cache">Extended cache object.</param>
            <param name="date">The date to calculate overview for.</param>
            <param name="audits">List of audits to include into overview.</param>
            <returns>Complete infrastructure-overview object.</returns>
        </member>
        <member name="M:webapp.Handlers.InfraScoreExtensions.GetInfrastructureHistory(webapp.Database.IInfrastructureScoreCache,System.String,System.String)">
            <summary>
            Composes a component history array.
            </summary>
            <param name="cache">Extended cache object.</param>
            <param name="componentId">Component identifier.</param>
            <param name="componentName">Component name.</param>
            <returns>Complete component history object.</returns>
        </member>
        <member name="M:webapp.Handlers.InfraScoreExtensions.GetCategory(System.String)">
            <summary>
            Gets component category by identifier.
            </summary>
            <param name="componentId">Component unique identifier.</param>
            <returns>Component category.</returns>
        </member>
        <member name="T:webapp.Infrastructure.ConfigureSwaggerOptions">
            <summary>
            Configures the Swagger generation options.
            </summary>
            <remarks>This allows API versioning to define a Swagger document per API version after the
            <see cref="T:Microsoft.AspNetCore.Mvc.ApiExplorer.IApiVersionDescriptionProvider"/> service has been resolved from the service container.</remarks>
        </member>
        <member name="M:webapp.Infrastructure.ConfigureSwaggerOptions.#ctor(Microsoft.AspNetCore.Mvc.ApiExplorer.IApiVersionDescriptionProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.Infrastructure.ConfigureSwaggerOptions"/> class.
            </summary>
            <param name="provider">The <see cref="T:Microsoft.AspNetCore.Mvc.ApiExplorer.IApiVersionDescriptionProvider">provider</see> used to generate Swagger documents.</param>
        </member>
        <member name="M:webapp.Infrastructure.ConfigureSwaggerOptions.Configure(Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions)">
            <inheritdoc />
        </member>
        <member name="T:webapp.Infrastructure.HttpRequestLoggingMiddleware">
            <summary>
            Writes logs in common format for any incoming HTTP request.
            </summary>
        </member>
        <member name="M:webapp.Infrastructure.HttpRequestLoggingMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.Infrastructure.HttpRequestLoggingMiddleware"/> class.
            </summary>
            <param name="next">Next <see cref="T:Microsoft.AspNetCore.Http.RequestDelegate"/> to execute. </param>
        </member>
        <member name="M:webapp.Infrastructure.HttpRequestLoggingMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Executes a middleware.
            </summary>
            <param name="httpContext">Current <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:webapp.Infrastructure.HttpRequestLoggingMiddleware.GetElapsedMilliseconds(System.Int64,System.Int64)">
            <summary>
            Get elapsed milliseconds based on elapsed ticks.
            </summary>
            <param name="start">Ticks on a start.</param>
            <param name="stop">Ticks in the end.</param>
            <returns>Elapsed milliseconds.</returns>
        </member>
        <member name="T:webapp.Infrastructure.JosekiStateManager">
            <summary>
            Knows when Joseki is Ready and Healthy.
            </summary>
        </member>
        <member name="M:webapp.Infrastructure.JosekiStateManager.ArchiverIsInitialized">
            <summary>
            Marks Archiver as initialized.
            </summary>
        </member>
        <member name="M:webapp.Infrastructure.JosekiStateManager.ScannerContainersIsInitialized">
            <summary>
            Marks Scanner Containers watchman as initialized.
            </summary>
        </member>
        <member name="M:webapp.Infrastructure.JosekiStateManager.ScoreCacheIsInitialized">
            <summary>
            Marks Infrastructure Score cache as initialized.
            </summary>
        </member>
        <member name="P:webapp.Infrastructure.JosekiStateManager.Ready">
            <summary>
            Joseki is ready to receive traffic, when infra-score cache is pre-loaded.
            </summary>
        </member>
        <member name="P:webapp.Infrastructure.JosekiStateManager.Live">
            <summary>
            Joseki is not in "live" state, if any watchman is not properly started.
            </summary>
        </member>
        <member name="T:webapp.Infrastructure.Watchman">
            <summary>
            Indicates what watchmen were started.
            </summary>
        </member>
        <member name="F:webapp.Infrastructure.Watchman.None">
            <summary>
            No pre-processors has been finished.
            </summary>
        </member>
        <member name="F:webapp.Infrastructure.Watchman.ScoreCache">
            <summary>
            Infrastructure score cache is warmed up.
            </summary>
        </member>
        <member name="F:webapp.Infrastructure.Watchman.Archiver">
            <summary>
            Archiver is started.
            </summary>
        </member>
        <member name="F:webapp.Infrastructure.Watchman.ScannerContainers">
            <summary>
            Scanner Containers watchman is started.
            </summary>
        </member>
        <member name="F:webapp.Infrastructure.Watchman.All">
            <summary>
            All are initialized.
            </summary>
        </member>
        <member name="T:webapp.Infrastructure.SwaggerDefaultValues">
            <summary>
            Represents the Swagger/Swashbuckle operation filter used to document the implicit API version parameter.
            </summary>
            <remarks>This <see cref="T:Swashbuckle.AspNetCore.SwaggerGen.IOperationFilter"/> is only required due to bugs in the <see cref="T:Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator"/>.
            Once they are fixed and published, this class can be removed.</remarks>
        </member>
        <member name="M:webapp.Infrastructure.SwaggerDefaultValues.Apply(Microsoft.OpenApi.Models.OpenApiOperation,Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext)">
            <summary>
            Applies the filter to the specified operation using the given context.
            </summary>
            <param name="operation">The operation to apply the filter to.</param>
            <param name="context">The current operation filter context.</param>
        </member>
        <member name="T:webapp.Models.Check">
            <summary>
            Check against a component.
            </summary>
        </member>
        <member name="P:webapp.Models.Check.Date">
            <summary>
            the date of the check.
            </summary>
        </member>
        <member name="P:webapp.Models.Check.Collection">
            <summary>
            Name of the collection.
            kubernetes: namespace.
            azks: resource-group.
            </summary>
        </member>
        <member name="P:webapp.Models.Check.Category">
            <summary>
            category of the check
            kubernetes: polaris/trivy category.
            azks: feature name.
            </summary>
        </member>
        <member name="P:webapp.Models.Check.Resource">
            <summary>
            the resource of check made against.
            k8s: object (deployment, pod, service etc).
            azks: resource (keyvault etc).
            </summary>
        </member>
        <member name="P:webapp.Models.Check.Control">
            <summary>
            The control name of the check.
            k8s: polaris `check` name.
            azks: azks `control` name.
            </summary>
        </member>
        <member name="P:webapp.Models.Check.Result">
            <summary>
            Result of the check.
            </summary>
        </member>
        <member name="P:webapp.Models.Check.Tags">
            <summary>
            Key-value pairs with custom labels/tags/attributes.
            </summary>
        </member>
        <member name="M:webapp.Models.Check.#ctor(System.DateTime,webapp.Models.Collection,webapp.Models.Resource,System.String,webapp.Models.CheckControl,webapp.Models.CheckResult)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.Models.Check"/> class.
            create unique id on constructor.
            </summary>
        </member>
        <member name="T:webapp.Models.CheckControl">
            <summary>
            Control tag and description of a check.
            (eg: namespace: default, resource group: common).
            </summary>
        </member>
        <member name="P:webapp.Models.CheckControl.Id">
            <summary>
            Id of the control.
            </summary>
        </member>
        <member name="P:webapp.Models.CheckControl.Message">
            <summary>
            Message of the control.
            </summary>
        </member>
        <member name="M:webapp.Models.CheckControl.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.Models.CheckControl"/> class.
            control constructor.
            </summary>
            <param name="id">id of control.</param>
            <param name="message">message of control.</param>
        </member>
        <member name="T:webapp.Models.CheckResult">
            <summary>
            Severity of the check.
            </summary>
        </member>
        <member name="F:webapp.Models.CheckResult.NoData">
            <summary>
            Enum value when a scan was not found
            </summary>
        </member>
        <member name="F:webapp.Models.CheckResult.Failed">
            <summary>
            Enum value when a scan failed
            </summary>
        </member>
        <member name="F:webapp.Models.CheckResult.Warning">
            <summary>
            Enum value when a scan has warning
            </summary>
        </member>
        <member name="F:webapp.Models.CheckResult.Success">
            <summary>
            Enum value when a scan succeeded
            </summary>
        </member>
        <member name="T:webapp.Models.Collection">
            <summary>
            Collection type and name of a check.
            (eg: namespace: default, resource group: common).
            </summary>
        </member>
        <member name="P:webapp.Models.Collection.Type">
            <summary>
            Type of the collection.
            </summary>
        </member>
        <member name="P:webapp.Models.Collection.Name">
            <summary>
            Name of the collection.
            </summary>
        </member>
        <member name="M:webapp.Models.Collection.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.Models.Collection"/> class.
            collection constructor.
            </summary>
            <param name="type">type of collection.</param>
            <param name="name">name of collection.</param>
        </member>
        <member name="T:webapp.Models.ContainerImageScanResult">
            <summary>
            Represents container image scan result.
            </summary>
        </member>
        <member name="P:webapp.Models.ContainerImageScanResult.Image">
            <summary>
            The full image name.
            </summary>
        </member>
        <member name="P:webapp.Models.ContainerImageScanResult.Date">
            <summary>
            The scan date.
            </summary>
        </member>
        <member name="P:webapp.Models.ContainerImageScanResult.ScanResult">
            <summary>
            Scan result.
            </summary>
        </member>
        <member name="P:webapp.Models.ContainerImageScanResult.Description">
            <summary>
            Description for Failed scans.
            </summary>
        </member>
        <member name="P:webapp.Models.ContainerImageScanResult.Counters">
            <summary>
            Counts issues by Severity.
            </summary>
        </member>
        <member name="P:webapp.Models.ContainerImageScanResult.Targets">
            <summary>
            List of scanned targets.
            </summary>
        </member>
        <member name="T:webapp.Models.ContainerImageScanResultDiff">
            <summary>
            Represents scan result for the same image, but for two dates.
            Used to display Image scan diff page.
            </summary>
        </member>
        <member name="P:webapp.Models.ContainerImageScanResultDiff.Scan1">
            <summary>
            The result of image scan at Date1.
            </summary>
        </member>
        <member name="P:webapp.Models.ContainerImageScanResultDiff.Scan2">
            <summary>
            The result of image scan at Date2.
            </summary>
        </member>
        <member name="T:webapp.Models.ScanResult">
            <summary>
            Scan result enum.
            </summary>
        </member>
        <member name="F:webapp.Models.ScanResult.NotFound">
            <summary>
            Enum value when a scan was not found.
            </summary>
        </member>
        <member name="F:webapp.Models.ScanResult.Failed">
            <summary>
            Enum value when a scan failed.
            </summary>
        </member>
        <member name="F:webapp.Models.ScanResult.Succeeded">
            <summary>
            Enum value when a scan succeeded.
            </summary>
        </member>
        <member name="T:webapp.Models.VulnerabilityCounters">
            <summary>
            Represents the amount of issues with a particular severity.
            </summary>
        </member>
        <member name="P:webapp.Models.VulnerabilityCounters.Severity">
            <summary>
            The CVE severity.
            </summary>
        </member>
        <member name="P:webapp.Models.VulnerabilityCounters.Count">
            <summary>
            Amount of CVEs with this severity.
            </summary>
        </member>
        <member name="T:webapp.Models.ImageScanTarget">
            <summary>
            List of vulnerabilities in the scanned target (OS and application packages).
            </summary>
        </member>
        <member name="P:webapp.Models.ImageScanTarget.Target">
            <summary>
            The target name. for example, OS name or ruby gems file.
            </summary>
        </member>
        <member name="P:webapp.Models.ImageScanTarget.Vulnerabilities">
            <summary>
            The list of found vulnerabilities.
            </summary>
        </member>
        <member name="T:webapp.Models.VulnerabilityDescription">
            <summary>
            Single vulnerability details.
            </summary>
        </member>
        <member name="P:webapp.Models.VulnerabilityDescription.VulnerabilityID">
            <summary>
            CVE identifier.
            </summary>
        </member>
        <member name="P:webapp.Models.VulnerabilityDescription.DependenciesWithCVE">
            <summary>
            Packages that have CVE or depend on a package with CVE.
            </summary>
        </member>
        <member name="P:webapp.Models.VulnerabilityDescription.PkgName">
            <summary>
            Package name, where CVE was discovered.
            </summary>
        </member>
        <member name="P:webapp.Models.VulnerabilityDescription.InstalledVersion">
            <summary>
            The version of package in container.
            </summary>
        </member>
        <member name="P:webapp.Models.VulnerabilityDescription.Remediation">
            <summary>
            the version of package, where the CVE was fixed.
            </summary>
        </member>
        <member name="P:webapp.Models.VulnerabilityDescription.Title">
            <summary>
            Short CVE title.
            </summary>
        </member>
        <member name="P:webapp.Models.VulnerabilityDescription.Description">
            <summary>
            Detailed CVE description.
            </summary>
        </member>
        <member name="P:webapp.Models.VulnerabilityDescription.Severity">
            <summary>
            The severity.
            </summary>
        </member>
        <member name="P:webapp.Models.VulnerabilityDescription.References">
            <summary>
            List of references with further information.
            </summary>
        </member>
        <member name="T:webapp.Models.CountersSummary">
            <summary>
            Represents short summary of check-result counters.
            </summary>
        </member>
        <member name="P:webapp.Models.CountersSummary.Passed">
            <summary>
            Amount of Passed checks.
            </summary>
        </member>
        <member name="P:webapp.Models.CountersSummary.Failed">
            <summary>
            Amount of failed checks.
            </summary>
        </member>
        <member name="P:webapp.Models.CountersSummary.Warning">
            <summary>
            Amount of Warnings.
            </summary>
        </member>
        <member name="P:webapp.Models.CountersSummary.NoData">
            <summary>
            Amount of checks with no-data result: requires a manual verification or Joseki is not able to perform the check.
            </summary>
        </member>
        <member name="P:webapp.Models.CountersSummary.Total">
            <summary>
            Total checks amount.
            </summary>
        </member>
        <member name="P:webapp.Models.CountersSummary.Score">
            <summary>
            The audit score. It indicates how close the infrastructure is to known best-practices configuration.
            NoData checks are excluded, Passed and Failed has doubled weight.
            The final formula is Passed*2/(Failed*2 + Passed*2 + Warning).
            </summary>
        </member>
        <member name="M:webapp.Models.CountersSummary.Add(webapp.Models.CountersSummary)">
            <summary>
            Adds counters from another Summary to the current one.
            </summary>
            <param name="another">counters to add.</param>
        </member>
        <member name="T:webapp.Models.InfrastructureCategory">
            <summary>
            Enumerates possible infrastructure categories.
            </summary>
        </member>
        <member name="F:webapp.Models.InfrastructureCategory.Overall">
            <summary>
            Overall infrastructure.
            </summary>
        </member>
        <member name="F:webapp.Models.InfrastructureCategory.Subscription">
            <summary>
            Cloud Subscription.
            </summary>
        </member>
        <member name="F:webapp.Models.InfrastructureCategory.Kubernetes">
            <summary>
            Kubernetes cluster.
            </summary>
        </member>
        <member name="T:webapp.Models.InfrastructureComponent">
            <summary>
            The class for Infrastructure Component object.
            </summary>
        </member>
        <member name="M:webapp.Models.InfrastructureComponent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.Models.InfrastructureComponent"/> class.
            Creates random id on constructor.
            </summary>
        </member>
        <member name="M:webapp.Models.InfrastructureComponent.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.Models.InfrastructureComponent"/> class.
            </summary>
            <param name="id">Component identifier.</param>
        </member>
        <member name="P:webapp.Models.InfrastructureComponent.Id">
            <summary>
            The unique Id of a component.
            </summary>
        </member>
        <member name="P:webapp.Models.InfrastructureComponent.Name">
            <summary>
            The name of the component: dev-cluster, subscription-1, etc.
            </summary>
        </member>
        <member name="P:webapp.Models.InfrastructureComponent.Category">
            <summary>
            The bucket of infrastructure component: Cloud Subscription, Kubernetes cluster, etc.
            </summary>
        </member>
        <member name="T:webapp.Models.InfrastructureComponentDiff">
            <summary>
            Returns infrastructure summary diff.
            </summary>
        </member>
        <member name="P:webapp.Models.InfrastructureComponentDiff.Summary1">
            <summary>
            First Component infrastructure summary.
            </summary>
        </member>
        <member name="P:webapp.Models.InfrastructureComponentDiff.Summary2">
            <summary>
            Second Component infrastructure summary.
            </summary>
        </member>
        <member name="T:webapp.Models.InfrastructureComponentSummary">
            <summary>
            Summarizes a single infrastructure unit stats: score, trends, name.
            </summary>
        </member>
        <member name="P:webapp.Models.InfrastructureComponentSummary.Date">
            <summary>
            The generation date of the Summary.
            </summary>
        </member>
        <member name="P:webapp.Models.InfrastructureComponentSummary.Component">
            <summary>
            The component of the current summary.
            </summary>
        </member>
        <member name="P:webapp.Models.InfrastructureComponentSummary.Current">
            <summary>
            Latest known check-result counters.
            </summary>
        </member>
        <member name="P:webapp.Models.InfrastructureComponentSummary.Checks">
            <summary>
            List of every check in component.
            </summary>
        </member>
        <member name="P:webapp.Models.InfrastructureComponentSummary.CategorySummaries">
            <summary>
            Summaries of all categories mentioned in Checks array.
            </summary>
        </member>
        <member name="T:webapp.Models.InfrastructureComponentSummaryWithHistory">
            <summary>
            Summarizes a single infrastructure unit stats: score, trends, name.
            </summary>
        </member>
        <member name="P:webapp.Models.InfrastructureComponentSummaryWithHistory.ScoreHistory">
            <summary>
            Holds Scores per last 30 days.
            If no data for a day - places 0.
            </summary>
        </member>
        <member name="T:webapp.Models.CheckCategorySummary">
            <summary>
            Describes Check category: polaris-networking, azure-storage-accounts, etc.
            </summary>
        </member>
        <member name="P:webapp.Models.CheckCategorySummary.Category">
            <summary>
            Human-readable category name.
            </summary>
        </member>
        <member name="P:webapp.Models.CheckCategorySummary.Description">
            <summary>
            Detailed category description.
            </summary>
        </member>
        <member name="T:webapp.Models.InfrastructureOverview">
            <summary>
            Returns infrastructure summary: scores by category, counters, etc.
            </summary>
        </member>
        <member name="P:webapp.Models.InfrastructureOverview.Overall">
            <summary>
            Overall infrastructure summary.
            </summary>
        </member>
        <member name="P:webapp.Models.InfrastructureOverview.Components">
            <summary>
            Separate summary for each involved component.
            </summary>
        </member>
        <member name="T:webapp.Models.InfrastructureOverviewDiff">
            <summary>
            Returns infrastructure summary: scores by category, counters, etc.
            </summary>
        </member>
        <member name="P:webapp.Models.InfrastructureOverviewDiff.Overall1">
            <summary>
            First overall infrastructure summary.
            </summary>
        </member>
        <member name="P:webapp.Models.InfrastructureOverviewDiff.Overall2">
            <summary>
            Second overall infrastructure summary.
            </summary>
        </member>
        <member name="P:webapp.Models.InfrastructureOverviewDiff.Components1">
            <summary>
            Components of first summary.
            </summary>
        </member>
        <member name="P:webapp.Models.InfrastructureOverviewDiff.Components2">
            <summary>
            Components of second summary.
            </summary>
        </member>
        <member name="T:webapp.Models.KnowledgebaseItem">
            <summary>
            Represents content of Knowledgebase entry.
            </summary>
        </member>
        <member name="F:webapp.Models.KnowledgebaseItem.NotFound">
            <summary>
            Represents not found entity.
            </summary>
        </member>
        <member name="M:webapp.Models.KnowledgebaseItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.Models.KnowledgebaseItem"/> class.
            </summary>
            <param name="id">Item public identifier.</param>
            <param name="content">The item content.</param>
        </member>
        <member name="M:webapp.Models.KnowledgebaseItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.Models.KnowledgebaseItem"/> class.
            </summary>
        </member>
        <member name="P:webapp.Models.KnowledgebaseItem.Id">
            <summary>
            Knowledgebase entry identifier.
            </summary>
        </member>
        <member name="P:webapp.Models.KnowledgebaseItem.Content">
            <summary>
            Knowledgebase entry content.
            </summary>
        </member>
        <member name="T:webapp.Models.Resource">
            <summary>
            Resource of a check.
            </summary>
        </member>
        <member name="P:webapp.Models.Resource.Id">
            <summary>
            Id of the resource.
            </summary>
        </member>
        <member name="P:webapp.Models.Resource.Name">
            <summary>
            Name of the resource.
            </summary>
        </member>
        <member name="P:webapp.Models.Resource.Type">
            <summary>
            Type of the resource.
            </summary>
        </member>
        <member name="M:webapp.Models.Resource.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.Models.Resource"/> class.
            Resource constructor.
            </summary>
            <param name="id">id of Resource.</param>
            <param name="type">type of Resource.</param>
            <param name="name">name of Resource.</param>
        </member>
        <member name="T:webapp.Models.ScoreHistoryItem">
            <summary>
            Represents the score of component at a given date.
            </summary>
        </member>
        <member name="M:webapp.Models.ScoreHistoryItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.Models.ScoreHistoryItem"/> class with default values.
            </summary>
        </member>
        <member name="M:webapp.Models.ScoreHistoryItem.#ctor(System.DateTime,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.Models.ScoreHistoryItem"/> class with provided Date and Score values.
            </summary>
            <param name="date">The date of the score record.</param>
            <param name="score">The score value.</param>
        </member>
        <member name="P:webapp.Models.ScoreHistoryItem.RecordedAt">
            <summary>
            The date of the Score.
            </summary>
        </member>
        <member name="P:webapp.Models.ScoreHistoryItem.Score">
            <summary>
            Score value.
            </summary>
        </member>
        <member name="T:webapp.Program">
            <summary>
            The entry point.
            </summary>
        </member>
        <member name="M:webapp.Program.Main(System.String[])">
            <summary>
            The entry point.
            </summary>
            <param name="args">Input arguments.</param>
        </member>
        <member name="M:webapp.Program.CreateHostBuilder(System.String[])">
            <summary>
            Creates a new instance of ASP.NET core application.
            </summary>
            <param name="args">Arguments.</param>
            <returns>HostBuilder object.</returns>
        </member>
        <member name="T:webapp.Queues.AzureStorageQueue">
            <summary>
            Azure Storage Queue implementation of Queue Service.
            </summary>
        </member>
        <member name="M:webapp.Queues.AzureStorageQueue.#ctor(webapp.Configuration.ConfigurationParser)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.Queues.AzureStorageQueue"/> class.
            </summary>
            <param name="parser">The service configuration.</param>
        </member>
        <member name="M:webapp.Queues.AzureStorageQueue.EnqueueImageScanRequest(webapp.Database.Models.ImageScanResultWithCVEs)">
            <inheritdoc />
        </member>
        <member name="T:webapp.Queues.ImageScanRequestMessage">
            <summary>
            The image scan request details.
            </summary>
        </member>
        <member name="P:webapp.Queues.ImageScanRequestMessage.Headers">
            <summary>
            Message headers: when the message was created, what is the version of payload, etc.
            </summary>
        </member>
        <member name="P:webapp.Queues.ImageScanRequestMessage.Payload">
            <summary>
            Image Scan Request details: image tag, etc.
            </summary>
        </member>
        <member name="T:webapp.Queues.MessageHeaders">
            <summary>
            Message headers: when the message was created, what is the version of payload, etc.
            </summary>
        </member>
        <member name="P:webapp.Queues.MessageHeaders.CreationTime">
            <summary>
            Unix epoch time, when the scan was requested.
            </summary>
        </member>
        <member name="P:webapp.Queues.MessageHeaders.PayloadVersion">
            <summary>
            The version of message payload.
            </summary>
        </member>
        <member name="T:webapp.Queues.ImageScanRequestPayload">
            <summary>
            The Image Scan Request message payload.
            </summary>
        </member>
        <member name="F:webapp.Queues.ImageScanRequestPayload.VERSION">
            <summary>
            The version of payload.
            </summary>
        </member>
        <member name="P:webapp.Queues.ImageScanRequestPayload.ImageScanId">
            <summary>
            Unique image-scan identifier.
            </summary>
        </member>
        <member name="P:webapp.Queues.ImageScanRequestPayload.ImageFullName">
            <summary>
            The complete image name including registry, and tag.
            </summary>
        </member>
        <member name="T:webapp.Queues.IQueue">
            <summary>
            Represents Queue Service Service.
            </summary>
        </member>
        <member name="M:webapp.Queues.IQueue.EnqueueImageScanRequest(webapp.Database.Models.ImageScanResultWithCVEs)">
            <summary>
            Enqueue a single image scan request.
            </summary>
            <param name="imageScan">The image-scan details.</param>
            <returns>A task object.</returns>
        </member>
        <member name="T:webapp.Startup">
            <summary>
            Startup class.
            </summary>
        </member>
        <member name="M:webapp.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:webapp.Startup"/> class.
            </summary>
            <param name="configuration">The application configuration object.</param>
        </member>
        <member name="P:webapp.Startup.Configuration">
            <summary>
            The application configuration object.
            </summary>
        </member>
        <member name="M:webapp.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services">Services collection.</param>
        </member>
        <member name="M:webapp.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.AspNetCore.Mvc.ApiExplorer.IApiVersionDescriptionProvider)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app">Builder object.</param>
            <param name="env">Environment configuration.</param>
            <param name="provider">API version provider.</param>
        </member>
        <member name="M:webapp.Startup.RunDbMigrations(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Apply database schema migrations on service startup.
            </summary>
            <param name="app">A instance of <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.</param>
        </member>
    </members>
</doc>
