---
apiVersion: v1
kind: ConfigMap
metadata:
  name: scanner-polaris-cfg
  namespace: joseki
  labels:
    app: scanner-polaris
    module: scanners
    version: '#{polaris.imageTag}#'
data:
  scanner-polaris-config.yaml:  |
    scanner:
      id: #{polaris.scannerId}#
      cluster-id: #{polaris.clusterId}#
      periodicity: "0 2 * * *"
      heartbeat-periodicity: 86400
      version: #{polaris.imageTag}#
    polaris:
      configPath: /app/polaris-config.yaml
      version: 0.6.0
    blobStorageType: azure-blob-storage
    azureBlob:
      storageBaseUrl: https://#{polaris.storageName}#.blob.core.windows.net/#{polaris.containerName}#
      sasToken: #{polaris.storageSas}#
    logFormat: plain-text
  polaris-config.yaml:  |
    checks:
      # resources
      cpuRequestsMissing: warning
      cpuLimitsMissing: warning
      memoryRequestsMissing: warning
      memoryLimitsMissing: warning
      # images
      tagNotSpecified: error
      pullPolicyNotAlways: ignore
      # healthChecks
      readinessProbeMissing: warning
      livenessProbeMissing: warning
      # networking
      hostNetworkSet: warning
      hostPortSet: warning
      # security
      hostIPCSet: error
      hostPIDSet: error
      notReadOnlyRootFileSystem: warning
      privilegeEscalationAllowed: error
      runAsRootAllowed: warning
      runAsPrivileged: error
      dangerousCapabilities: error
      insecureCapabilities: warning
    controllersToScan:
      - Deployments
      - StatefulSets
      - DaemonSets
      - CronJobs
      - Jobs
      - ReplicationControllers
    exemptions:
      - controllerNames:
          - dns-controller
          - datadog-datadog
          - kube-flannel-ds
          - kube2iam
          - aws-iam-authenticator
          - datadog
          - kube2iam
        rules:
          - hostNetworkSet
      - controllerNames:
          - aws-iam-authenticator
          - aws-cluster-autoscaler
          - kube-state-metrics
          - dns-controller
          - external-dns
          - dnsmasq
          - autoscaler
          - kubernetes-dashboard
          - install-cni
          - kube2iam
        rules:
          - readinessProbeMissing
          - livenessProbeMissing
      - controllerNames:
          - aws-iam-authenticator
          - nginx-ingress-controller
          - nginx-ingress-default-backend
          - aws-cluster-autoscaler
          - kube-state-metrics
          - dns-controller
          - external-dns
          - kubedns
          - dnsmasq
          - autoscaler
          - tiller
          - kube2iam
        rules:
          - runAsRootAllowed
      - controllerNames:
          - aws-iam-authenticator
          - nginx-ingress-controller
          - nginx-ingress-default-backend
          - aws-cluster-autoscaler
          - kube-state-metrics
          - dns-controller
          - external-dns
          - kubedns
          - dnsmasq
          - autoscaler
          - tiller
          - kube2iam
        rules:
          - notReadOnlyRootFileSystem
      - controllerNames:
          - cert-manager
          - dns-controller
          - kubedns
          - dnsmasq
          - autoscaler
          - insights-agent-goldilocks-vpa-install
        rules:
          - cpuRequestsMissing
          - cpuLimitsMissing
          - memoryRequestsMissing
          - memoryLimitsMissing
      - controllerNames:
          - kube2iam
          - kube-flannel-ds
        rules:
          - runAsPrivileged
      - controllerNames:
          - kube-hunter
        rules:
          - hostPIDSet
      - controllerNames:
          - polaris
          - kube-hunter
          - goldilocks
          - insights-agent-goldilocks-vpa-install
        rules:
          - notReadOnlyRootFileSystem
      - controllerNames:
          - insights-agent-goldilocks-controller
        rules:
          - livenessProbeMissing
          - readinessProbeMissing
      - controllerNames:
          - insights-agent-goldilocks-vpa-install
          - kube-hunter
        rules:
          - runAsRootAllowed

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: scanner-polaris
  namespace: joseki
  labels:
    app: scanner-polaris
    module: scanners

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: scanner-polaris
  labels:
    app: scanner-polaris
    module: scanners
rules:
  - apiGroups:
      - 'apps'
      - 'extensions'
    resources:
      - 'deployments'
      - 'statefulsets'
      - 'daemonsets'
    verbs:
      - 'get'
      - 'list'
  - apiGroups:
      - 'batch'
    resources:
      - 'jobs'
      - 'cronjobs'
    verbs:
      - 'get'
      - 'list'
  - apiGroups:
      - ''
    resources:
      - 'nodes'
      - 'namespaces'
      - 'pods'
      - 'replicationcontrollers'
    verbs:
      - 'get'
      - 'list'

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: scanner-polaris
  labels:
    app: scanner-polaris
    module: scanners
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: scanner-polaris
subjects:
  - kind: ServiceAccount
    name: scanner-polaris
    namespace: joseki

---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: scanner-polaris
  namespace: joseki
  labels:
    app: scanner-polaris
    module: scanners
    version: '#{polaris.imageTag}#'
spec:
  schedule: "0 2 * * *"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: scanner-polaris
            image: 'deepnetwork/joseki-scanner-polaris:#{polaris.imageTag}#'
            imagePullPolicy: Always
            args:
            - --config
            - /app/scanner-polaris-config.yaml
            volumeMounts:
            - name: config
              mountPath: /app/scanner-polaris-config.yaml
              subPath: scanner-polaris-config.yaml
              readOnly: true
            - name: config
              mountPath: /app/polaris-config.yaml
              subPath: polaris-config.yaml
              readOnly: true
          volumes:
            - name: config
              configMap:
                name: scanner-polaris-cfg
          restartPolicy: Never
          serviceAccountName: scanner-polaris