name: frontend_ci_master

on: 
  push:
    branches:
    - master
    paths:
      - '.github/workflows/frontend_master.yml'
      - 'src/frontend/**'
      - '!src/frontend/*.md'

jobs:
  build-n-push:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2.3.1

    - name: Set env vars
      run: |
        echo "::set-env name=SERVICE_ROOT::src/frontend/"
        echo "::set-env name=DOCKERFILE_PATH::src/frontend/dockerfile"

        docker_repository="deepnetwork/joseki-frontend"
        echo "::set-env name=DOCKER_REPOSITORY::$docker_repository"

        version=$(cat src/frontend/version)
        SHA8=$(echo $GITHUB_SHA | cut -c1-8)
        tag_dev="$version-sha-$SHA8"
        echo "::set-env name=VERSION_TAG::$version"
        echo "::set-env name=DEV_TAG::$tag_dev"

    - name: lint dockerfile
      uses: brpaz/hadolint-action@v1.1.0
      with:
        dockerfile: ${{ env.DOCKERFILE_PATH }}

    - name: build dockerimage
      uses: docker/build-push-action@v1.1.0
      with:
        path: ${{ env.SERVICE_ROOT }}
        dockerfile: ${{ env.DOCKERFILE_PATH }}
        target: webapp
        repository: ${{ env.DOCKER_REPOSITORY }}
        tags: ${{ env.VERSION_TAG }}, ${{ env.DEV_TAG }}, edge
        add_git_labels: true
        push: false

    - name: scan image for CVEs
      uses: 'docker://aquasec/trivy:0.9.1'
      with:
        args: --exit-code 1 --severity HIGH,CRITICAL "${{ env.DOCKER_REPOSITORY }}:${{ env.DEV_TAG }}"

    - name: Docker Login
      uses: Azure/docker-login@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: push dockerimage
      run: |
        docker push "${{ env.DOCKER_REPOSITORY }}:${{ env.DEV_TAG }}"
        docker push "${{ env.DOCKER_REPOSITORY }}:${{ env.VERSION_TAG }}"
        docker push "${{ env.DOCKER_REPOSITORY }}:edge"

    - name: deploy to k8s
      env:
        IMAGE_TAG: ${{ env.DEV_TAG }}
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        FE_CONFIG_DATA: ${{ secrets.FE_CONFIG_DATA }}
      run: |
        echo "$KUBE_CONFIG_DATA" | base64 --decode > /tmp/config
        export KUBECONFIG=/tmp/config

        CONFIG_PATH=examples/k8s/frontend/config.json
        echo "$FE_CONFIG_DATA" | base64 --decode > $CONFIG_PATH

        sed -i '' 's|#{fe.imageTag}#|'"$IMAGE_TAG"'|' examples/k8s/frontend/kustomization.yaml
        sed -i '' 's|#{fe.imageTag}#|'"$IMAGE_TAG"'|' examples/k8s/frontend/fe.yaml

        kubectl apply -f examples/k8s/frontend/rbac.yaml
        kubectl apply -k examples/k8s/frontend

        rm $CONFIG_PATH /tmp/config
